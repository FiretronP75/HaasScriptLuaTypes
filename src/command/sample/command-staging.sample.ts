import { CommandRaw } from '../command.raw';

export const commandStagingSample: CommandRaw[] = [
  {
    "CommandName": "AbandonedBabyType",
    "Command": 7854,
    "Description": "Enumeration, returns an enum for AbandonedBabyType type.",
    "ReturnDescription": "Returns the AbandonedBabyType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ABANDS",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6400,
    "CommandType": 1,
    "Category": 33,
    "Description": "Acceleration Bands (ABANDS) created by Price Headley.\n                            Plots bands around a simple moving average as the midpoint and the upper and lower\n                            bands are of equal distance from this midpoint.\n                            Look for breakouts outside these bands, while also using the shorter time frames\n                            to define likely support and resistance levels at the lower and upper Acceleration Bands. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns an array with 3 results arrays. Upper on index 1, middle on index 2 and lower on index 3.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "upper",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Upper bands of the ABands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "middle",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle bands of the ABands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "lower",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lower bands of the ABands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5,
      411
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Abs",
    "Description": "Calculates an absolute/positive number.",
    "ReturnDescription": "Returns an absolute/positive number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4006,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1009,
    "Description": "Compares the average entry price to current price, absolute value-based.",
    "CommandName": "AbsolutePriceChange",
    "ReturnDescription": "Returns true if the minimum price change percentage is reached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum absolute price change before the insurance agrees.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Default is the current buy or sell price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AccountGuid",
    "Parameters": [],
    "Command": 3600,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the main account guid of the bot.",
    "ReturnDescription": "Returns an account guid.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7604,
      7216,
      7606
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Acos",
    "Description": "Calculates the angle whose cosine is the specified number.",
    "ReturnDescription": "Returns the angle whose cosine is the specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A number representing a cosine, that must be greater than or equal to -1, but less than or equal to 1.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4007,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AD",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "volume",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Market volume array.",
        "ScriptType": null,
        "Suggestion": [
          5212
        ]
      }
    ],
    "Command": 6401,
    "CommandType": 1,
    "Category": 33,
    "Description": "Accumulation/Distribution Line (AD) Developed by Marc Chaikin, the Accumulation Distribution\nLine is a volume-based indicator designed to measure the cumulative flow of money into and out of a security. Chaikin\noriginally referred to the indicator as the Cumulative Money Flow Line. As with cumulative indicators, the Accumulation\nDistribution Line is a running total of each period's Money Flow Volume. First, a multiplier is calculated based on the\nrelationship of the close to the high-low range. Second, the Money Flow Multiplier is multiplied by the period's volume\nto come up with a Money Flow Volume. A running total of the Money Flow Volume forms the Accumulation Distribution Line. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the AD result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "Description": "Adds numbers/tables and returns the result number/table.",
    "CommandName": "Add",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "ReturnDescription": "Returns the total sum of a single value is provide, adds the 2 values if there are 2 provided.",
    "Command": 4008,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AddPerc",
    "Command": 4000,
    "CommandType": 1,
    "Category": 21,
    "Description": "Add a percentage to the value.",
    "ReturnDescription": "Returns the value with the added percentage.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AddPercentage",
    "Command": 4000,
    "CommandType": 1,
    "Category": 21,
    "Description": "Add a percentage to the value.",
    "ReturnDescription": "Returns the value with the added percentage.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AdjustTimestamp",
    "Command": 6811,
    "CommandType": 1,
    "Category": 35,
    "Description": "Adjusts an Unix timestamp.",
    "ReturnDescription": "Returns the new Unix timestamp.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unix timestamp, by default the current time..",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addSeconds",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of seconds to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addMinutes",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of minutes to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addHours",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of hours to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addDays",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of days to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addMonths",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of months to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "addYears",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of years to add.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AdjustVPosition",
    "Command": 4614,
    "CommandType": 1,
    "Category": 24,
    "Description": "Adjusts a virtual bot position by processing a simulated order using the defined specifications. Works similarly to PlaceExitLongOrder/PlaceExitShortOrder, but will NOT create a real order; only simulated!",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The close price of the position.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          7606
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to adjust: negative value reduces, positive value adds.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          7606
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique position identifier.",
        "ScriptType": null,
        "Suggestion": [
          6200,
          4406,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ADOSC",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "volume",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Market volume array.",
        "ScriptType": null,
        "Suggestion": [
          5212
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6402,
    "CommandType": 1,
    "Category": 33,
    "Description": "Developed by Marc Chaikin, the Chaikin Oscillator (ADOSC) measures the momentum of the\nAccumulation Distribution Line using the MACD formula. (This makes it an indicator of an indicator.)\nThe Chaikin Oscillator is the difference between the 3-day and 10-day EMAs of the Accumulation Distribution\nLine. Like other momentum indicators, this indicator is designed to anticipate directional changes in the\nAccumulation Distribution Line by measuring the momentum behind the movements.\nA momentum change is the first step to a trend change. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the ADOSC result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AdvanceBlockType",
    "Command": 7807,
    "Description": "Enumeration, returns an enum for AdvanceBlockType type.",
    "ReturnDescription": "Returns the AdvanceBlockType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ADX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6403,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Average Directional Index (ADX) depicts a presence or absence of a trend.\nADX advices on the strength of the dominant forces that move market prices here and now.\nIn other words, ADX advices on trend tendencies: whether the trend is going to continue\nand strengthen or it is about to lose its positions. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the ADX result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ADXR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6404,
    "CommandType": 1,
    "Category": 33,
    "Description": "Average Directional Movement Index Rating (ADXR) is a smoothed version\nof ADX indicator and is used as a rating of the Directional Movement while smoothing out ADX values.\nIf to compare ADXR to ADX, the smoother ADXR doesn't depend much on fast short-term market turns and\nreversals, which allows to minimize trading risks when relying on ADXR in the long term. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the ADXR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AmountCurrency",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7200,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets the amount label. For reflection, in case the market is Bitstamp BTC/USDit will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'contract(s)'.",
    "ReturnDescription": "Returns the amount label as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AmountDecimals",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 7218,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns a number of how many decimals is allowed for order amounts.",
    "ReturnDescription": "Returns the allowed decimal count.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AmountLabel",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7200,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets the amount label. For reflection, in case the market is Bitstamp BTC/USDit will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'contract(s)'.",
    "ReturnDescription": "Returns the amount label as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AmountStep",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7220,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the minimum allowed trade amount step for market.",
    "ReturnDescription": "Returns the trade amount step size.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "And",
    "Command": 3210,
    "CommandType": 1,
    "Category": 17,
    "Description": "Validates all values on being true.",
    "ReturnDescription": "Returns true all values are true.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 102,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The boolean to compare.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AO",
    "Parameters": [
      {
        "Index": 0,
        "Name": "hl2prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle prices array ([High + Low] / 2).",
        "ScriptType": null,
        "Suggestion": [
          5204
        ]
      },
      {
        "Index": 0,
        "Name": "shortLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Shorter period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "longLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Longer period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6405,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Awesome Oscillator (AO) shows the difference in between the 5 SMA and 34 SMA.\nIf to be precise, 5 SMA of mid-prices is subtracted from 34 SMA of mid-prices which allows to see the market momentum. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the AO result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "APO",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Faster period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slower period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MA type used in the calculation.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6406,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Absolute Price Oscillator (APO) displays the difference between two\nexponential moving averages of an asset's price and is expressed as an absolute value. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the APO result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Aqua",
    "Command": 1600,
    "Description": "Enumeration, returns a color hex string. Can be used as Aqua, Aqua() or with a specific opacity Aqua(10).",
    "ReturnDescription": "Returns hex string of aqua (#00FFFF)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AROON",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6407,
    "CommandType": 1,
    "Category": 33,
    "Description": "Aroon indicator is a young one, developed by Tushar Chande in 1995.\nAroon was created to measure the strength of a trend and potentials for its continuation as well\nas the quality and type of the trend: up-trend, down-trend or sideways moving market. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns an array with 2 results arrays. Aroon down on index 1 & Aroon up on index 2.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "aroonDn",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Aroon Down.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "aroonUp",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Aroon Up.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AROONOSC",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6408,
    "CommandType": 1,
    "Category": 33,
    "Description": "Aroon oscillator is based on Aroon Indicator. Aroon Oscillator is\na trend-following indicator that illustrates the strength of a current trend and its potentials to last. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the AROONOSC result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayAdd",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "element",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Element which to add to the array.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 0,
    "CommandType": 1,
    "Category": 0,
    "Description": "Adds an element to an existing array.",
    "ReturnDescription": "Returns the input array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayAny",
    "Command": 1,
    "CommandType": 1,
    "Category": 0,
    "Description": "Returns true if the array contains any element or an element matches a specific value.",
    "ReturnDescription": "Returns true if the input has any elements or if 'value' is defined when any of the elements matches the value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Optional value to match.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayConcat",
    "Command": 2,
    "CommandType": 1,
    "Category": 0,
    "Description": "Concatenates two arrays.",
    "ReturnDescription": "Returns the concatenated array.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "First array.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "array2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Second array.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayContains",
    "Command": 1,
    "CommandType": 1,
    "Category": 0,
    "Description": "Returns true if the array contains any element or an element matches a specific value.",
    "ReturnDescription": "Returns true if the input has any elements or if 'value' is defined when any of the elements matches the value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Optional value to match.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayDataType",
    "Command": 7905,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the ArrayDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayDistinct",
    "Command": 26,
    "CommandType": 1,
    "Category": 0,
    "Description": "Returns a new list with only unique elements. In other words; removes all duplicates.",
    "ReturnDescription": "Returns the unique values of the input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFilter",
    "Command": 4,
    "CommandType": 1,
    "Category": 0,
    "Description": "Returns a new list with elements that only matches the value. Matching-rules specified by filterType.",
    "ReturnDescription": "Returns the list.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value to match.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "filterType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of filter to use. Default is ArrayFilterInclusiveType.",
        "ScriptType": null,
        "Suggestion": [
          8000,
          8001,
          8002,
          8003
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFilterExclusiveType",
    "Command": 8001,
    "Description": "Exclusive filter type; will exclude all matching values.",
    "ReturnDescription": "Returns the ArrayFilterExclusiveType enum.",
    "CommandType": 15,
    "Category": 44,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFilterGreaterThanType",
    "Command": 8003,
    "Description": "GreaterThan filter type; will include all greater values.",
    "ReturnDescription": "Returns the ArrayFilterGreaterThanType enum.",
    "CommandType": 15,
    "Category": 44,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFilterInclusiveType",
    "Command": 8000,
    "Description": "Inclusive filter type; will include all matching values.",
    "ReturnDescription": "Returns the ArrayFilterInclusiveType enum.",
    "CommandType": 15,
    "Category": 44,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFilterLessThanType",
    "Command": 8002,
    "Description": "LessThan filter type; will include all lesser values.",
    "ReturnDescription": "Returns the ArrayFilterLessThanType enum.",
    "CommandType": 15,
    "Category": 44,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayFind",
    "Command": 25,
    "CommandType": 1,
    "Category": 0,
    "Description": "Returns a new list of indices of the matching values. Matching-rules specified by filterType.",
    "ReturnDescription": "Returns the list.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value to match.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "filterType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of filter to use. Default is ArrayFilterInclusiveType.",
        "ScriptType": null,
        "Suggestion": [
          8000,
          8001,
          8002,
          8003
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayGet",
    "Command": 5,
    "CommandType": 1,
    "Category": 0,
    "Description": "Gets the value on a specific index. A negative index will take from the end of the array.",
    "ReturnDescription": "Return the value on that index.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "index",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index to get.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayIndex",
    "Command": 5,
    "CommandType": 1,
    "Category": 0,
    "Description": "Gets the value on a specific index. A negative index will take from the end of the array.",
    "ReturnDescription": "Return the value on that index.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "index",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index to get.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayLast",
    "Command": 7,
    "CommandType": 1,
    "Category": 0,
    "Description": "Gets the last value of the array with an optional offset.",
    "ReturnDescription": "Return the last value of the array taking the offset into account.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The offset from the last index.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayPop",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 11,
    "CommandType": 1,
    "Category": 0,
    "Description": "Remove an item from the end of an array.",
    "ReturnDescription": "Returns the input array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayRemove",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "index",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index of the element to remove.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 24,
    "CommandType": 1,
    "Category": 0,
    "Description": "Removes an element from a specified index.",
    "ReturnDescription": "Returns the input array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayReplace",
    "Command": 18,
    "CommandType": 1,
    "Category": 0,
    "Description": "Replaces a specific value with another value.",
    "ReturnDescription": "The input with replaced values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "oldValue",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The old value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "newValue",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The new value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayShift",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 13,
    "CommandType": 1,
    "Category": 0,
    "Description": "Remove an item from the beginning of an array.",
    "ReturnDescription": "The input without the first value",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArraySort",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "descending",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order of the sort. If set to true, order will be descending. Otherwise ascending.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "Command": 16,
    "CommandType": 1,
    "Category": 0,
    "Description": "Sorts the array values in ascending or descending order.",
    "ReturnDescription": "Returns the sorted array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArraySum",
    "Command": 17,
    "CommandType": 1,
    "Category": 0,
    "Description": "Computes the sum of the array. Can be used in combination with a list of numbers or container results like GetAllOpenOrders() or GetAllFinishedOrders().",
    "ReturnDescription": "Returns the sum of the array.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The key of the data to be summed.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ArrayUnshift",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "element",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Element which to add to the array.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 14,
    "CommandType": 1,
    "Category": 0,
    "Description": "Adds an element to the beginning of an array.",
    "ReturnDescription": "The input with the element added in front of the array",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Asin",
    "Description": "Calculates the angle whose sine is the specified number.",
    "ReturnDescription": "Returns the angle whose sine is the specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4009,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AskPrices",
    "Command": 5200,
    "CommandType": 1,
    "Category": 27,
    "Description": "Gets the buy/ask prices.",
    "ReturnDescription": "Returns the buy/ask prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Atan",
    "Description": "Calculates the angle whose tangent is the specified number.",
    "ReturnDescription": "Returns the angle whose tangent is the specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A number representing a tangent.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4010,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Atan2",
    "Description": "Calculates the angle whose tangent is the quotient of two specified numbers.",
    "ReturnDescription": "Returns the angle whose tangent is the quotient of two specified numbers.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The y coordinate of a point.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The x coordinate of a point.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4011,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ATR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6409,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Average True Range (ATR), developed by Wilder, gives traders a feel of what the historical volatility\nwas in order to prepare for trading in the actual market.\nCurrency pairs that get lower ATR readings suggest lower market volatility, while currency pairs with higher\nATR indicator readings require appropriate trading adjustments according to higher volatility. \nWilder used the Moving average to smooth out the ATR indicator readings, so that ATR looks the way we know it. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the ATR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "Description": "Calculates the average value of the array, two numbers or averages between 2 arrays.",
    "ReturnDescription": "Returns the average value of the array, two numbers or averages between 2 arrays.",
    "CommandName": "Average",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4012,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "Description": "Calculates the average value of the array for a certain period.",
    "ReturnDescription": "Returns the average value of the array for a certain period.",
    "CommandName": "Average2",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source values.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4042,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AverageCandleSize",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5400,
    "CommandType": 1,
    "Category": 28,
    "Description": "Calculates the average candle body size of the last 50 minutes.",
    "ReturnDescription": "Returns the average candle body size.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AverageEnterPrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "includeClosed",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "True for total position amount (default), false for only open amount.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "Command": 201,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the average enter price.",
    "ReturnDescription": "Returns the average enter price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AverageExitPrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 200,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the average exit price.",
    "ReturnDescription": "Returns the average exit price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AverageOrderbookSpread",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5401,
    "CommandType": 1,
    "Category": 28,
    "Description": "Calculates the average orderbook bid/ask spread of the last 50 minutes.",
    "ReturnDescription": "Returns the average orderbook bid/ask spread.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AVGDEV",
    "Parameters": [
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6410,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Average Deviation (AVGDEV) is simply an averaged version of the Standard Deviation (STDDEV). This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the AVGDEV result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "AVGPRICE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "open",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Open prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6411,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Average Price (AVGPRICE) is the price between open, high, low and close (aka OHLC/4). This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the AVGPRICE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Balance",
    "ReturnDescription": "Returns a result object with the available, locked and total balance.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount() or InputAccountMarket() for example. Can be left empty for default properties.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "coin",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Coin of which to retrieve the wallet amount. Default value is the 'UnderlyingAsset' currency.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional market parameter for exchanges with separates wallet for each market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7608,
    "CommandType": 1,
    "Category": 39,
    "Description": "Total balance specifications of a specific currency. Available, locked and total balance. Does not work yet in backtests and for simulated accounts.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "available",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The available balance.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "locked",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The locked balance for orders and/or position margin among others.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "total",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The total balance. Available and locked.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BalanceAmount",
    "ReturnDescription": "Returns the total balance value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount() or InputAccountMarket() for example. Can be left empty for default properties.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "coin",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Coin of which to retrieve the wallet amount. Default value is the 'UnderlyingAsset' currency.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional market parameter for exchanges with separates wallet for each market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7607,
    "CommandType": 1,
    "Category": 39,
    "Description": "Total balance value of a specific currency. Including order and position margin. Does not work yet in backtests and for simulated accounts.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BaseCurrency",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7201,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the base currency of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'BTC'.",
    "ReturnDescription": "Returns the base currency as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BBANDS",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "devUp",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Standard deviation above the middle bands.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "devDn",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Standard deviation below the middle bands.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MA type used in the calculation.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6412,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Bollinger Band (BBANDS) study created\n                            by John Bollinger plots upper and lower envelope bands around the\n                            price of the instrument. The width of the bands is based on the\n                            standard deviation of the closing prices from a moving average of\n                            price. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns an array with 3 results arrays. Upper on index 1, middle on index 2 and lower on index 3.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "upper",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Upper band of the BBands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "middle",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle band of the BBands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "lower",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lower band of the BBands.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5,
      411
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BeltHoldType",
    "Command": 7808,
    "Description": "Enumeration, returns an enum for BeltHoldType type.",
    "ReturnDescription": "Returns the BeltHoldType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BETA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices1",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Asset's source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "prices2",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Market's source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lookback period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6413,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Beta (BETA) value can measure he volatility of a coin in relation to that of the market.\nFor stock investors the beta value[1] of a portfolio is an important measure of risk, a value above 1 means the\ninvestment is more volatile than the market, a value lower than 1 is less volatile.\nIt can be helpful to do a beta analysis for your portfolio to see how returns match up against the beta and\nspot real winners (low beta, high returns). Since most altcoins are still sold and bought using Bitcoin (BTC),\nits price could be used as the [Market's source data] (2nd input parameter), which results BTC a beta of 1. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the BETA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BidPrices",
    "Command": 5211,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with sell/ask prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of sell/ask prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Black",
    "Command": 1601,
    "Description": "Enumeration, returns a color hex string. Can be used as Black, Black() or with a specific opacity Black(10).",
    "ReturnDescription": "Returns hex string of black (#000000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Blue",
    "Command": 1602,
    "Description": "Enumeration, returns a color hex string. Can be used as Blue, Blue() or with a specific opacity Blue(10).",
    "ReturnDescription": "Returns hex string of blue (#0000CC)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BoolDataType",
    "Command": 7902,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the BoolDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BooleanType",
    "Command": 2200,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the BooleanType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BoolToSignal",
    "Command": 6019,
    "Description": "Converts 4 boolean values to a signal.",
    "ReturnDescription": "The signal as a result of the boolean values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "isLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, SignalLong will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "isShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, SignalShort will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "isExit",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, SignalExitPosition will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "isNone",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, SignalNone will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BOP",
    "Parameters": [
      {
        "Index": 0,
        "Name": "open",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Open prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6414,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Balance of Power (BOP) indicator measures the market\nstrength of buyers against sellers by assessing the ability of each side to drive prices to an extreme level.\nThe resulting values can be smoothed by a moving average. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the BOP result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BothCenterCrossType",
    "Command": 2607,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the BothCenterCrossType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BothThresholdType",
    "Command": 2610,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the BothThresholdType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BreakawayType",
    "Command": 7809,
    "Description": "Enumeration, returns an enum for BreakawayType type.",
    "ReturnDescription": "Returns the BreakawayType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "BroadcastToDiscord",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The content of the message",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 8103,
    "CommandType": 1,
    "Category": 45,
    "Description": "Send a text message to Discord.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "BroadcastToTelegram",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The content of the message",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 8101,
    "CommandType": 1,
    "Category": 45,
    "Description": "Send a text message to your Telegram.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "BuyPrices",
    "Command": 5200,
    "CommandType": 1,
    "Category": 27,
    "Description": "Gets the buy/ask prices.",
    "ReturnDescription": "Returns the buy/ask prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CallbackType",
    "Command": 2201,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the CallbackType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CancelAllOrders",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4800,
    "CommandType": 1,
    "Category": 25,
    "Description": "Cancels all open orders.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "CancelOrder",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4801,
    "CommandType": 1,
    "Category": 25,
    "Description": "Sends out a cancel order for the given order identifier.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "Candlestick",
    "Command": 1412,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the Candlestick enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CandlestickHLC",
    "Command": 1413,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the CandlestickHLC enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "dec2e311e0dabedcbb569b9ead48cd1a",
    "IsValid": true,
    "CommandName": "CC_BBandsStopLoss",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Stoploss based on the BBands.",
    "ReturnDescription": "Safety result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "source",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data for BBands.",
        "ScriptType": null,
        "Suggestion": [
          5201,
          5204,
          5203,
          5208
        ]
      },
      {
        "Index": 0,
        "Name": "maPeriod",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "BBands MA Period Length.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "devMult",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Deviation Multiplier.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "BBands MA Type.",
        "ScriptType": null,
        "Suggestion": [
          3407
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Optional position identifier",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      7002,
      3210,
      3206,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "c5145ec90a6920c0dd95bf95852370e8",
    "IsValid": true,
    "CommandName": "CC_ContinuousSignal",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Keeps the signal continuous for a number of minutes. Only switches when the signal changes from long to short.",
    "ReturnDescription": "The continuous signal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal",
        "ScriptType": null,
        "Suggestion": [
          6019,
          6012,
          6013,
          6000,
          6001,
          6002,
          6003,
          6004,
          6011,
          6005,
          6006,
          6014,
          6007,
          6021,
          6008,
          6009,
          6016,
          6017,
          6018,
          6020,
          6015,
          6010,
          800,
          801,
          837,
          802,
          803,
          804,
          805,
          806,
          841,
          842,
          807,
          808,
          838,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          850,
          840,
          844,
          851,
          816,
          817,
          818,
          819,
          845,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          846,
          839,
          829,
          830,
          831,
          843,
          832,
          833,
          834,
          852,
          835,
          836
        ]
      },
      {
        "Index": 0,
        "Name": "minutes",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of minutes to keep the signal continious",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7000,
      7003,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "f6e0dfc58e640d039feba897bf92729b",
    "IsValid": true,
    "CommandName": "CC_CryptoIndexSlot",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "The Crypto Index Slot maintains the wallet for a certain index.",
    "ReturnDescription": "Returns a position id related to the index. Can be used to do profit calculations",
    "Parameters": [
      {
        "Index": 0,
        "Name": "coin",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index coin",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "baseCoin",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base coin of the whole index. Usually BTC or USD(T)",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "allocatedAmount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Total allocated amount",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "buyLevel",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage the price needs to drop before more is bought.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "sellLevel",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage the price needs to raise before more is sold.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "stopLoss",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Stop loss percentage. Once the stop loss has been reached the position will be solded fully.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "trailingStop",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Trailing stop loss percentage. Once the stop loss has been reached the position will be solded fully.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "takeOverWallet",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If set on true, excessive balance will be sold.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "ScriptId": "d34dd289850812ddeec4feac78a246cc",
    "IsValid": true,
    "CommandName": "CC_CVOLB_LB",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Lazy Bear - Colored Volume Bars. Buy the green or blue volume bars, use a 1% trailing stop, and stand aside on red or orange bars. ",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "40262f3d348b18d874023ed5752302ec",
    "IsValid": true,
    "CommandName": "CC_EasyAdaptiveRSI",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Adaptive RSI by Alex Orekhov",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "0314b07e1dd4f97c131261b0e2efaca4",
    "IsValid": true,
    "CommandName": "CC_EasyForceIndex",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "The Force Index is an indicator that uses price and volume to assess the power behind a move or identify possible turning points. ",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "d483be41a324ed7357b69f75b747228d",
    "IsValid": true,
    "CommandName": "CC_EasyHullMA",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Double Hull MA",
    "ReturnDescription": "",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": null,
    "ChangeTypes": []
  },
  {
    "ScriptId": "18828e38624c221c3f3a6868eddf9efe",
    "IsValid": true,
    "CommandName": "CC_EasyMassIndex",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "The Mass Index uses the high-low range to identify trend reversals based on range expansions",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "46b888ddcf7d37b0a5fbbcb2bc839833",
    "IsValid": true,
    "CommandName": "CC_EasyMVO",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Easy Market Volume Oscillator",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "e4355da441d6ab0f1d75ae1c2ed039f7",
    "IsValid": true,
    "CommandName": "CC_EasySmoothRSI",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "RSI smoothed with SMA.",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "92d59756048db55e1dd5b624f4c27a7e",
    "IsValid": true,
    "CommandName": "CC_EasySTC",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Schaff Trend Cycle indicator",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "16ec6192416d9b8945983e240b61a8c4",
    "IsValid": true,
    "CommandName": "CC_EasyTD",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Tom Demark Sequential (TD) implementation",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum sequence length before a signal is valid",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "lookback",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lookback count",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "4318c2d65fb010e957b82b002eaaae40",
    "IsValid": true,
    "CommandName": "CC_EasyTrendMA",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Easy TrendMA implementation by Pshai",
    "ReturnDescription": "The resulting signal from the source's and its MA's crossover.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "source",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5201,
          5204,
          5203,
          5208
        ]
      },
      {
        "Index": 0,
        "Name": "maPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The period length of the MA.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The type of MA to be used.",
        "ScriptType": null,
        "Suggestion": [
          3407
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3803,
      6002,
      6006
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "a7f9acd6f7e8f519a0eb6f162a0d0f90",
    "IsValid": true,
    "CommandName": "CC_EasyTSI",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "True Strength Index",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "18a8bda94394f9ce6636794cb85b4329",
    "IsValid": true,
    "CommandName": "CC_EasyVolumeRSI",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "RSI Calculated over volume and smoothed.",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "cddc529596a4315100d387c4d9f56392",
    "IsValid": true,
    "CommandName": "CC_EMAMA_LB",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Ehlers MESA Adaptive Moving Average",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "1227e950bfbb538487203b9ec349396f",
    "IsValid": true,
    "CommandName": "CC_FlashCrashSlot",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "A slot in the style of a Flash Crash Bot",
    "ReturnDescription": "",
    "Parameters": [
      {
        "Index": 0,
        "Name": "basePrice",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Base price of the bot",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "index",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slot index (Unique)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trade amount",
        "ScriptType": null,
        "Suggestion": [
          3605
        ]
      },
      {
        "Index": 0,
        "Name": "spread",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Spread between orders.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "startWithBuy",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Start with a buy order",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "ScriptId": "f6d75fa59fd52eb6849395b2953d03d0",
    "IsValid": true,
    "CommandName": "CC_HullMA",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "HullMA Indicator",
    "ReturnDescription": "HullMA result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "Length",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Length of the MA",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "Source",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The source data",
        "ScriptType": null,
        "Suggestion": [
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      408,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "076c0c6ab72c11c1975318010d9b9500",
    "IsValid": true,
    "CommandName": "CC_MadHatterBBands",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Custom BBands signal implementation for MadHatter",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "340d67238cf65d0104499c94634f1b34",
    "IsValid": true,
    "CommandName": "CC_MadHatterMACD",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Custom MACD signal implementation for MadHatter",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "e2d99400c8781415760cfae652277cd3",
    "IsValid": true,
    "CommandName": "CC_MadHatterRSI",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Custom RSI signal implementation for MadHatter",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The index on which to chart",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3404
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "f3626a49f6d3da9c5f3cb675242973f3",
    "IsValid": true,
    "CommandName": "CC_MarketMakingSlot",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Market making bot slot",
    "ReturnDescription": "Open order id. Empty when slot hasn`t got open orders.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "startLong",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true if slots needs to start with a buy/long order or false for sell/short order.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Price offset from the current price",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slot amount",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "enterTimeout",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Enter timeout",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "exitTimeout",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Exit timeout",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "stopLossPercentage",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Stop loss percentage. Only active when position if fully open",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "stopLossCoolDown",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The cooldown after a stop loss as been breached and position is closed",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reset",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If set on true, the slot will reset its saved values.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Optional note to distinguish slot orders.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      4204,
      4801,
      5002
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "b90cba489818331feebbfdb7d5851bda",
    "IsValid": true,
    "CommandName": "CC_MVO",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Market Volume Oscillator",
    "ReturnDescription": "MVO values",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          5205
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          5206
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          5201,
          5204,
          5203,
          5208
        ]
      },
      {
        "Index": 0,
        "Name": "volume",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          5212
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Fast Period",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "fastMaType",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Fast MA Type",
        "ScriptType": null,
        "Suggestion": [
          3407,
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Slow Period",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "slowMaType",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Slow MA Type",
        "ScriptType": null,
        "Suggestion": [
          3407,
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "stochFastK",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Fast %K Period",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "stochSlowK",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Slow %K Period",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "stochSlowD",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Slow %D Period",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      6003,
      6001,
      6005,
      3205,
      3209
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "802ff9634778be82255301b934d103f7",
    "IsValid": true,
    "CommandName": "CC_PRO_LB",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Lazy Bear - This is a modified form of PSO (original idea by Lee Leibfarth), to use RSI as the input. ",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "52b36933aeee9f82a647489d33e5afb3",
    "IsValid": true,
    "CommandName": "CC_ProfitTrailer",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "A ProfitTrailer implementation by Pshai. Works like a safety and returns true when active.",
    "ReturnDescription": "True if safety has triggered, otherwise false",
    "Parameters": [
      {
        "Index": 0,
        "Name": "trailStartPrc",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Profit level (as percentage) where the trailing starts.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "trailDistPrc",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trailing distance (as percentage) from the highest recorded profit.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "trailMode",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Trailing mode. Use one of the following: 'default', 'grow', or 'shrink'.",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "maxRebounds",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Maximum rebounds allowed. If not set, then rebound is not used. Default is 0 (disabled).",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique position ID.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      7002,
      3210,
      3211,
      3302,
      3301
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "e80f2247aef27f8d5a7b6a9c689811ad",
    "IsValid": true,
    "CommandName": "CC_ScalperChannel_LB",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Lazy Bear - Scalper Channel",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "6736895489fbb56189be386c233baa40",
    "IsValid": true,
    "CommandName": "CC_SQZMOM_LB",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Squeeze Momentum Indicator - LazyBear",
    "ReturnDescription": "Signal result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7003,
      7000,
      6019,
      6012,
      6013,
      6000,
      6001,
      6002,
      6003,
      6004,
      6011,
      6005,
      6006,
      6014,
      6007,
      6021,
      6008,
      6009,
      6016,
      6017,
      6018,
      6020,
      6015,
      6010
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "1c5db1fe83319d2f842c1a6d2e5135da",
    "IsValid": true,
    "CommandName": "CC_STC",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Schaff Trend Cycle",
    "ReturnDescription": "STC Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "data",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data",
        "ScriptType": null,
        "Suggestion": [
          5201
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "STC Depth",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "longLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The short length",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3400
        ]
      },
      {
        "Index": 0,
        "Name": "shortLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The short length",
        "ScriptType": null,
        "Suggestion": [
          4403,
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      408,
      3204
    ],
    "ChangeTypes": []
  },
  {
    "ScriptId": "81f9740cc9249946efae7333ff42ff3c",
    "IsValid": true,
    "CommandName": "CC_WRPC",
    "Command": 600,
    "CommandType": 1,
    "Category": 3,
    "Description": "Wilson Relative Price Channel",
    "ReturnDescription": "Indicator Result",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Interval for the price data. By default the main interval",
        "ScriptType": null,
        "Suggestion": [
          3400
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CCI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6415,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Commodity Channel Index (CCI) compares the current price to an\naverage price over a period of time. The indicator fluctuates above or below zero,\nmoving into positive or negative territory. CCI is relatively high when prices are\nfar above their average, but is relatively low when prices are far below their average.\nIn this manner, CCI can be used to identify overbought and oversold levels, or to confirm trends. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the CCI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CDL",
    "Parameters": [
      {
        "Index": 0,
        "Name": "open",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Open prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The Candle Pattern (CDL) type.",
        "ScriptType": null,
        "Suggestion": [
          3413,
          7800,
          7801,
          7802,
          7803,
          7804,
          7805,
          7806,
          7807,
          7808,
          7809,
          7810,
          7811,
          7812,
          7813,
          7814,
          7815,
          7816,
          7817,
          7818,
          7819,
          7820,
          7821,
          7822,
          7823,
          7824,
          7825,
          7826,
          7827,
          7828,
          7829,
          7830,
          7831,
          7832,
          7833,
          7834,
          7835,
          7836,
          7837,
          7838,
          7839,
          7840,
          7841,
          7842,
          7843,
          7844,
          7845,
          7846,
          7847,
          7848,
          7849,
          7850,
          7851,
          7852,
          7853,
          7854,
          7855,
          7856,
          7857,
          7858,
          7859,
          7860
        ]
      },
      {
        "Index": 0,
        "Name": "penetration",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Penetration threshold.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6490,
    "CommandType": 1,
    "Category": 33,
    "Description": "Candlestick pattern finder.",
    "ReturnDescription": "Returns a value. 0 is not found. Above 0 is long pattern found. Below 0 is short pattern found.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Ceil",
    "Description": "Calculates the smallest integral value greater than or equal to the specified number.",
    "ReturnDescription": "Returns the smallest integral value greater than or equal to the specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4013,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChandelierExitLong",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5205
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5206
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5201
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Depth length. Default is 20.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "multiplier",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "ATR multiplier. Default is 3.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6416,
    "CommandType": 1,
    "Category": 33,
    "Description": "Calculates the chandelier exit long price.",
    "ReturnDescription": "Returns the target price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChandelierExitShort",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5205
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5206
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5201
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Depth length. Default is 20.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "multiplier",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "ATR multiplier. Default is 3.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6417,
    "CommandType": 1,
    "Category": 33,
    "Description": "Calculates the chandelier exit short price.",
    "ReturnDescription": "Returns the target price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Change",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 4039,
    "CommandType": 1,
    "Category": 21,
    "Description": "Calculates the absolute price changes between the values.",
    "ReturnDescription": "Returns the new-old change of the values in an array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChangeColorOpacity",
    "Parameters": [
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Color string in format: hex (#000000), rgba(r,g,b,a) or rgb(r,g,b)",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618
        ]
      },
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Opacity level from 0 - 100.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 401,
    "Description": "Converts HEX to RGBA with opacity.",
    "ReturnDescription": "Returns a RGBA color string.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      406,
      418,
      419,
      426,
      427
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChartAddAxisLabel",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to add the label.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The axis side on which to add the label.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      },
      {
        "Index": 0,
        "Name": "text",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The text on the label.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The y-axis value on which to place the label.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The label fill color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "textColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The text color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 402,
    "Description": "Adds a label on the y-axis.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChartSetAxisOptions",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to apply the settings.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The side of the chart on which to apply the settings.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "high",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "visible",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Set axis visible/hidden.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set axis type.",
        "ScriptType": null,
        "Suggestion": [
          1400,
          1403
        ]
      }
    ],
    "Command": 404,
    "Description": "Gives control over axis settings such as low, high and visibility.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ChartSetOptions",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to apply the options.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "title",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart title.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "height",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart height. Below 1 will be treated as percentage (0.5-50%).",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "style",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Price plot style.",
        "ScriptType": null,
        "Suggestion": [
          1412,
          1413,
          1414,
          1416,
          1419,
          1418,
          1417,
          1415,
          1420,
          1421
        ]
      }
    ],
    "Command": 405,
    "Description": "Gives control over chart options such as title and height.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "CHOP",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6497,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Choppiness Index, designed by E.W. Dreiss, is an indicator which is directionless. This means it doesn't show the market direction,\n                            rather reflects whether the market is choppy (trades sideways) or smooth (trending). The general way of interpreting\n                            this index is that higher values mean the market is choppy, while lower values equal directional movement.",
    "ReturnDescription": "Returns the CHOP result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      3205,
      3209,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Clamp",
    "Description": "Calculates the number or table of numbers clamped between the specified minimum and maximum.",
    "ReturnDescription": "Returns number or table of numbers clamped between the specified minimum and maximum.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "min",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "max",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4014,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CloseLine",
    "Command": 1414,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the CloseLine enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ClosePrices",
    "Command": 5201,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ClosePriceSource",
    "Command": 8203,
    "Description": "Enumeration, returns an enum for Close Price Source type.",
    "ReturnDescription": "Returns the Close Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CloseTime",
    "Command": 6816,
    "CommandType": 1,
    "Category": 35,
    "Description": "Converts a timestamps to the close timestamp of the candle.",
    "ReturnDescription": "Returns the close timestamp of the candle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The timestamp to round. Set on 0 for current.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval on which the candle is build.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CloseVPosition",
    "Command": 4613,
    "CommandType": 1,
    "Category": 24,
    "Description": "Closes a virtual bot position entirely by processing a simulated order using the defined specifications. Works similarly to DoExitPosition and PlaceExitPositionOrder, but will NOT create a real order; only simulated! Use this to \"clean up\" bot positions if required.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The enter price of the position.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          7606
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique position identifier.",
        "ScriptType": null,
        "Suggestion": [
          6200,
          4406,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ClosingMarubozuType",
    "Command": 7810,
    "Description": "Enumeration, returns an enum for ClosingMarubozuType type.",
    "ReturnDescription": "Returns the ClosingMarubozuType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CMO",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6418,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Chande Momentum Oscillator (CMO) indicates overbought\nconditions when it reaches the 50 level and oversold conditions when it reaches −50.\nYou can also look for signals based on the CMO crossing above and below a signal line\ncomposed of a 9-period moving average of the 20 period CMO. This indicator measures the trend strength. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the CMO result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Color",
    "Command": 1619,
    "CommandType": 19,
    "Category": 6,
    "Description": "Creates an RGBA color string.",
    "ReturnDescription": "Returns an RGBA color string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "r",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The red component value for the new color. Valid values are 0 through 255.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "g",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The green component value for the new color. Valid values are 0 through 255.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "b",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The blue component value for the new color. Valid values are 0 through 255.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "a",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The alpha component value for the new color. Valid values are 0 through 255.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CommandDataType",
    "Command": 7908,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the CommandDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Compare",
    "Command": 3201,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if input1 is below, equal to or above input2.",
    "ReturnDescription": "Returns a list with booleans.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "isAbove",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Is true when input1 is above input2.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isEqual",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Is true when input1 is equals input2.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isBelow",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Is true when input1 is below input2.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Compress",
    "Command": 4001,
    "CommandType": 1,
    "Category": 21,
    "Description": "Calculates the average values of every 2 values in an array. When the input is [10, 20, 30, 40] the result will be [15, 35].",
    "ReturnDescription": "Returns the compressed array.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ConcealBabysWallType",
    "Command": 7811,
    "Description": "Enumeration, returns an enum for ConcealBabysWallType type.",
    "ReturnDescription": "Returns the ConcealBabysWallType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ContractName",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7202,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets the contract name of the market.",
    "ReturnDescription": "Returns the contract name of the market.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ContractValue",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7203,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets the value of a single contract, defined in their denomination.",
    "ReturnDescription": "Returns the value of a single contract, defined in their denomination.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ConvertSignal",
    "Command": 6012,
    "Description": "Converts the signal if its matches the defined one.",
    "ReturnDescription": "Returns the original or converted signal depending on the input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "signalToCovert",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal we want to convert.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601,
          2602
        ]
      },
      {
        "Index": 0,
        "Name": "convertedSignal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal we want to convert too.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601,
          2602
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "COPPOCK",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "roc1",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length of first ROC.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "roc2",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length of second ROC.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6419,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Coppock Curve (COPPOCK) is a smoothed momentum oscillator developed by Edwin “Sedge” Coppock.\nIt can help you isolate buying opportunities and exit points. Even though it was originally designed for long-term analysis,\nit can be used on intraday, daily or weekly charts and the settings can be adjusted to suit one's style.\nThe main signals are generated with crosses above and below the zero line. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the COPPOCK result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CORREL",
    "Parameters": [
      {
        "Index": 0,
        "Name": "source1",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "First source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "source2",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Second source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6420,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Correlation (CORREL) is a statistical measure that reflects the correlation between two assets. \nIn other words, this statistic tells us how closely one security is related to the other. \nCoefficient is above zero when both securities move in the same direction (up or down) and below zero when the two securities move in opposite directions. \nThis indicator can also help traders diversify by identifying assets with a low or negative correlation to the market. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the CORREL result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Cos",
    "Description": "Calculates the cosine of the specified angle.",
    "ReturnDescription": "Returns the cosine of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4015,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Cosh",
    "Description": "Calculates the hyperbolic cosine of the specified angle.",
    "ReturnDescription": "Returns the hyperbolic cosine of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4016,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Count",
    "Command": 3,
    "CommandType": 1,
    "Category": 0,
    "Description": "Gets the length of an array or the number of occurrences within the array of a specific value.",
    "ReturnDescription": "Returns the length of an array or the number of occurrences within the array of a specific value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Optional value to match.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CounterAttackType",
    "Command": 7812,
    "Description": "Enumeration, returns an enum for CounterAttackType type.",
    "ReturnDescription": "Returns the CounterAttackType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CreateMarket",
    "Parameters": [
      {
        "Index": 0,
        "Name": "priceSource",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price source of the market. If empty the main bot price source is set.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "baseCurrency",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base currency of the market. If empty the bots base currency price source is set.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "quoteCurrency",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The quote currency of the market. If empty the bots main quote currency is set.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "contractName",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The contract name of the market. If empty the bots main contract name is set.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 5409,
    "CommandType": 1,
    "Category": 28,
    "Description": "Creates a market string that can be used for a variety of commands.",
    "ReturnDescription": "Returns the market string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CreatePosition",
    "Command": 4610,
    "CommandType": 1,
    "Category": 24,
    "Description": "Creates a bot position by processing a simulated order using the defined specifications. By doing this, profit/loss and position details can be used by the script. Use the returned position ID with PositionContainer() to extract position data.",
    "ReturnDescription": "Returns the position ID.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The enter price of the position.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          7606
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The size of the position.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          7606,
          7601,
          7602
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the position.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "leverage",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The leverage of the position. -1 for default.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          3603
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique position identifier.",
        "ScriptType": null,
        "Suggestion": [
          6200,
          4406,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CreateTimestamp",
    "Command": 6810,
    "CommandType": 1,
    "Category": 35,
    "Description": "Creates an Unix timestamp from the specified value.",
    "ReturnDescription": "Returns the Unix timestamp.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "year",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The year of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "month",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The month of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "day",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The date of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "hour",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hour of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "minute",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The minute of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "second",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The seconds of the timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CrossMarginMode",
    "Command": 2803,
    "Description": "Enumeration, returns a cross-margin mode enum. Used with Get-/SetMarginMode() and IsMarginModeSupported()",
    "ReturnDescription": "Returns the cross-margin mode enum.",
    "CommandType": 15,
    "Category": 49,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5812,
      5813,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CrossOver",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 6600,
    "CommandType": 1,
    "Category": 34,
    "Description": "Checks if a crossover occurs between value1 and value2.",
    "ReturnDescription": "Returns true if a crossover occurs between value1 and value2. Otherwise false.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CrossOverSince",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 6601,
    "CommandType": 1,
    "Category": 34,
    "Description": "Calculates the number of ticks since the last crossover.",
    "ReturnDescription": "Returns the number of ticks since the last crossover. Return value of 1 represents the crossunder happening 'now'.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CrossUnder",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 6602,
    "CommandType": 1,
    "Category": 34,
    "Description": "Checks if a crossunder occurs between value1 and value2.",
    "ReturnDescription": "Returns true if a crossunder occurs between value1 and value2. Otherwise false.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CrossUnderSince",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 6603,
    "CommandType": 1,
    "Category": 34,
    "Description": "Calculates the number of ticks since the last crossunder.",
    "ReturnDescription": "Returns the number of ticks since the last crossunder. Return value of 1 represents the crossunder happening 'now'.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CRSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "rsiPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "RSI period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "udPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "UD period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "length",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6421,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Connor's RSI (CRSI) is a momentum oscillator created by Larry Connors.\nThree components combine to form this momentum oscillator; The RSI, UpDown Length, and Rate-of-Change.\nConnors RSI outputs a value between 0 and 100, which is then used to identify short-term overbought\nand oversold conditions, or to confirm trends. This indicator is usually plotted to its own chart.",
    "ReturnDescription": "Returns the CRSI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentDate",
    "Command": 6806,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the date of the month of the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the date of the month value. A number from 1 to 31.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentDay",
    "Command": 6805,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the day of the week of the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the day of the week value. A number from 1 to 7, starting on Sunday.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentHour",
    "Command": 6804,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the hour the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the hour value. A number from 0 to 23.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentInterval",
    "Parameters": [
      {
        "Index": 0,
        "Name": "sources",
        "Type": 100,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3601,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the default interval selected by the user or returns the interval of a price source.",
    "ReturnDescription": "Interval in minutes.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      5201
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentMinute",
    "Command": 6803,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the minute the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the minute value. A number from 0 to 59.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentMonth",
    "Command": 6808,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the month of the year of the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the month of the year value. A number from 1 to 12.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentPrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5213,
    "Category": 27,
    "CommandType": 1,
    "Description": "Gets all the price data from the current candle.",
    "ReturnDescription": "Returns the price data in an array.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "open",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The open price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "high",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The high price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The low price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The close price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "volume",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The volume of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "ask",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ask/buy price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "bid",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The bid/sell price of the current candle.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentSecond",
    "Command": 6802,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the second the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the second value. A number from 0 to 59.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentWeek",
    "Command": 6807,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the week of the year of the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the week of the year value. A number from 1 to 53.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CurrentYear",
    "Command": 6809,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the year the current time or requested time. Based on UTC.",
    "ReturnDescription": "Returns the year.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "An unix timestamp, by default the current time.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "CustomReport",
    "Command": 4408,
    "CommandType": 1,
    "Category": 23,
    "Description": "Creates an item in the bots custom reports.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The name of the item.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value of the item.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The name of the report. By default its 'Custom Report'.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "displayValue",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When set on true, this value will be visible on the bot list in the UI.'.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "Cyan",
    "Command": 1603,
    "Description": "Enumeration, returns a color hex string. Can be used as Cyan, Cyan() or with a specific opacity Cyan(10).",
    "ReturnDescription": "Returns hex string of cyan (#00CCCC)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DarkCloudCoverType",
    "Command": 7855,
    "Description": "Enumeration, returns an enum for DarkCloudCoverType type.",
    "ReturnDescription": "Returns the DarkCloudCoverType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DarkGray",
    "Command": 1604,
    "Description": "Enumeration, returns a color hex string. Can be used as DarkGray, DarkGray() or with a specific opacity DarkGray(10).",
    "ReturnDescription": "Returns hex string of darkgray (#808080)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DarkGreen",
    "Command": 1605,
    "Description": "Enumeration, returns a color hex string. Can be used as DarkGreen, DarkGreen() or with a specific opacity DarkGreen(10).",
    "ReturnDescription": "Returns hex string of darkgreen (#008000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Dashed",
    "Command": 1404,
    "Description": "Enumeration, returns a line decoration enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Dashed enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406,
      418,
      426
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterEnterOrder",
    "Command": 1211,
    "Description": "Deactivates the bot after an enter order has been completed.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionCount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of position allowed before the check is preformed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterExitOrder",
    "Command": 1212,
    "Description": "Deactivates the bot after an exit order has been completed.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionCount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of position allowed before the check is preformed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterXActiveMinutes",
    "Command": 1216,
    "Description": "Deactivates the bot when the is active for a certain time.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "minutes",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of positions allowed before the bot is deactivated.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterXIdleMinutes",
    "Command": 1215,
    "Description": "Deactivates the bot if the last completed order is a number of minutes in the past. Timeout starts after the first completed order.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "minutes",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of positions allowed before the bot is deactivated.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterXOrders",
    "Command": 1213,
    "Description": "Deactivates the bot after a number of orders has been completed.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of orders allowed before the bot is deactivated.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateAfterXPositions",
    "Command": 1214,
    "Description": "Deactivates the bot after a number of positions has been completed.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of positions allowed before the bot is deactivated.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateBot",
    "Command": 5800,
    "CommandType": 1,
    "Category": 30,
    "Description": "Deactivates the bot. Once the bot is deactivated, it can only manually activate again.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "reason",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Reason for deactivation.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "cancelOpenOrders",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If set, all open orders of the bot are being canceled.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateOnLoss",
    "Command": 1217,
    "Description": "Deactivates the bot when there is no open position and the ROI based losses have reached a certain level.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "maxLoss",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum allowed loss based on the ROI.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DeactivateOnProfit",
    "Command": 1218,
    "Description": "Deactivates the bot when there is no open position and the ROI based profits have reached a certain level.",
    "ReturnDescription": "Returns true when the bot has been deactivated.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "minProfit",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum profit based on the ROI.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineCommand",
    "Command": 601,
    "CommandType": 1,
    "Category": 4,
    "Description": "This defines the name and description of the custom command. This information will reflect in commands/block lists and help models.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The command name. Needs to be unique and a single word. No spaces or special characters are allowed beside number and '_'.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "description",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The description of the command.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineEasyIndicatorOutput",
    "Command": 606,
    "CommandType": 1,
    "Category": 4,
    "Description": "Defines the signal output for the custom indicator.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "result",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The indicator result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineEasyIndicatorParameters",
    "Command": 605,
    "CommandType": 1,
    "Category": 4,
    "Description": "Defines the chartIndex and interval parameter.",
    "ReturnDescription": "Returns a list with values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Default chart index. Default is 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Index on which to plot.",
        "ScriptType": null,
        "Suggestion": [
          408,
          4206
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval of the indicator.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216,
          607
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineIntervalOptimization",
    "Command": 607,
    "CommandType": 1,
    "Category": 4,
    "Description": "Optimizes the custom command for back tests. Only use this if the command needs updates once every interval tick.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval on which the result is based.",
        "ScriptType": null,
        "Suggestion": [
          604,
          606
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineOutput",
    "Command": 602,
    "CommandType": 1,
    "Category": 4,
    "Description": "Defines the output type and data.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The parameter type enum.",
        "ScriptType": null,
        "Suggestion": [
          2206,
          2205,
          2200,
          2204,
          2207,
          2202,
          2208,
          2203
        ]
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The output value. Only required if type is not a void.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "description",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The output description. Only required if type is not a void.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "outputSuggestions",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": true,
        "Description": "The output suggestions. Only required if type is not a void. Separated by , . ; or : and can take category definitions.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineOutputIndex",
    "Command": 603,
    "CommandType": 1,
    "Category": 4,
    "Description": "Creates an index based output connection to be used in the visual editor.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "index",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The array index of this value/output.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The parameter type enum.",
        "ScriptType": null,
        "Suggestion": [
          2206,
          2205,
          2200,
          2204,
          2207,
          2202,
          2208,
          2203
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The output name.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "description",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The output description.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "outputSuggestions",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": true,
        "Description": "The output suggestions. Separated by , . ; or : and can take category definitions.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DefineParameter",
    "Command": 604,
    "CommandType": 1,
    "Category": 4,
    "Description": "Defines the parameter for a custom command.",
    "ReturnDescription": "Returns the giving parameter or default value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The parameter type enum.",
        "ScriptType": null,
        "Suggestion": [
          2206,
          2205,
          2200,
          2204,
          2207,
          2202,
          2208,
          2203
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The input parameter name.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "description",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The input parameter description.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "isRequired",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "If true, the command requires the parameter to be defined.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default and test parameter for the command. Try to use fake data if the parameter is required.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "inputSuggestions",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": true,
        "Description": "The input suggestions. Commands separated by , . ; or : and can take category definitions.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DelaySignal",
    "Command": 6013,
    "Description": "Saves and delays a signal by a number of minutes.",
    "ReturnDescription": "Returns the saved signal from a number of minutes back or SignalNone when it doesn't have a delayed signal yet.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "minutes",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The number of minutes of the delay.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Delete",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique identifier.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4208,
    "CommandType": 1,
    "Category": 22,
    "Description": "Deletes a value on a specific key.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "Delta",
    "Description": "Calculates the percentage between input1 and input2 or the percentage change between the values of input1.",
    "ReturnDescription": "Returns the percentage between input1 and input2. When for example input1 is 5 and input2 is 6, 20 is returned.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4017,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DEMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6422,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Double Exponential Moving Average (DEMA) was developed by Patrick Mulloy.\nIt is used for smoothing price series and attempts to offer a smoothed average with less\nlag than a straight exponential moving average (EMA). This indicator is usually plotted directly on a price chart.",
    "ReturnDescription": "Returns the DEMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DemaType",
    "Command": 1800,
    "Description": "Enumeration, returns an enum for DEMA type.",
    "ReturnDescription": "Returns the DEMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DisableIndicatorContainerLogs",
    "Command": 5827,
    "CommandType": 1,
    "Category": 30,
    "Description": "Disables IndicatorContainer log messages.",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "Div",
    "Description": "Divides input1 with input2. If one of the parameters is a single value, the other is divided by this.",
    "ReturnDescription": "Returns the divided numbers/tables.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4018,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoBuy",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3801,
    "CommandType": 1,
    "Category": 20,
    "Description": "Generates a buy signal on spot or a long signal on margin & leverage.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoExitPosition",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3800,
    "CommandType": 1,
    "Category": 20,
    "Description": "Sends out a sell signal on spot or an exit positions signal on margin & leverage.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoFlipPosition",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 3804,
    "CommandType": 1,
    "Category": 20,
    "Description": "Executes a DoLong() when the current position is short and an DoShort() the position is long.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003,
      800,
      801,
      802,
      803,
      804,
      805,
      806,
      807,
      808,
      809,
      810,
      811,
      812,
      813,
      814,
      815,
      816,
      817,
      818,
      819,
      820,
      821,
      822,
      823,
      824,
      825,
      826,
      827,
      828,
      829,
      830,
      831,
      832,
      833,
      834,
      835,
      836,
      837,
      838,
      839,
      840,
      841,
      842,
      843,
      844,
      845,
      846,
      850,
      851,
      852
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DojiStarType",
    "Command": 7814,
    "Description": "Enumeration, returns an enum for DojiStarType type.",
    "ReturnDescription": "Returns the DojiStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DojiType",
    "Command": 7813,
    "Description": "Enumeration, returns an enum for DojiType type.",
    "ReturnDescription": "Returns the DojiType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoLong",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3801,
    "CommandType": 1,
    "Category": 20,
    "Description": "Generates a buy signal on spot or a long signal on margin & leverage.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DONCHIAN",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6423,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Donchian Channel (DONCHIAN), developed by Richard Donchian.\nDonchian Channel is formed by taking the highest high and the lowest low of the last n periods.\nThe area between the high and the low is the channel for the period chosen. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns an array with 3 results arrays. Upper on index 1, middle on index 2 and lower on index 3.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "upper",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Upper band of the channel.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "middle",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle band of the channel.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "lower",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lower band of the channel.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5,
      411
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoSell",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3802,
    "CommandType": 1,
    "Category": 20,
    "Description": "Generates a sell signal on spot or a short signal on margin & leverage.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoShort",
    "Parameters": [
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3802,
    "CommandType": 1,
    "Category": 20,
    "Description": "Generates a sell signal on spot or a short signal on margin & leverage.",
    "ReturnDescription": null,
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "DoSignal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal to process.",
        "ScriptType": null,
        "Suggestion": [
          6002,
          6006,
          6004
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 3803,
    "CommandType": 1,
    "Category": 20,
    "Description": "Processes a signal enum. Triggers a DoLong() when the signal equals SignalLong, a DoShort() when the signal equals SignalShort, a DoExitPosition() when the signal equals SignalExitPosition and does nothing when the signal is SignalNone.",
    "ReturnDescription": null,
    "RequiresCall": false,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003,
      800,
      801,
      802,
      803,
      804,
      805,
      806,
      807,
      808,
      809,
      810,
      811,
      812,
      813,
      814,
      815,
      816,
      817,
      818,
      819,
      820,
      821,
      822,
      823,
      824,
      825,
      826,
      827,
      828,
      829,
      830,
      831,
      832,
      833,
      834,
      835,
      836,
      837,
      838,
      839,
      840,
      841,
      842,
      843,
      844,
      845,
      846,
      850,
      851,
      852
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Dotted",
    "Command": 1405,
    "Description": "Enumeration, returns a line decoration enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Dotted enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406,
      418,
      426
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DPO",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "shortLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Shorter period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "longLength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Longer period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6424,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Detrended Price Oscillator (DPO) is an indicator\nin technical analysis that attempts to eliminate the long-term trends in prices\nby using a displaced moving average so it does not react to the most current price action.\nThis allows the indicator to show intermediate overbought and oversold levels effectively.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the DPO result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DragonflyDojiType",
    "Command": 7815,
    "Description": "Enumeration, returns an enum for DragonflyDojiType type.",
    "ReturnDescription": "Returns the DragonflyDojiType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6425,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Directional Movement Index (DX) is indicator in technical\nanalysis which is based on two other Welles Wilder's indicators: negative directional\nindicator (-DI) and positive directional indicator (+DI). It was designed to evaluate\nthe strength of a trend and to define a period of sideways trading. This indicator is usually\nplotted on its own chart.",
    "ReturnDescription": "Returns the DX result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1201,
    "Description": "Calculates the dynamic stop loss price and compares it with the current exit price.",
    "CommandName": "DynamicStopLoss",
    "ReturnDescription": "Returns true is the stop loss price has been breached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Price pump percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Read depth. Default is 30 ticks.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1202,
    "Description": "Calculates the dynamic take profit price and compares it with the current exit price.",
    "CommandName": "DynamicTakeProfit",
    "ReturnDescription": "Returns true is the take profit price has been breached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Price pump percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Read depth. Default is 30 ticks.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "DynamicType",
    "Command": 2202,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the DynamicType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are generated when price breaks above Upper and below Lower band.",
    "CommandName": "EasyABANDS",
    "Command": 800,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ABANDS, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on ADOSC, it's MA and selected signal type.",
    "CommandName": "EasyADOSC",
    "Command": 801,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ADOSC, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the Intelli-Bot Alice.",
    "CommandName": "EasyAlice",
    "Command": 837,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the Alice signal based on the Haasonline Intelli Alice bot. By default Alice works on a 2 minute interval., plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on AO, it's MA and selected signal type.",
    "CommandName": "EasyAO",
    "Command": 802,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the AO, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on APO, it's MA and selected signal type.",
    "CommandName": "EasyAPO",
    "Command": 803,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the APO, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetThresholdSignal() template.",
    "CommandName": "EasyAROON",
    "Command": 804,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the AROON, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetThresholdSignal() template.",
    "CommandName": "EasyAROONOSC",
    "Command": 805,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the AROONOSC, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are generated when price breaks above Upper and below Lower band.",
    "CommandName": "EasyBBANDS",
    "Command": 806,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the BBANDS, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are generated when price breaks above Upper and below Lower band.",
    "CommandName": "EasyBBANDSB",
    "Command": 841,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the BBANDS %B, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are generated when price breaks above Upper and below Lower band.",
    "CommandName": "EasyBBANDSW",
    "Command": 842,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the BBANDS %W, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on BOP, it's MA and selected signal type.",
    "CommandName": "EasyBOP",
    "Command": 807,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the BOP, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on CCI, it's MA and selected signal type.",
    "CommandName": "EasyCCI",
    "Command": 808,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the CCI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on selected Candle Pattern.",
    "CommandName": "EasyCDL",
    "Command": 838,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the CDL, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on CMO, it's MA and selected signal type.",
    "CommandName": "EasyCMO",
    "Command": 809,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the CMO, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on COPPOCK, it's MA and selected signal type.",
    "CommandName": "EasyCOPPOCK",
    "Command": 810,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the COPPOCK, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template.",
    "CommandName": "EasyCRSI",
    "Command": 811,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the CRSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on ADX level and +DI/-DI crossover.",
    "CommandName": "EasyDMI",
    "Command": 812,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ADX, +DI, -DI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are produced when price breaks above upper or below lower band.",
    "CommandName": "EasyDONCHIAN",
    "Command": 813,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the DONCHIAN, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on DPO, it's MA and selected signal type.",
    "CommandName": "EasyDPO",
    "Command": 814,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the DPO, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetThresholdSignal() template.",
    "CommandName": "EasyDX",
    "Command": 815,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the DX, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on dynamic short/long level.",
    "CommandName": "EasyDynamicLongShortLevels",
    "Command": 850,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the DynamicBuySellLevel, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on FastRSI & RSI values and selected signal type.",
    "CommandName": "EasyFastRSI",
    "Command": 840,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the FastRSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on FIBONACCI.",
    "CommandName": "EasyFIBONACCI",
    "Command": 844,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the FIBONACCI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on fixed long/short levels.",
    "CommandName": "EasyFixedLongShortLevels",
    "Command": 851,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the FixedLongShort, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on ICHIMOKU and selected signal type.",
    "CommandName": "EasyICHIMOKU",
    "Command": 816,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ICHIMOKU, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on IMI, it's MA and selected signal type.",
    "CommandName": "EasyIMI",
    "Command": 817,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the IMI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template. Signals are produced when price breaks above upper or below lower band.",
    "CommandName": "EasyKELTNER",
    "Command": 818,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the KELTNER, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on KRI, it's MA and selected signal type.",
    "CommandName": "EasyKRI",
    "Command": 819,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the KRI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on KST and selected signal type.",
    "CommandName": "EasyKST",
    "Command": 845,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the KST, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetAboveBelowSignal() template.",
    "CommandName": "EasyLINEARREG",
    "Command": 820,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the LINEARREG, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetAboveBelowSignal() template. Signals are produced when faster MA crosses above or below the slower MA.",
    "CommandName": "EasyMA",
    "Command": 821,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the MA, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on MACD and selected signal type.",
    "CommandName": "EasyMACD",
    "Command": 822,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the MACD, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on MFI, it's MA and selected signal type.",
    "CommandName": "EasyMFI",
    "Command": 823,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the MFI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on MOM, it's MA and selected signal type.",
    "CommandName": "EasyMOM",
    "Command": 824,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the MOM, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on OBV, it's MA and selected signal type.",
    "CommandName": "EasyOBV",
    "Command": 825,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the OBV, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on PPO and selected signal type.",
    "CommandName": "EasyPPO",
    "Command": 826,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the PPO, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on ROC, it's MA and selected signal type.",
    "CommandName": "EasyROC",
    "Command": 827,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ROC, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template.",
    "CommandName": "EasyRSI",
    "Command": 828,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the RSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on SAR.",
    "CommandName": "EasySAR",
    "Command": 846,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the SAR, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on SlowRSI & RSI values and selected signal type.",
    "CommandName": "EasySlowRSI",
    "Command": 839,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the SlowRSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template.",
    "CommandName": "EasySSTOCH",
    "Command": 829,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the SSTOCH, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on %K, %D and selected signal type.",
    "CommandName": "EasySTOCH",
    "Command": 830,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the STOCH, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetCrossOverUnderSignal() template.",
    "CommandName": "EasySTOCHF",
    "Command": 831,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the STOCHF, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetCrossOverUnderSignal() template.",
    "CommandName": "EasySTOCHRSI",
    "Command": 843,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the STOCHRSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on TRIX, it's MA and selected signal type.",
    "CommandName": "EasyTRIX",
    "Command": 832,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the TRIX, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on TSI, it's MA and selected signal type.",
    "CommandName": "EasyTSI",
    "Command": 833,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the TSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template.",
    "CommandName": "EasyUDRSI",
    "Command": 834,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the UDRSI, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on ULTOSC, it's MA and selected signal type.",
    "CommandName": "EasyULTOSC",
    "Command": 852,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ULTOSC, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetBuySellLevelSignal() template.",
    "CommandName": "EasyWILLR",
    "Command": 835,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the WILLR, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "ReturnDescription": "Returns a signal based on the GetAboveBelowSignal() template. Signals are produced when faster ZLMA crosses above or below the slower ZLMA.",
    "CommandName": "EasyZLMA",
    "Command": 836,
    "CommandType": 1,
    "Category": 16,
    "Description": "Automatically defines the input fields, calculates the ZLMA, plots the chart and returns the signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique name of the indicator.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Used interval for price data. Default is 0 and the main interval will be used.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6426,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Exponential Moving Average (EMA) is a weighted moving average\n(WMA) that gives more weighting, or importance, to recent price data than the simple moving average (SMA) does.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the EMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EmaType",
    "Command": 1801,
    "Description": "Enumeration, returns an enum for EMA type.",
    "ReturnDescription": "Returns theDEMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EnableHighSpeedUpdates",
    "Command": 5802,
    "CommandType": 1,
    "Category": 30,
    "Description": "Enables high-speed script execution.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "updateOnFilledOrders",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Executes an update right after an order has finished (canceled or filled).",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "EnableOrderPersistence",
    "Command": 5803,
    "CommandType": 1,
    "Category": 30,
    "Description": "Enables order persistence for managed trading.",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "EngulfingType",
    "Command": 7816,
    "Description": "Enumeration, returns an enum for EngulfingType type.",
    "ReturnDescription": "Returns the EngulfingType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EnumType",
    "Command": 2203,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the EnumType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Epsilon",
    "Description": "Enumeration, returns 1 Satoshi (=Epsilon).",
    "ReturnDescription": "Returns 1 Satoshi (=Epsilon).",
    "IsConstant": true,
    "Parameters": [],
    "Command": 4040,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Equals",
    "Command": 3202,
    "CommandType": 1,
    "Category": 17,
    "Description": "Compares two values and returns whether or not the values are equal.",
    "ReturnDescription": "Returns true when the values are equal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "First value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Second value to compare.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EveningDojiStarType",
    "Command": 7859,
    "Description": "Enumeration, returns an enum for EveningDojiStarType type.",
    "ReturnDescription": "Returns the EveningDojiStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "EveningStarType",
    "Command": 7860,
    "Description": "Enumeration, returns an enum for EveningStarType type.",
    "ReturnDescription": "Returns the EveningStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Exp",
    "Description": "Calculates 'e' raised to the specified power.",
    "ReturnDescription": "Returns 'e' raised to the specified power.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4019,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "FastRSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6492,
    "CommandType": 1,
    "Category": 33,
    "Description": "The FastRSI is a custom implementation from Haasonline. It uses a custom RSI and EMA calculation.",
    "ReturnDescription": "Returns the FastRSI result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "rsi",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Normal RSI result.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "fastRsi",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast RSI result.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Fee",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 3602,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the current fee percentage of the main or specific market.",
    "ReturnDescription": "Returns the fee percentage.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "FilterAbove",
    "Command": 22,
    "CommandType": 1,
    "Category": 21,
    "Description": "Filters out all values above a specific value.",
    "ReturnDescription": "Returns the filtered input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The maximum threshold value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "FilterBelow",
    "Command": 21,
    "CommandType": 1,
    "Category": 21,
    "Description": "Filters out all values below a specific value.",
    "ReturnDescription": "Returns the filtered input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The old value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Finalize",
    "Command": 5808,
    "CommandType": 1,
    "Category": 30,
    "Description": "Only executes on the last update cycle of a backtest. Saving time in the overall backtest length. Can be used in combination with plot manipulation (eg. PlotDoubleColor()) or CustomReport()",
    "ReturnDescription": "Returns true when executed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "callback",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The function to executed when a candle closes.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Floor",
    "Description": "Calculates the largest integral value less than or equal to the specified number.",
    "ReturnDescription": "Returns the largest integral value less than or equal to the specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4020,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "FormatDateTime",
    "Command": 6801,
    "CommandType": 1,
    "Category": 35,
    "Description": "Formats a unix datetime number (to \"YYYY-MM-DD at HH:MM\" by default).",
    "ReturnDescription": "The formatted unix datetime number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unix datetime number to format.",
        "ScriptType": null,
        "Suggestion": [
          6801
        ]
      },
      {
        "Index": 0,
        "Name": "dateDelimiter",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The characters between the year and month, and between the month and day.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "dateTimeDelimiter",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The characters between the date and time.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "timeDelimiter",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The characters between the hour and minute, and between the minute and second.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "includeSeconds",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the seconds will be included in the formatted time.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "includeTime",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the formatted time will be included.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "includeYear",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the year will be included in the formatted date.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Fuchsia",
    "Command": 1606,
    "Description": "Enumeration, returns a color hex string. Can be used as Fuchsia, Fuchsia() or with a specific opacity Fuchsia(10).",
    "ReturnDescription": "Returns hex string of fuchsia (#FF00FF)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "FunctionDataType",
    "Command": 7907,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the FunctionDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GapSideSideWhiteType",
    "Command": 7817,
    "Description": "Enumeration, returns an enum for GapSideSideWhiteType type.",
    "ReturnDescription": "Returns the GapSideSideWhiteType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetAboveBelowSignal",
    "Command": 6000,
    "Description": "Returns a continuous signal when values are above/below of each other.",
    "ReturnDescription": "Returns SignalLong when fast is above slow, SignalShort when fast is below slow and SignalNone will occur if values are exactly the same.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "fast",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'faster' value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slow",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'slower' value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetAccountMarkets",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7223,
    "CommandType": 1,
    "Category": 37,
    "Description": "An array of markets affiliated with a particular account.",
    "ReturnDescription": "Returns an array with all the markets as a string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetAllFilledOrders",
    "Command": 5005,
    "CommandType": 1,
    "Category": 26,
    "Description": "A collection of (partially) filled orders executed by the bot. Maximum size is 50 orders.",
    "ReturnDescription": "Returns a list of OrderContainer() objects. Sorted descending on close timestamp.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. When set only orders related to that position are returned.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetAllOpenOrders",
    "Command": 5004,
    "CommandType": 1,
    "Category": 26,
    "Description": "A collection of open orders executed by the bot.",
    "ReturnDescription": "Returns a list of OrderContainer() objects.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. When set only orders related to that position are returned.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetAllOpenPositions",
    "Parameters": [],
    "Command": 4612,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets all open positions and returns them as PositionContainers.",
    "ReturnDescription": "Returns an array of PositionContainers.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      7400,
      7406,
      7404,
      7405,
      7401,
      7403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetBodyHighPrices",
    "Command": 5215,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with the highest price of the candle its body prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of the highest price of the candle its body prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetBodyLowPrices",
    "Command": 5216,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with the lowest price of the candle its body prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of the lowest price of the candle its body prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetBotProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "includeUnrealized",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true to include the unrealized profits. By default false.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 5600,
    "CommandType": 1,
    "Category": 29,
    "Description": "Total realized profits on a specific market. Unrealized profits are included when 'includeUnrealized' is set on true.",
    "ReturnDescription": "Return total realized profit. On spot/margin the result will be in the quote currency. For leverage its in the underlying currency.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetBotROI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 5601,
    "CommandType": 1,
    "Category": 29,
    "Description": "Gets the return on investment. The ROI is calculated by dividing the total realized profits by the average position size.",
    "ReturnDescription": "Return the ROI percentage.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetBuySellLevelSignal",
    "Command": 6001,
    "Description": "Determines the signal from a result with a buy and sell level.",
    "ReturnDescription": "Returns SignalLong when the result is below the buy level, SignalShort when the result is above the sell level and SignalNone when the result between the buy and sell level.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "buyLevel",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Below this value, a DoLong() is executed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "sellLevel",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Above this value, a DoShort() is executed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetCommand",
    "Command": 4410,
    "CommandType": 1,
    "Category": 23,
    "Description": "Gets a command by name.",
    "ReturnDescription": "Returns the command.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The name of the command.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetConsensusSignal",
    "Command": 6002,
    "Description": "Counts the number of signals. When the majority agrees it will return the signal.",
    "ReturnDescription": "Returns SignalLong, SignalShort, SignalExitPosition or SignalNone when there is a consensus or SignalNone when there is not.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 101,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Indicator signals collection. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetCrossOverUnderSignal",
    "Command": 6003,
    "Description": "Determines the signal from a result with a crossover or -under level.",
    "ReturnDescription": "Returns SignalLong when the a crossover occurs, SignalShort when a crossunder occurs and SignalNone when non one those happened.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "fast",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'faster' value.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "slow",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'slower' value.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetCurrentProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Bot position enum. PositionLong, PositionShort or NoPosition.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 5602,
    "CommandType": 1,
    "Category": 29,
    "Description": "Gets unrealized plus realized profits of the current open position. Optional parameters fall back to main bot settings. The accountId parameter can take a positionId as well.",
    "ReturnDescription": "Returns the total profit. On spot/margin the result will be in the quote currency. For leverage its in the underlying currency.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetCurrentROI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Bot position enum. PositionLong, PositionShort or NoPosition.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 5603,
    "CommandType": 1,
    "Category": 29,
    "Description": "Gets the return on investment percentage based on the total cost/margin used of the open positions. Optional parameters fall back to main bot settings. The accountId parameter can take a positionId as well.",
    "ReturnDescription": "Returns the ROI percentage.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetExchangeMarkets",
    "Parameters": [
      {
        "Index": 0,
        "Name": "exchangeCode",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The exchange code affiliated with the exchange.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 7222,
    "CommandType": 1,
    "Category": 37,
    "Description": "An array of markets affiliated with a particular exchange.",
    "ReturnDescription": "Returns an array with all the markets as a string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetFailedOrderMessage",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 5006,
    "CommandType": 1,
    "Category": 26,
    "Description": "The reason for the order failure.",
    "ReturnDescription": "Returns a string with the reason for the order failure.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetHaasScriptVersion",
    "Parameters": [],
    "Command": 5822,
    "CommandType": 1,
    "Category": 30,
    "Description": "Gets the current HaasScript version as a number.",
    "ReturnDescription": "Returns the version number.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetHigh",
    "Command": 4002,
    "CommandType": 1,
    "Category": 21,
    "Description": "Gets the highest value.",
    "ReturnDescription": "Returns the highest value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to include.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to skip.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetHighs",
    "Command": 4003,
    "CommandType": 1,
    "Category": 21,
    "Description": "Gets the highest values within lookback period.",
    "ReturnDescription": "Returns the highest values within lookback period.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to include.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetLastTrades",
    "Command": 5402,
    "CommandType": 1,
    "Category": 28,
    "ReturnDescription": "Returns the last trades. Array format: [[price, amount, isBuy?, unix], ... ].",
    "Parameters": [
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum number of records returned (can return less).",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Description": "Gets a list of the last trades.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetLeverage",
    "Command": 5828,
    "CommandType": 1,
    "Category": 30,
    "Description": "Gets the set leverage for current or specified market.",
    "ReturnDescription": "Returns the leverage value or -1 if request failed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetLow",
    "Command": 4004,
    "CommandType": 1,
    "Category": 21,
    "Description": "Gets the lowest value.",
    "ReturnDescription": "Returns the lowest value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to include.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to skip.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetLows",
    "Command": 4005,
    "CommandType": 1,
    "Category": 21,
    "ReturnDescription": "Returns the lowest values within lookback period.",
    "Description": "Gets the lowest values within lookback period.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of records to include.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetMarginMode",
    "Command": 5811,
    "CommandType": 1,
    "Category": 30,
    "Description": "Gets the current margin mode for current or specified market.",
    "ReturnDescription": "Returns the margin mode enum.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetMaxLeverage",
    "Command": 5810,
    "CommandType": 1,
    "Category": 30,
    "Description": "Gets the maximum leverage for current or specified market.",
    "ReturnDescription": "Returns the maximum leverage value or -1 if request failed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderbook",
    "ReturnDescription": "Returns a collection with 4 arrays.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5408,
    "CommandType": 1,
    "Category": 28,
    "Description": "Gets the orderbook on a specific market.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "askPrices",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ask/buy prices. Sorted from low to high.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "askAmounts",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ask/buy amounts. Sorted on price from low to high.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "bidPrices",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Bid/sell prices. Sorted from low to high.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "bidAmounts",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Bid/sell amounts. Sorted on price from low to high.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderbookAsk",
    "ReturnDescription": "Returns an array of bid prices and order sizes. Output format: [[price, amount], [price, amount] ...].",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5403,
    "CommandType": 1,
    "Category": 28,
    "Description": "Gets a list of the orderbook ask records.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderbookBid",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5404,
    "CommandType": 1,
    "Category": 28,
    "Description": "Gets a list of the orderbook bid records.",
    "ReturnDescription": "Returns an array of bid prices and order sizes. Output format: [[price, amount], [price, amount] ...].",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderCancelledAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 5000,
    "CommandType": 1,
    "Category": 26,
    "Description": "Calculates the cancelled amount if the order is completed/cancelled.",
    "ReturnDescription": "Returns the cancelled amount if the order is completed/cancelled.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderFilledAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "afterFees",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "If true, the fee cost are subtracted from the total amount if they are paid in the base currency.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 5001,
    "CommandType": 1,
    "Category": 26,
    "Description": "Calculates the amount filled for a specific order.",
    "ReturnDescription": "Returns the amount filled for a specific order.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderOpenTime",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "inSeconds",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "If set on true, the timespan will be in seconds.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 5002,
    "CommandType": 1,
    "Category": 26,
    "Description": "Calculates how long an order is or has been open in minutes.",
    "ReturnDescription": "Returns the time the order is or has been open for in minutes.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 5007,
    "CommandType": 1,
    "Category": 26,
    "Description": "Calculates the realized profits of the order.",
    "ReturnDescription": "Returns gross profits of the order.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetOrderType",
    "Parameters": [],
    "Command": 5821,
    "CommandType": 1,
    "Category": 30,
    "Description": "Returns the current main order type.",
    "ReturnDescription": "Returns the order type enum.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4600,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the total amount open in a specific position.",
    "ReturnDescription": "Returns the total amount open in a specific position.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      7400,
      7406,
      7404,
      7405,
      7401,
      7403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionDirection",
    "Command": 4601,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the direction of a specific position.",
    "ReturnDescription": "Returns PositionLong, PositionShort or NoPosition.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      2401,
      2402,
      2400
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionEnterPrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "includeClosed",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "True for total position amount (default), false for only open amount.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "Command": 4602,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the average enter price of an open position.",
    "ReturnDescription": "Returns the average enter price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionMarket",
    "Command": 4603,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the market of an open position.",
    "ReturnDescription": "Returns the account, market & leverage as a single string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206,
      7400,
      7406,
      7401,
      7403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionMode",
    "Command": 5816,
    "CommandType": 1,
    "Category": 30,
    "Description": "Gets the current position mode for current or specified market.",
    "ReturnDescription": "Returns the position mode enum.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional target price. Default is the best bid/ask.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 4604,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the total realized plus unrealized profit of a specific position.",
    "ReturnDescription": "Returns the total realized plus unrealized profit of a specific position. On spot/margin the result will be in the quote currency. For leverage its in the underlying currency.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetPositionROI",
    "Command": 4605,
    "CommandType": 1,
    "Category": 24,
    "Description": "Calculates the ROI based on used margin and unrealized + realized profits.",
    "ReturnDescription": "Returns the ROI as a percentage.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional target price. Default is the best bid/ask.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetRemoteSignal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "id",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unique identifier of the signal.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6004,
    "CommandType": 1,
    "Category": 31,
    "Description": "Gets the remote signal which is published by SaveRemoteSignal()",
    "ReturnDescription": "Returns a trade signal enumeration. For example SignalLong(), SignalShort(), SignalExitPosition(), SignalNone() or SignalError().",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetSuperSignal",
    "Command": 6011,
    "Description": "Returns a continuous trade signal with defined signal type and values.",
    "ReturnDescription": "Returns a signal based on defined 'signalType' (see InputSignalTypes()).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "indicatorValue",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'faster' or indicator value.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "signalValue",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The 'slower' or signal value.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "signalType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal type which defines how the inputs are interpreted.",
        "ScriptType": null,
        "Suggestion": [
          3418
        ]
      },
      {
        "Index": 0,
        "Name": "centerPosition",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The center position for 'Zero Cross' signal types. 0 for indicators that oscillate below and above zero, 50 for indicators like RSI, MFI and STOCH.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "buyLevel",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The buy level for 'Threshold' signal types. Used for indicators like RSI, MFI and STOCH.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "sellLevel",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The sell level for 'Threshold' signal types. Used for indicators like RSI, MFI and STOCH.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetSwing",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 6604,
    "CommandType": 1,
    "Category": 34,
    "Description": "Calculates the amount of swing in percentages.",
    "ReturnDescription": "Returns the amount of swing in percentages.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetThresholdSignal",
    "Command": 6005,
    "Description": "Determines the signal based on a result and a threshold.",
    "ReturnDescription": "Returns SignalLong when the result is below the threshold and SignalShort when the result is above the threshold.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Below this value, a SignalLong is returned. If its above a SignalShort.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "swing",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum swing below or above the threshold before a signal is returned.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetTimer",
    "Command": 6813,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the elapsed time for a timer.",
    "ReturnDescription": "Returns the elapsed time in milliseconds.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional key if using multiple timers.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetTradingReport",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 5604,
    "CommandType": 1,
    "Category": 29,
    "Description": "Gets the trading report container with many useful values to help properly evaluate a strategy or a trading system.",
    "ReturnDescription": "The trading report container.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "maxDrawDownPrc",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Max. DrawDown in percentages.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "maxDrawDown",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Max. DrawDown in underlying asset.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "sharpeRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Sharpe Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "sortinoRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Sortino Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "winPercentage",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Win percentage.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "profitRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Profit Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "profitFactor",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Profit Factor.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "cpcIndex",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "CPC Index.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "tailRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Tail Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "commonSenseRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Common Sense Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "outlierWinRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Outlier Win Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "outlierLossRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Outlier Loss Ratio.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "profitMarginRatio",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Profit Margin Ratio (Gain / Total Used Margin).",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "biggestWin",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Biggest Winner.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "biggestLoss",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Biggest Loser.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "highestPointInProfit",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Highest Point in total PNL.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "lowestPointInProfit",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lowest Point in total PNL.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "totalMarginUsed",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Total Margin Used.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "averageMargin",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Average Margin used per position.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "averageProfit",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Average Profit per position.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "closedPositions",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Closed Positions count.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "profitablePositions",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Profitable Positions count.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "losingPositions",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Losing Positions count.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "executedOrders",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Executed Orders count.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "completedOrders",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Completed Orders count.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209,
          4201,
          408
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetType",
    "Command": 4409,
    "CommandType": 1,
    "Category": 23,
    "Description": "Gets the data type of the input.",
    "ReturnDescription": "Returns the data type.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The input value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetUnanimousSignal",
    "Command": 6006,
    "Description": "Validates if all signals are the same.",
    "ReturnDescription": "Returns SignalLong, SignalShort or SignalNone when there is unanimous decision and SignalNone when there is not.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 101,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Indicator signals collection. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetVolume",
    "Command": 5212,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with volume data. Sorted from new to old.",
    "ReturnDescription": "Returns a collection with volume data.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GetWeightedConsensusSignal",
    "Command": 6014,
    "Description": "Calculates and determines the weighted consensus signal.",
    "ReturnDescription": "Returns SignalLong, SignalShort, SignalExitPosition or SignalNone when there is a consensus or SignalNone when there is not.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "longWeight",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The required sum of the long signals weight before the signal is valid.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "shortWeight",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The required sum of the short signals weight before the signal is valid.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "exitWeight",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The required sum of the exit signals weight before the signal is valid.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 101,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Indicator signals collection. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Gold",
    "Command": 1607,
    "Description": "Enumeration, returns a color hex string. Can be used as Gold, Gold() or with a specific opacity Gold(10).",
    "ReturnDescription": "Returns hex string of gold (#CC9900)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Grab",
    "Command": 12,
    "CommandType": 1,
    "Category": 0,
    "Description": "Grabs a range from the array. If count is not set, return all after the offset.",
    "ReturnDescription": "Specified range from the array.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Offset from start.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of items to grab.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "GravestoneDojiType",
    "Command": 7818,
    "Description": "Enumeration, returns an enum for GravestoneDojiType type.",
    "ReturnDescription": "Returns the GravestoneDojiType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Gray",
    "Command": 1608,
    "Description": "Enumeration, returns a color hex string. Can be used as Gray, Gray() or with a specific opacity Gray(10).",
    "ReturnDescription": "Returns hex string of gray (#C0C0C0)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Green",
    "Command": 1609,
    "Description": "Enumeration, returns a color hex string. Can be used as Green, Green() or with a specific opacity Green(10).",
    "ReturnDescription": "Returns hex string of green (#00FF00)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1210,
    "Description": "Keeps track of the highest/lowest recorded price and adjust the stop loss accordingly. The higher the price change the more the trailing distances grows.",
    "CommandName": "GrowingTrailingStopLoss",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trailing stop loss percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "growPercentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The grow percentage. 0.035 for example.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HammerType",
    "Command": 7819,
    "Description": "Enumeration, returns an enum for HammerType type.",
    "ReturnDescription": "Returns the HammerType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HangingManType",
    "Command": 7820,
    "Description": "Enumeration, returns an enum for HangingManType type.",
    "ReturnDescription": "Returns the HangingManType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HaramiCrossType",
    "Command": 7822,
    "Description": "Enumeration, returns an enum for HaramiCrossType type.",
    "ReturnDescription": "Returns the HaramiCrossType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HaramiType",
    "Command": 7821,
    "Description": "Enumeration, returns an enum for HaramiType type.",
    "ReturnDescription": "Returns the HaramiType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HedgePositionMode",
    "Command": 2805,
    "Description": "Enumeration, returns a hedge position mode enum. Used with Get-/SetPositionMode() and IsPositionModeSupported()",
    "ReturnDescription": "Returns the hedge-position mode enum.",
    "CommandType": 15,
    "Category": 48,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5817,
      5818,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HeikenClosePrices",
    "Command": 5208,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with the average of open, high, low and close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of the average of open, high, low and close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HeikinAshi",
    "Command": 1415,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the HeikinAshi enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HeikinOpenPrices",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5202,
    "CommandType": 1,
    "Category": 27,
    "Description": "Gets the Heikin-Ashi open prices.",
    "ReturnDescription": "Returns the Heikin-Ashi open prices.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HideOrderSettings",
    "Command": 5807,
    "CommandType": 1,
    "Category": 30,
    "Description": "Hides the 2 order settings fields.",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "HideTradeAmountSettings",
    "Command": 5806,
    "CommandType": 1,
    "Category": 30,
    "Description": "Hides the 2 trade amount settings fields.",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "HighPrices",
    "Command": 5205,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with high prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of high prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HighPriceSource",
    "Command": 8201,
    "Description": "Enumeration, returns an enum for High Price Source type.",
    "ReturnDescription": "Returns the High Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HignWaveType",
    "Command": 7823,
    "Description": "Enumeration, returns an enum for HignWaveType type.",
    "ReturnDescription": "Returns the HignWaveType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HikkakeModType",
    "Command": 7825,
    "Description": "Enumeration, returns an enum for HikkakeModType type.",
    "ReturnDescription": "Returns the HikkakeModType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HikkakeType",
    "Command": 7824,
    "Description": "Enumeration, returns an enum for HikkakeType type.",
    "ReturnDescription": "Returns the HikkakeType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HindSightSignal",
    "Command": 8303,
    "Description": "Uses hindsight to tell if its the best moment to long or short",
    "ReturnDescription": "Returns a trading signal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Hindsight view period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HLC",
    "Command": 1416,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the HLC enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HLCPrices",
    "Command": 5203,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with the average of high, low and close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of the average of high, low and close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HLCPriceSource",
    "Command": 8205,
    "Description": "Enumeration, returns an enum for HLC Price Source type.",
    "ReturnDescription": "Returns the HLC Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HLPrices",
    "Command": 5204,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with an average of high and low prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of an average of high and low prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HLPriceSource",
    "Command": 8204,
    "Description": "Enumeration, returns an enum for HL Price Source type.",
    "ReturnDescription": "Returns the HL Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HNC",
    "Command": 4407,
    "CommandType": 1,
    "Category": 23,
    "Description": "HNC is an array on which match can be applied directly. This is not position with the lua code `{}`.",
    "ReturnDescription": "Returns an array with or without values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "size",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The size of the array. Default 0.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The default value when size is set. Default is 0.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HomingPigeonType",
    "Command": 7826,
    "Description": "Enumeration, returns an enum for HomingPigeonType type.",
    "ReturnDescription": "Returns the HomingPigeonType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_DCPERIOD",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6427,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The Dominant Cycle Period (HT_DCPERIOD).\nThe Hilbert Transform is a technique used to generate inphase and quadrature components\nof a de-trended real-valued \"analytic-like\" signal (such as a Price Series) in order\nto analyze variations of the instantaneous phase and amplitude. HTPeriod (or MESA Instantaneous Period)\nreturns the period of the Dominant Cycle of the analytic signal as generated by the Hilbert Transform.\nThe Dominant Cycle can be thought of as being the \"most likely\" period (in the range of 10 to 40)\nof a sine function of the Price Series.",
    "ReturnDescription": "Returns the HT_DCPERIOD result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_DCPHASE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6428,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The Dominant Cycle Phase (HT_DCPHASE)\nThe Hilbert Transform is a technique used to generate inphase and quadrature components\nof a de-trended real-valued \"analytic-like\" signal (such as a Price Series) in order\nto analyze variations of the instantaneous phase and amplitude. HTDCPhase returns the\nHilbert Transform Phase of the Dominant Cycle. The Dominant Cycle Phase lies in the\nrange of 0 to 360 degrees.",
    "ReturnDescription": "Returns the HT_DCPHASE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_PHASOR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6429,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The Phasor Components (HT_PHASOR)\nThe Hilbert Transform is a technique used to generate inphase and quadrature components\nof a de-trended real-valued \"analytic-like\" signal (such as a Price Series) in order\nto analyze variations of the instantaneous phase and amplitude.\nIn-Phase is the Hilbert Transform generated In-Phase component of the input Price Series.\nQuadrature is the Hilbert Transform generated Quadrature component of the input Price Series.",
    "ReturnDescription": "Returns the HT_PHASOR result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "inPhaseOut",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "In-Phase component.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "quadratureOut",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Quadrature component.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_SINE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6430,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The SineWave (HT_SINE)\nThe Hilbert Transform is a technique used to generate inphase and quadrature components\nof a de-trended real-valued \"analytic-like\" signal (such as a Price Series) in order\nto analyze variations of the instantaneous phase and amplitude. HTDCPhase returns the\nHilbert Transform Phase of the Dominant Cycle. The Dominant Cycle Phase lies in the\nrange of 0 to 360 degrees.\nThe Hilbert Transform Sine is just the sine of the DC Phase. \nThe Hilbert Transform Lead Sine is just the sine of the DC Phase advanced by 45 degrees.",
    "ReturnDescription": "Returns the HT_SINE result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "sine",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Sine of the DC Phase.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "leadSine",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lead Sine of the DC Phase advanced by 45 degrees.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_TRENDLINE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6431,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The Trend Line (HT_TRENDLINE)\nThe Hilbert Transform is a technique used to generate inphase and quadrature components\nof a de-trended real-valued \"analytic-like\" signal (such as a Price Series) in order\nto analyze variations of the instantaneous phase and amplitude. HTTrendline (or MESA Instantaneous Trendline)\nreturns the Price Series value after the Dominant Cycle of the analytic signal as generated by the Hilbert\nTransform has been removed. The Dominant Cycle can be thought of as being the \"most likely\" period\n(in the range of 10 to 40) of a sine function of the Price Series.",
    "ReturnDescription": "Returns the HT_TRENDLINE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "HT_TRENDMODE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6432,
    "CommandType": 1,
    "Category": 33,
    "Description": "Hilbert Transform - The Trend Mode (HT_TRENDMODE).",
    "ReturnDescription": "Returns the HT_TRENDMODE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ICHIMOKU",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "tenkansen",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length for Tenkan-sen.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "kijunsen",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length for Kijun-sen.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "senkouspanb",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length for Senkou Span B.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6433,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Ichimoku Clouds (ICHIMOKU) also known as Ichimoku Kinko Hyo, developed by journalist Goichi Hosoda,\nis a versatile indicator that defines support and resistance, identifies trend direction, gauges momentum and provides trading signals.\nIchimoku Kinko Hyo translates into “one look equilibrium chart”. With one look, chartists\ncan identify the trend and look for potential signals within that trend. Even though the\nIchimoku Cloud may seem complicated when viewed on the price chart, it's actually a rather\nstraightforward indicator; the concepts are easy to understand and the signals are well-defined.",
    "ReturnDescription": "Returns the ICHIMOKU result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "conversion",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The conversion line of the Ichimoku.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "base",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base line of the Ichimoku.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "spanA",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The leading span  of the Ichimoku.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "spanB",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The leading span B of the Ichimoku.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IdenticalThreeCrowsType",
    "Command": 7827,
    "Description": "Enumeration, returns an enum for IdenticalThreeCrowsType type.",
    "ReturnDescription": "Returns the IdenticalThreeCrowsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IfElse",
    "Command": 3302,
    "CommandType": 1,
    "Category": 40,
    "Description": "Will return 1 of 2 values based on the input boolean.",
    "ReturnDescription": "Return the first value if true or the second value when false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "statement",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Input boolean to check.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If true, this value is passed on.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If false, this value is passed on.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IfElseIf",
    "Command": 3301,
    "CommandType": 1,
    "Category": 40,
    "Description": "IfElseIf returns a value based on the boolean inputs.",
    "ReturnDescription": "Return the first value if statement1 is true, return the second value if statement2 is true, or returns value3 when all statements are invalid.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "statement1",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Statement one.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "statement2",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Statement two.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value1, returns if statement1 is valid.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value2, returns if statement2 is valid.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value3",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value3, returns is statement 1 and 2 are invalid.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IfNull",
    "Command": 3213,
    "CommandType": 1,
    "Category": 17,
    "Description": "Sets the defaultValue if the value is nil.",
    "ReturnDescription": "Returns the value of defaultValue when value is nil.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value when the value is not set.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IgnoreSignalIf",
    "Command": 6007,
    "Description": "Marks the signal to be ignored when it matches a certain signal.",
    "ReturnDescription": "Returns the original signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "signalToIgnore",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal to ignore. SignalLong, SignalShort or SignalExitPosition.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IMI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "open",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Open prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6434,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Intraday Momentum Index (IMI), developed by Tushar Chande,\ncombines aspects of candlestick analysis with the relative strength index (RSI). The intraday\nindicator was designed to provide investors with a way to find optimal days to buy and sell.",
    "ReturnDescription": "Returns the IMI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IndicatorCenterCrossType",
    "Command": 2605,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the IndicatorCenterCrossType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IndicatorContainer",
    "Command": 7000,
    "CommandType": 1,
    "Category": 36,
    "Description": "Merges multiple signals into a single list and determines the unanimous and consensus signal.",
    "ReturnDescription": "Returns a list with on index 1 the array with signals, on index 2 the unanimous and on index 3 the consensus signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 101,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Indicator signals. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "unanimousSignal",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unanimous signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          7003
        ]
      },
      {
        "Index": 0,
        "Name": "consensusSignal",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The consensus signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          7003
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IndicatorSignalCrossType",
    "Command": 2604,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the IndicatorSignalCrossType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IndicatorThresholdType",
    "Command": 2608,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the IndicatorThresholdType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InitExportData",
    "Command": 8400,
    "CommandType": 1,
    "Category": 22,
    "Description": "Initialize a file that can be exported later.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique name of the file",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "headers",
        "Type": 103,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Header definition",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "InNeckType",
    "Command": 7828,
    "Description": "Enumeration, returns an enum for InNeckType type.",
    "ReturnDescription": "Returns the InNeckType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Input",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          4406,
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3400,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a script input field. The type is depending on the default value. It can be a number, text or boolean (checkbox) field. Without default value, it will be a text field.",
    "ReturnDescription": "Returns the input value.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputAccount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3401,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an account selection field.",
    "ReturnDescription": "Return the selected account guid.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      4206,
      7604
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputAccountMarket",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3402,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an account, market & leverage dropdown.",
    "ReturnDescription": "Returns a combined string. For example 9c9aaf1f-469b-4eea-bca3-df61db37c549_BITFINEX_BTC_USD_.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      4206,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      5600,
      5602
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputButton",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "callback",
        "Type": 9,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The callback which will be executed when the button is pressed.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3423,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a button in the input field. When press in the UI, the bot will receive the action and execute the callback defined in the parameters.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputCdlTypes",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          7800,
          7801,
          7802,
          7803,
          7804,
          7805,
          7806,
          7807,
          7808,
          7809,
          7810,
          7811,
          7812,
          7813,
          7814,
          7815,
          7816,
          7817,
          7818,
          7819,
          7820,
          7821,
          7822,
          7823,
          7824,
          7825,
          7826,
          7827,
          7828,
          7829,
          7830,
          7831,
          7832,
          7833,
          7834,
          7835,
          7836,
          7837,
          7838,
          7839,
          7840,
          7841,
          7842,
          7843,
          7844,
          7845,
          7846,
          7847,
          7848,
          7849,
          7850,
          7851,
          7852,
          7853,
          7854,
          7855,
          7856,
          7857,
          7858,
          7859,
          7860
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3413,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with available Candlestick Pattern (CDL) types. Can be used in combination with CDL().",
    "ReturnDescription": "Returns the selected CDL type as enum. For example ThreeCrowsType.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6490
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputConstant",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3420,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with available constant in the category of the defaultValue. If for example SignalLong is set as default, all the signal constants will be available in the dropdown.",
    "ReturnDescription": "Returns the selected constant type as constant.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputGroupHeader",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The header label text.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3414,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a group header, separating input sets.",
    "ReturnDescription": "",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputInterval",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3404,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an interval dropdown.",
    "ReturnDescription": "Returns the selected interval in minutes.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      5200,
      5211,
      5209,
      5205,
      5206,
      5201,
      5212,
      5215,
      5216
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputLrTypes",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          3001,
          3000,
          3003,
          3002
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3405,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with the available LR types.",
    "ReturnDescription": "Returns the selected LR type as enum.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6439
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputMarket",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3406,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a market dropdown. The market options are related to the main account selection.",
    "ReturnDescription": "Returns the selected market. For example BITMEX_XBT_USD_XBTUSD.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      4206,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      5600,
      5602
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputMaTypes",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3407,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with available MA types. Can be used in combination with a variety of technical indicators like BBANDS() or PPO().",
    "ReturnDescription": "Returns the selected ma type as constant.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputOptions",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "options",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Options list/array.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3408,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with custom options.",
    "ReturnDescription": "Returns the selected value as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputOrderType",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          2000,
          2001,
          2002
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3409,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with the default available order types.",
    "ReturnDescription": "Returns the selected order type as enum.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7400,
      7406,
      7405,
      7404,
      7401,
      7403,
      5805
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputPriceSource",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3410,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a price source dropdown.",
    "ReturnDescription": "Returns the selected price source as string. For example BITSTAMP.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputPriceSourceMarket",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional parameter to restrict market types.",
        "ScriptType": null,
        "Suggestion": [
          2802,
          2801,
          2800
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3411,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a price source & market dropdown.",
    "ReturnDescription": "Returns the selected market as string. For example BITSTAMP_BTC_USD_.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      4206,
      5201,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputSignalManagement",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          3418,
          2604,
          2605,
          2606,
          2607,
          2608,
          2609,
          2610
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3422,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates multiple dropdown options for signal management and mapping.",
    "ReturnDescription": "Returns the baked signal based on settings.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputSignalTypes",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          3418,
          2604,
          2605,
          2606,
          2607,
          2608,
          2609,
          2610
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3418,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with available Signal Types. Can be used in combination with GetSuperSignal().",
    "ReturnDescription": "Returns the selected signal type enum.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputSourcePrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "label",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The field label text.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The default value for the field.",
        "ScriptType": null,
        "Suggestion": [
          8203,
          8200,
          8201,
          8202,
          8204,
          8205,
          8206,
          8207
        ]
      },
      {
        "Index": 0,
        "Name": "tooltip",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The tooltip text for the field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The group of the input field.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 3424,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dropdown with available Source Price types. Can be used in combination with SourcePrices().",
    "ReturnDescription": "Returns the selected source type as constant.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputTable",
    "Parameters": [
      {
        "Index": 0,
        "Name": "options",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "InputTableOptions() result or the title of the table as a string.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "columns",
        "Type": 100,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "InputTableColumn() or columns headers as string.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3415,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates a dynamic input table.",
    "ReturnDescription": "Returns the tables values per row. [[1,2,3,4], [5,6,7,8], [9,0,1,2]].",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputTableColumn",
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Column name.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 100,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Default values.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3417,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an table column options object for InputTable()",
    "ReturnDescription": "Returns the options objects.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputTableColumnDropdown",
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Column name.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "options",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Dropdown options. For example { \"options-A\", \"options-B\" }",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 100,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Default values.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3419,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an table column options object for InputTable() with a dropdown",
    "ReturnDescription": "Returns the options objects.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InputTableOptions",
    "Parameters": [
      {
        "Index": 0,
        "Name": "title",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Name of the table.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "rows",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Fixed number of rows. Overwrites maxRows.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "maxRows",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Dynamic number of rows with a maximum.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "group",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Group of the table.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 3416,
    "CommandType": 1,
    "Category": 18,
    "Description": "Creates an options object for InputTable().",
    "ReturnDescription": "Returns the options objects.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InsuranceContainer",
    "ReturnDescription": "Returns true if all the signals in the collection are true.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 102,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Safety signals collection. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": [
          1009,
          1007,
          1001,
          1010,
          1002,
          1000,
          1008,
          1006,
          1005,
          1004,
          1003,
          1011
        ]
      }
    ],
    "Command": 7001,
    "CommandType": 1,
    "Category": 36,
    "Description": "Validates if all the signals agree.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "InvertedHammerType",
    "Command": 7829,
    "Description": "Enumeration, returns an enum for InvertedHammerType type.",
    "ReturnDescription": "Returns the InvertedHammerType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsAbnormal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "dataset",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Dataset",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "multiplier",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Multiplier to control the sensitivity (1-3)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 8300,
    "CommandType": 1,
    "Category": 47,
    "Description": "Looks to a numberic array and tells if the last value is abnormal",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsAnyOrderFinished",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4802,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if there are any open orders completed/cancelled.",
    "ReturnDescription": "Returns true if there are any open orders completed/cancelled.",
    "RequiresCall": true,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsAnyOrderOpen",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4803,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if there are any open orders.",
    "ReturnDescription": "Returns true if there are any open orders.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsBiggerAndSmallerThan",
    "Command": 3215,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if the value is bigger than lowValue and smaller then highValue.",
    "ReturnDescription": "Returns true the value is bigger than lowValue and smaller then highValue.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lowValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "highValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsBiggerOrSmallerThan",
    "Command": 3204,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if the value is bigger than highValue or smaller then lowValue.",
    "ReturnDescription": "Returns true the value is bigger than highValue or smaller then lowValue.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "highValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "lowValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsBiggerThan",
    "Command": 3205,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if input1 is bigger than input2.",
    "ReturnDescription": "Returns true input1 is bigger than input2.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare with.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsBotPaused",
    "Command": 5825,
    "CommandType": 1,
    "Category": 30,
    "Description": "Used in combination with Pause- & ResumeBot(). The value can also be updated manually though the UI.",
    "ReturnDescription": "Returns true if the pause flag is set.",
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsBuyOrder",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4806,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if the given order is a buy order.",
    "ReturnDescription": "Returns true if the given order is on buy side.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsEnterpriseVersion",
    "Parameters": [],
    "Command": 5826,
    "CommandType": 1,
    "Category": 30,
    "Description": "Returns true if running the enterprise version. Otherwise false.",
    "ReturnDescription": "Returns a boolean.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsFalling",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source values.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lookback",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lookback value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6605,
    "CommandType": 1,
    "Category": 34,
    "Description": "Checks if the values are decreasing towards the newest within the lookback period.",
    "ReturnDescription": "Returns true if the values are decreasing towards the newest within the lookback period. Otherwise false.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsFallingSince",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source values.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lookback",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lookback value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6607,
    "CommandType": 1,
    "Category": 34,
    "Description": "Counts the number of falling ticks.",
    "ReturnDescription": "Returns the number of ticks the data is falling.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsFalse",
    "Command": 3206,
    "CommandType": 1,
    "Category": 17,
    "Description": "Validates all values on being false.",
    "ReturnDescription": "Returns true all values are false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 102,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The boolean to compare.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsMarginModeSupported",
    "Command": 5813,
    "CommandType": 1,
    "Category": 30,
    "Description": "Checks if the specified margin mode is supported on current or specified market.",
    "ReturnDescription": "Returns true if supported, otherwise false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "marginMode",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Request margin mode. CrossMarginMode or IsolatedMarginMode",
        "ScriptType": null,
        "Suggestion": [
          2803,
          2804
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsNotNull",
    "Command": 3207,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if the value is not null.",
    "ReturnDescription": "Returns true if the value is not null.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsNull",
    "Command": 3208,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if the value is null.",
    "ReturnDescription": "Returns true if the value is null.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsolatedMarginMode",
    "Command": 2804,
    "Description": "Enumeration, returns isolated margin mode enum. Used with Get-/SetMarginMode() and IsMarginModeSupported()",
    "ReturnDescription": "Returns the isolated-margin mode enum.",
    "CommandType": 15,
    "Category": 49,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5812,
      5813,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsOrderFilled",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4804,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if the given order is filled.",
    "ReturnDescription": "Returns true if the given order is filled.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsOrderOpen",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4805,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if the given order is still open.",
    "ReturnDescription": "Returns true if the given order is still open.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsPositionClosed",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4611,
    "CommandType": 1,
    "Category": 24,
    "Description": "Checks whether or not a position is closed.",
    "ReturnDescription": "Returns true if position is closed, otherwise false.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsPositionModeSupported",
    "Command": 5818,
    "CommandType": 1,
    "Category": 30,
    "Description": "Checks if specified position mode is supported on current or specified market.",
    "ReturnDescription": "Returns true if supported, otherwise false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionMode",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Request position mode. OneWayPositionMode or HedgePositionMode",
        "ScriptType": null,
        "Suggestion": [
          2806,
          2805
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsRising",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source values.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lookback",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lookback value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6606,
    "CommandType": 1,
    "Category": 34,
    "Description": "Checks if the values are increasing towards the newest within the lookback period.",
    "ReturnDescription": "Returns true if the values are increasing towards the newest within the lookback period. Otherwise false.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsRisingSince",
    "Parameters": [
      {
        "Index": 0,
        "Name": "array",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source values.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lookback",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lookback value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6608,
    "CommandType": 1,
    "Category": 34,
    "Description": "Counts the number of rising ticks.",
    "ReturnDescription": "Returns the number of ticks the data is rising.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsSellOrder",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 4807,
    "CommandType": 1,
    "Category": 25,
    "Description": "Checks if the given order is a sell order.",
    "ReturnDescription": "Returns true if the given order is on sell side.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsSmallerThan",
    "Command": 3209,
    "CommandType": 1,
    "Category": 17,
    "Description": "Checks if input1 is smaller than input2.",
    "ReturnDescription": "Returns true if input1 is smaller than input2.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to compare with.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsTradeAmountEnough",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to check the trade amount.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to check.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "logWarning",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, a warning is logged.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 7204,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets whether or not the trade amount is high enough for exchange limits.",
    "ReturnDescription": "Returns whether or not the trade amount is high enough for exchange limits.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsTrue",
    "Command": 3210,
    "CommandType": 1,
    "Category": 17,
    "Description": "Validates all values on being true.",
    "ReturnDescription": "Returns true all values are true.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 102,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The boolean to compare.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "IsValidMarket",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7221,
    "CommandType": 1,
    "Category": 37,
    "Description": "Checks if the input is a valid market.",
    "ReturnDescription": "Returns true if the market is valid.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KAMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastest",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fastest smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowest",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slowest smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6435,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Kaufman's Adaptive Moving Average (KAMA), developed by Perry Kaufman,\nis an intelligent moving average. The powerful trend-following indicator is based on the\nExponential Moving Average (EMA) and is responsive to both trend and volatility.\nLike all moving averages, the KAMA can be used to visualize the trend. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the KAMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KAMA2",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastest",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fastest smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowest",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slowest smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6436,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Kaufman's Adaptive Moving Average (KAMA2), developed by Perry Kaufman,\nis an intelligent moving average. The powerful trend-following indicator is based on the\nExponential Moving Average (EMA) and is responsive to both trend and volatility.\nLike all moving averages, the KAMA can be used to visualize the trend. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the KAMA2 result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KamaType",
    "Command": 1802,
    "Description": "Enumeration, returns an enum for KAMA type.",
    "ReturnDescription": "Returns the KAMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KELTNER",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "emaPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "EMA period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "atrPeriod",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "ATR period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "multiplier",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "ATR multiplier.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6437,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Keltner Channel (KELTNER), originally developed by Chester Keltner, extended by Linda Bradford Raschke,\nuses a volatility-based envelopes set above and below an exponential moving average.\nThis indicator is similar to Bollinger Bands, which use the standard deviation (STDDEV)\nto set the bands. Instead of using the standard deviation, Keltner Channels use\nthe Average True Range (ATR) to set channel width. The channels are typically\nset 2x ATR values above and below the EMA. The exponential\nmoving average dictates direction and the Average True Range sets channel width.\nKeltner Channels are a trend following indicator used to identify reversals with\nchannel breakouts and channel direction. Channels can also be used to identify\noverbought and oversold levels when the market is ranging. This indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the KELTNER result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "upper",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Upper bands of the KELTNER.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "middle",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle bands of the KELTNER.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "lower",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lower bands of the KELTNER.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5,
      411
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KickingByLengthType",
    "Command": 7831,
    "Description": "Enumeration, returns an enum for KickingByLengthType type.",
    "ReturnDescription": "Returns the KickingByLengthType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KickingType",
    "Command": 7830,
    "Description": "Enumeration, returns an enum for KickingType type.",
    "ReturnDescription": "Returns the KickingType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KRI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6438,
    "CommandType": 1,
    "Category": 33,
    "Description": "Kairi method (KRI) is similar to Momentum according to its application mode.\nThe oscillator fluctuates around 0 but the fluctuation range is wider. KRI can be used for any time frame.\nIt is one of the simplest oscillators. When creating the indicator, deviation of a price from its simple\nmoving average is calculated and the result is shown in percentage of the average.",
    "ReturnDescription": "Returns the KRI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "KST",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "rocPeriod1",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "1st ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocSmaPeriod1",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "1st SMA-of-ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocPeriod2",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "2nd ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocSmaPeriod2",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "2nd SMA-of-ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocPeriod3",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "3rd ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocSmaPeriod3",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "3rd SMA-of-ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocPeriod4",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "4th ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rocSmaPeriod4",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "4th SMA-of-ROC period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signalPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6491,
    "CommandType": 1,
    "Category": 33,
    "Description": "Know Sure Thing (KST), developed by Martin Pring, is a momentum oscillator based on the smoothed\nRate-of-Change (ROC) for four different periods. In short, KST measures price momentum for four different price cycles, combining\nthem into a single momentum oscillator. Like any other unbound momentum oscillator, chartists can use KST to look for divergences, signal\nline crossovers, and centerline crossovers. Pring frequently applied trend lines to KST. Although trend line signals do not occur\noften, Pring notes that such breaks reinforce signal line crossovers. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the KST result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "kst",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "KST result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LadderBottomType",
    "Command": 7832,
    "Description": "Enumeration, returns an enum for LadderBottomType type.",
    "ReturnDescription": "Returns the LadderBottomType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastBuyTradesCommand",
    "Command": 5411,
    "CommandType": 1,
    "Category": 28,
    "Parameters": [
      {
        "Index": 0,
        "Name": "Seconds back",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Description": "Returns all last selling orders",
    "ReturnDescription": "Returns the buying trading volume",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastExitLongPrice",
    "Parameters": [],
    "Command": 203,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the last used exit long price.",
    "ReturnDescription": "Returns the last used exit long price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastExitPositionPrice",
    "Parameters": [],
    "Command": 205,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the last used exit short or long price.",
    "ReturnDescription": "Returns the last used exit short or long price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastExitShortPrice",
    "Parameters": [],
    "Command": 204,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the last used exit short price.",
    "ReturnDescription": "Returns the last used exit short price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastLongPrice",
    "Parameters": [],
    "Command": 202,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the last enter long price.",
    "ReturnDescription": "Returns the last enter long price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastLongProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 207,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the profit of the last long exit or sell trade.",
    "ReturnDescription": "Returns the profit.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastSellTradesCommand",
    "Command": 5410,
    "CommandType": 1,
    "Category": 28,
    "Parameters": [
      {
        "Index": 0,
        "Name": "Seconds back",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Description": "Returns all last selling orders",
    "ReturnDescription": "Returns the selling trading volume",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastShortPrice",
    "Parameters": [],
    "Command": 206,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the last enter short price.",
    "ReturnDescription": "Returns the last enter short price.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastShortProfit",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "Command": 208,
    "CommandType": 1,
    "Category": 1,
    "Description": "Gets the profit of the last short exit or buy trade.",
    "ReturnDescription": "Returns the profit.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LastTradesSentiment",
    "Command": 5406,
    "CommandType": 1,
    "Category": 28,
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Description": "Calculates the last trades sentiment as a number.",
    "ReturnDescription": "Returns the last trades sentiment. 0.5 is the default, idle value.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LeftAxis",
    "Command": 1400,
    "Description": "Enumeration, returns the a chart axis enum. Used ChartSetAxisOptions() for example.",
    "ReturnDescription": "Returns the LeftAxis enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406,
      418,
      402,
      404
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Leverage",
    "Parameters": [],
    "Command": 3603,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the main account leverage setting.",
    "ReturnDescription": "Leverage setting.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      5201
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LeverageTrading",
    "Command": 2800,
    "Description": "Enumeration, returns a market type enum. Used by MarketType()",
    "ReturnDescription": "Returns the LeverageTrading enum.",
    "CommandType": 15,
    "Category": 12,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7207,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LimitOrderType",
    "Command": 2000,
    "Description": "Standard limit order type enum with a default timeout of 10 minutes. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the LimitOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Line",
    "Command": 1417,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the Line enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LinearAxis",
    "Command": 1401,
    "Description": "Enumeration, returns the a chart axis type enum. Used ChartSetOptions() for example.",
    "ReturnDescription": "Returns the LinearAxis enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LINEARREG",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of the Linear Regression.",
        "ScriptType": null,
        "Suggestion": [
          3000,
          3001,
          3002,
          3003
        ]
      }
    ],
    "Command": 6439,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Linear Regression (LINEARREG)\nis a trend following indicator that plots a dynamic version of the linear\nregression indicator. The concept is to track the trend not using basic\naverages or weighted averages – as in the case of moving averages – but\nrather by taking the \"best fit\" line to match the data.",
    "ReturnDescription": "Returns the LINEARREG result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LineOptions",
    "Command": 406,
    "CommandType": 1,
    "Category": 2,
    "Description": "Creates a line options object to be used for Plot().",
    "ReturnDescription": "Creates a line options object.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the line.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "style",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The style of the line (Spiked, Smooth, Step and others).",
        "ScriptType": null,
        "Suggestion": [
          1408,
          1407,
          1409,
          1410,
          1411
        ]
      },
      {
        "Index": 0,
        "Name": "deco",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The line decoration (Solid, Dashed, Dotted).",
        "ScriptType": null,
        "Suggestion": [
          1406,
          1404,
          1405
        ]
      },
      {
        "Index": 0,
        "Name": "width",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The width of the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A positive offset will move the data points x number of candles. A negative number will move the data points back.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Axis side to snap on.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      },
      {
        "Index": 0,
        "Name": "id",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique identifier.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "behind",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the line will be plotted behind the price chart, if enabled.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "ignoreOnAxis",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the line will not be taken into consideration when calculating the range on the y-axis.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "drawTrailingLine",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, a dotted line will be drawn from the last data point to the y-axis.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ListDynamicType",
    "Command": 2204,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the ListDynamicType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ListNumberType",
    "Command": 2205,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the ListNumberType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Ln",
    "Description": "Calculates the logarithm of a specified number.",
    "ReturnDescription": "Returns the logarithm of a specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4021,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Load",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique identifier.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "defaultValue",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Default value for when no data is saved on the key. Default is nil.",
        "ScriptType": null,
        "Suggestion": [
          4403,
          4406,
          3212,
          3203
        ]
      }
    ],
    "Command": 4200,
    "CommandType": 1,
    "Category": 22,
    "Description": "Loads a value saved on the specified key.",
    "ReturnDescription": "Returns the saved value or nil.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Log",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "Message to log.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the log message.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 4201,
    "CommandType": 1,
    "Category": 22,
    "Description": "Create a message in the log.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "Log10",
    "Description": "Calculates the base 10 logarithm of a specified number.",
    "ReturnDescription": "Returns the base 10 logarithm of a specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4022,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LogError",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Error to log.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 4202,
    "CommandType": 1,
    "Category": 22,
    "Description": "Create an error message in the log.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "LogWalletError",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Warning to log.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 4207,
    "CommandType": 1,
    "Category": 22,
    "Description": "Create a warning message in the log and activates the trade amount error.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "LogWarning",
    "Parameters": [
      {
        "Index": 0,
        "Name": "message",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Warning to log.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      }
    ],
    "Command": 4203,
    "CommandType": 1,
    "Category": 22,
    "Description": "Create a warning message in the log.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "LongAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 4606,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the total amount open in a long position.",
    "ReturnDescription": "Returns the total amount open in a long position.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LongLeggedDojiType",
    "Command": 7833,
    "Description": "Enumeration, returns an enum for LongLeggedDojiType type.",
    "ReturnDescription": "Returns the LongLeggedDojiType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LongLineType",
    "Command": 7834,
    "Description": "Enumeration, returns an enum for LongLineType type.",
    "ReturnDescription": "Returns the LongLineType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LowPrices",
    "Command": 5206,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with low prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of low prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LowPriceSource",
    "Command": 8202,
    "Description": "Enumeration, returns an enum for Low Price Source type.",
    "ReturnDescription": "Returns the Low Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LR_Angle",
    "Command": 3000,
    "Description": "Enumeration, returns an enum for LINEARREG().",
    "ReturnDescription": "Returns the LR Angle enum.",
    "CommandType": 15,
    "Category": 5,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6439
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LR_Default",
    "Command": 3001,
    "Description": "Enumeration, returns an enum for LINEARREG().",
    "ReturnDescription": "Returns the LR Default enum.",
    "CommandType": 15,
    "Category": 5,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6439
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LR_Intercept",
    "Command": 3002,
    "Description": "Enumeration, returns an enum for LINEARREG().",
    "ReturnDescription": "Returns the LR Intercept enum.",
    "CommandType": 15,
    "Category": 5,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6439
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "LR_Slope",
    "Command": 3003,
    "Description": "Enumeration, returns an enum for LINEARREG().",
    "ReturnDescription": "Returns the LR Slope enum.",
    "CommandType": 15,
    "Category": 5,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6439
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of Moving Average.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6440,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Moving Averages (MA) combines multiple Moving Averages\nin one command. Works well together with the InputMaTypes() command. Supported types are:\n'sma', 'ema', 'dema', 'tema', 'trima', 't3', 'mama', 'kama' and 'wma'.",
    "ReturnDescription": "Returns the MA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MACD",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signalPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6441,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Moving Average Convergence Divergence (MACD), developed by ,\nis a trend-following momentum indicator that shows the relationship between two moving averages of an asset's price.\nThe MACD is calculated by subtracting the longer-period Exponential Moving Average (EMA) from the shorter-period EMA.",
    "ReturnDescription": "Returns the MACD result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "macd",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MACD result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "hist",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Histogram result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MACDEXT",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast MA type.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow MA type.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      },
      {
        "Index": 0,
        "Name": "signalPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signalType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal MA type.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6442,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Moving Average Convergence Divergence [Extended] (MACDEXT) is\nthe same as MACD, but provides more parameters to fiddle with.",
    "ReturnDescription": "Returns the MACDEXT result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "macd",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MACD result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "hist",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Histogram result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MACDFIX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "signalPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6443,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Moving Average Convergence Divergence [Fixed] (MACDFIX) is\nthe same as MACD, but uses fixed periods for the fast (12) and slow (26) EMAs.",
    "ReturnDescription": "Returns the MACDFIX result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "macd",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MACD result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "hist",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Histogram result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MakerOrCancelOrderType",
    "Command": 2003,
    "Description": "MakerOrCancel order type enum with a standard timeout of 10 minutes. When the exchange does not support this type, a normal limit order will be executed. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the MakerOrCancelOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MakersFee",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7206,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets makers fee of the market.",
    "ReturnDescription": "Returns makers fee of the market.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MAMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastlimit",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Limit for fastest speed (bigger = faster).",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowlimit",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Limit for slowest speed (smaller = slower).",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6444,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Mesa Adaptive Moving Average (MAMA) is a trend-following\nindicator which adapts to price movement \"based on the rate change of phase as measured by the Hilbert Transform Discriminator\".\nThis method of adaptation features a fast and a slow moving average so that the composite moving average swiftly responds to price\nchanges and holds the average value until the next bar’s close. \nThe Averages act as support and resistance areas and the price will tend to react to them.\nThis makes pullbacks to the MAMA and FAMA suitable with-trend entry areas. This indicator is usually plotted on the price chart.\nNOTE: The FastLimit and SlowLimit parameters should be between 0.01 and 0.99.",
    "ReturnDescription": "Returns the MAMA result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "mama",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The MESA Adaptive Moving Average values.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "fama",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The Following Adaptive Moving Average values.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MamaType",
    "Command": 1803,
    "Description": "Enumeration, returns an enum for MAMA type.",
    "ReturnDescription": "Returns the MAMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MapSignal",
    "Command": 6012,
    "Description": "Converts the signal if its matches the defined one.",
    "ReturnDescription": "Returns the original or converted signal depending on the input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "signalToCovert",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal we want to convert.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601,
          2602
        ]
      },
      {
        "Index": 0,
        "Name": "convertedSignal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal we want to convert too.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601,
          2602
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarginToTradeAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price used in the conversion from margin to trade amount.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "margin",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The margin used to calculate the trade amount",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "leverage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Leverage ratio. Use 0 for cross-margin.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          3603
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7609,
    "CommandType": 1,
    "Category": 39,
    "Description": "Convert margin to a trade amount. In spot markets, the margin is anticipated to be in the quote currency (e.g., USDT in BTC/USDT). For leverage markets, the margin is expected to be in the underlying currency.",
    "ReturnDescription": "Returns the calculated trade amount based on the margin.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7400,
      7404,
      7405
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarginTrading",
    "Command": 2801,
    "Description": "Enumeration, returns a market type enum. Used by MarketType()",
    "ReturnDescription": "Returns the MarginTrading enum.",
    "CommandType": 15,
    "Category": 12,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7207,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarkCandle",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to mark the candle.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "depth",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Amount of candles to mark.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 407,
    "Description": "Changes the color of a single candle.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarketOrderType",
    "Command": 2001,
    "Description": "Standard market order type. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the MarketOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarketType",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7207,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets the market type enumeration of the market.",
    "ReturnDescription": "Returns SpotTrading, MarginTrading or LeverageTrading.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      2802,
      2801,
      2800
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Maroon",
    "Command": 1610,
    "Description": "Enumeration, returns a color hex string. Can be used as Maroon, Maroon() or with a specific opacity Maroon(10).",
    "ReturnDescription": "Returns hex string of maroon (#800000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MarubozuType",
    "Command": 7835,
    "Description": "Enumeration, returns an enum for MarubozuType type.",
    "ReturnDescription": "Returns the MarubozuType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MatchingLowType",
    "Command": 7836,
    "Description": "Enumeration, returns an enum for MatchingLowType type.",
    "ReturnDescription": "Returns the MatchingLowType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MatHoldType",
    "Command": 7856,
    "Description": "Enumeration, returns an enum for MatHoldType type.",
    "ReturnDescription": "Returns the MatHoldType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MAVP",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "inPeriods",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Array of period lengths (must be equal length to source data!).",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "minPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum allowed period (fastest).",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maxPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum allowed period (slowest).",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Type of the Moving Average.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6445,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Moving Average Variable Period (MAVP) is a moving average\nthat adjusts itself based on the period settings given to it. The [inPeriods] array should be the\nsame length as [prices] array. The Nth period will be used to calculate the Nth data point.\nIt is essentially the same as changing the period yourself using the MA() command, but using this\ncommand instead, you can use for example the absolute (ABS) CMO output values as the periods:\nlocal periods = Abs(CMO(ClosePrices(), 20)).",
    "ReturnDescription": "Returns the MAVP result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Max",
    "Description": "Returns the maximum value. If the input is a single array, it returns the biggest number in that array (single value). If inputs are both numbers, it returns the biggest number (single value). If inputs are array and number, it returns the biggest number (array[1] vs number, single value). If inputs are both arrays, it returns an array of the biggest numbers per cell (array, length determined by the shorter array).",
    "ReturnDescription": "Returns the biggest number or an array of biggest numbers per cell.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 106,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4023,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MaxExitLongAmount",
    "ReturnDescription": "Returns the maximum exit long amount.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7601,
    "CommandType": 1,
    "Category": 39,
    "Description": "Calculates the maximum amount which can be used to place an exit long order based on wallet data. Assets reserved in open orders are excluded by default.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MaxExitShortAmount",
    "ReturnDescription": "Returns the maximum exit short amount.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7602,
    "CommandType": 1,
    "Category": 39,
    "Description": "Calculates the maximum amount which can be used to place an exit short order based on wallet data. Assets reserved in open orders are excluded by default.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MAXINDEX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6446,
    "CommandType": 1,
    "Category": 33,
    "Description": "Max Index (MAXINDEX) will return the index of the\nhighest high in source data within the given period. You can see this index as the \"distance\"\nto the highest high. To get the highest high value, use this index with the input\narray or use GetHigh/GetHighs command instead.",
    "ReturnDescription": "Returns the MAXINDEX result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MaxLongAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7600,
    "CommandType": 1,
    "Category": 39,
    "Description": "Calculates the maximum amount which can be used to place a long order based on wallet data.",
    "ReturnDescription": "Returns the maximum long amount.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7400,
      7404,
      7405
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MaxShortAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7603,
    "CommandType": 1,
    "Category": 39,
    "Description": "Calculates the maximum amount which can be used to place a short order based on wallet data.",
    "ReturnDescription": "Returns the maximum long amount.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7406,
      7404,
      7405
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MEDPRICE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6447,
    "CommandType": 1,
    "Category": 33,
    "Description": "Median Price (MEDPRICE) indicator is simply the midpoint of market's prices.\nThe Typical Price and Weighted Close are similar indicators. The Median Price indicator\nprovides a simple, single-line chart of the market's\"average price.\"\nThis average price is useful when you want a simpler view of prices.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the MEDPRICE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MFI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "volume",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Market volume array.",
        "ScriptType": null,
        "Suggestion": [
          5212
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6448,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Money Flow Index (MFI), developed by Gene Quong and Avrum Soudack,\nis an oscillator that uses both price and volume to measure buying and selling pressure.\nMFI is also known as volume-weighted RSI. MFI starts with the typical price for each period.\nMoney flow is positive when the typical price rises (buying pressure) and negative when the\ntypical price declines (selling pressure). A ratio of positive and negative money flow is\nthen plugged into an RSI formula to create an oscillator that moves between zero and one hundred.\nAs a momentum oscillator tied to volume, MFI is best suited to identify reversals and price\nextremes with a variety of signals.",
    "ReturnDescription": "Returns the MFI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MIDPOINT",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6449,
    "CommandType": 1,
    "Category": 33,
    "Description": "Midpoint price (MIDPOINT) is similar to the\n Midprice (MIDPRICE), except the highest and lowest values are returned from\n the same input field; the source data. Midpoint indicator calculates the highest\n close and lowest close within the look back period and averages\n the two values.",
    "ReturnDescription": "Returns the MIDPOINT result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MIDPRICE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6450,
    "CommandType": 1,
    "Category": 33,
    "Description": "MidPrice (MIDPRICE) returns the midpoint value from\n two different input fields. The Midprice indicator calculates the\n highest high and lowest low within the look back period and averages\n the two values to return the Midprice.",
    "ReturnDescription": "Returns the MIDPRICE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Min",
    "Description": "Returns the minimum value. If the input is a single array, it returns the minimum in that array (single value). If inputs are both numbers, it returns the smallest number (single value). If inputs are array and number, it returns the smallest number (single value). If inputs are both arrays, it returns an array of the smallest numbers per cell (array, length determined by shortest array)",
    "ReturnDescription": "Returns the smallest number or an array of smallest numbers per cell.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 106,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4024,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MinimumTradeAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to calculate the trade amount. By default the close price is used.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 7215,
    "CommandType": 1,
    "Category": 37,
    "Description": "Calculates the minimum trade amount on a certain price while keeping exchange specifications in consideration.",
    "ReturnDescription": "Returns the minimum trade amount taking the decimal count, minimum amount and volume into account.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MININDEX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6451,
    "CommandType": 1,
    "Category": 33,
    "Description": "Min Index (MININDEX) will return the index of the\nlowest low in source data within the given period. You can see this index as the \"distance\"\nto the lowest low. To get the lowest low value, use this index with the input\narray or use GetLow/GetLows command instead.",
    "ReturnDescription": "Returns the MININDEX result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MINUSDI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6452,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Negative Directional indicator (MINUSDI) measures the presence of a\ndowntrend and is part of the Average Directional Index (ADX). If -DI is sloping upward, it's a sign\nthat the price downtrend is getting stronger. This indicator is nearly always plotted along with\nthe Positive Directional indicator (PLUSDI).",
    "ReturnDescription": "Returns the MINUSDI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MINUSDM",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6453,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Negative Directional Movement (MINUSDM) indicator is the basis of\nthe Negative Directional indicator (MINUSDI).",
    "ReturnDescription": "Returns the MINUSDM result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MinutesTillCandleClose",
    "Command": 6800,
    "CommandType": 1,
    "Category": 35,
    "Description": "Calculates the number of minutes before a new candle opens.",
    "ReturnDescription": "Returns the number of minutes before a new candle opens.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Interval in minutes.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MOM",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6454,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Momentum Indicator (MOM) is a leading indicator measuring a\nasset's rate-of-change. It compares the current price with the previous price from a number\nof periods ago. The ongoing plot forms an oscillator that moves above and below 0.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the MOM result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MorningDojiStarType",
    "Command": 7857,
    "Description": "Enumeration, returns an enum for MorningDojiStarType type.",
    "ReturnDescription": "Returns the MorningDojiStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "MorningStarType",
    "Command": 7858,
    "Description": "Enumeration, returns an enum for MorningStarType type.",
    "ReturnDescription": "Returns the MorningStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Mountain",
    "Command": 1418,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the Mountain enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Mul",
    "Description": "Multiplies input1 with input2. If one of the parameters is a single value, the other is multiplied by this.",
    "ReturnDescription": "Returns the multiplied numbers/tables.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4025,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Mult",
    "Description": "Multiplies input1 with input2. If one of the parameters is a single value, the other is multiplied by this.",
    "ReturnDescription": "Returns the multiplied numbers/tables.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4025,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NATR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6455,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Normalized Average True Range (NATR) is the normalized version\nof the Average True Range (ATR) indicator.",
    "ReturnDescription": "Returns the NATR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1011,
    "Description": "Blocks enter trade when targetPrice is above the last sell order. Only works on spot and when there is no position open.",
    "CommandName": "NeverEnterWithALoss",
    "ReturnDescription": "Returns true if the trade is allowed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "acceptedLoss",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The accepted loss in percentage. Default is 0. This also affects user-defined targetPrice.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Can be used when placing orders beforehand in unmanaged trading.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1001,
    "Description": "Compares the average enter price to the targetPrice or current price.",
    "CommandName": "NeverExitWithLoss",
    "ReturnDescription": "Returns true if the trade is allowed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "acceptedLoss",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The accepted loss in percentage. Default is 0. This also affects user-defined targetPrice.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Can be used when placing orders beforehand in unmanaged trading.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NewGuid",
    "Parameters": [],
    "Command": 6200,
    "CommandType": 1,
    "Category": 32,
    "Description": "Creates an unique identifier.",
    "ReturnDescription": "Returns the unique identifier as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NilDataType",
    "Command": 7901,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the NilDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NoPosition",
    "Command": 2400,
    "Description": "Enumeration, returns a bot position enum. Used by GetPositionDirection() for example.",
    "ReturnDescription": "Returns the NoPosition enum.",
    "CommandType": 15,
    "Category": 9,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4607,
      4601
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Not",
    "Command": 3206,
    "CommandType": 1,
    "Category": 17,
    "Description": "Validates all values on being false.",
    "ReturnDescription": "Returns true all values are false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 102,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The boolean to compare.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NotEquals",
    "Command": 3214,
    "CommandType": 1,
    "Category": 17,
    "Description": "Compares two values and returns whether or not the values are different.",
    "ReturnDescription": "Returns true when the values are not equal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "First value to compare.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Second value to compare.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NoTimeOutOrderType",
    "Command": 2002,
    "Description": "Enumeration, returns an order type enum. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the NoTimeOutOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NumberDataType",
    "Command": 7903,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the NumberDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NumberMax",
    "Description": "Enumeration, returns the maximum number.",
    "ReturnDescription": "Returns a maximum value (2147483647).",
    "IsConstant": true,
    "Parameters": [],
    "Command": 4036,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NumberMin",
    "Description": "Enumeration, returns the minimum number.",
    "ReturnDescription": "Returns a minimum value (-2147483648).",
    "IsConstant": true,
    "Parameters": [],
    "Command": 4037,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "NumberType",
    "Command": 2206,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the NumberType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OBV",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "volumes",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Market volume array.",
        "ScriptType": null,
        "Suggestion": [
          5212
        ]
      }
    ],
    "Command": 6456,
    "CommandType": 1,
    "Category": 33,
    "Description": "The On-Balance Volume (OBV), developed by Joseph Granville,\nis a momentum indicator that uses volume flow to predict changes in asset price.\nHe believed that when volume increases sharply without a significant change in the asset's price,\nthe price will eventually jump upward or fall downward.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the OBV result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OCPrices",
    "Command": 5207,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with an average of open and close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of an average of open and close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Offset",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of record to remove.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 10,
    "CommandType": 1,
    "Category": 0,
    "Description": "Gets an offset amount of the given array.",
    "ReturnDescription": "Returns the given array with the offset amount of data removed from it.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OHLC",
    "Command": 1419,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the OHLC enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OHLCPrices",
    "Command": 5208,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with the average of open, high, low and close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of the average of open, high, low and close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OHLCPriceSource",
    "Command": 8206,
    "Description": "Enumeration, returns an enum for OHLC Price Source type.",
    "ReturnDescription": "Returns the OHLC Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Olive",
    "Command": 1611,
    "Description": "Enumeration, returns a color hex string. Can be used as Olive, Olive() or with a specific opacity Olive(10).",
    "ReturnDescription": "Returns hex string of olive (#808000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OneWayPositionMode",
    "Command": 2806,
    "Description": "Enumeration, returns a one-way position mode enum. Used with Get-/SetPositionMode() and IsPositionModeSupported()",
    "ReturnDescription": "Returns the one-way-position mode enum.",
    "CommandType": 15,
    "Category": 48,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5817,
      5818,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OnNeckType",
    "Command": 7837,
    "Description": "Enumeration, returns an enum for OnNeckType type.",
    "ReturnDescription": "Returns the OnNeckType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OpenPrices",
    "Command": 5209,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with open prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of open prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OpenPriceSource",
    "Command": 8200,
    "Description": "Enumeration, returns an enum for Open Price Source type.",
    "ReturnDescription": "Returns the Open Price Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OpenTime",
    "Command": 6815,
    "CommandType": 1,
    "Category": 35,
    "Description": "Converts a timestamps to the open timestamp of the candle",
    "ReturnDescription": "Returns the open timestamp of the candle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The timestamp to round. Set on 0 for current",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval on which the candle is build",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OptimizedForInterval",
    "Command": 5804,
    "CommandType": 1,
    "Category": 30,
    "Description": "Executes and saves or loads a value depending on the timestamp and interval. This command can be used to speed up backtest calculations which are depending on interval based data. For examples indicator calculation with closed candles.",
    "ReturnDescription": "Returns the saved value or result of the callback.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval on which the execution is based. If set on 0, the main interval is used.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "callback",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The function to executed when a candle closes.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Or",
    "Command": 3211,
    "CommandType": 1,
    "Category": 17,
    "Description": "Validates if any of the values is true.",
    "ReturnDescription": "Returns true if any of the all values is true.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "values[]",
        "Type": 102,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The boolean to compare.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Orange",
    "Command": 1612,
    "Description": "Enumeration, returns a color hex string. Can be used as Orange, Orange() or with a specific opacity Orange(10).",
    "ReturnDescription": "Returns hex string of orange (#FF8000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OrderbookSentiment",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 5407,
    "CommandType": 1,
    "Category": 28,
    "Description": "Calculates the orderbook sentiment as a number.",
    "ReturnDescription": "Returns the orderbook sentiment. 0.5 is the default, idle value.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "OrderContainer",
    "Command": 5003,
    "CommandType": 1,
    "Category": 26,
    "Description": "Gets all the information from an specific order.",
    "ReturnDescription": "Returns an array with order information.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier provided by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which the order is filled or executed.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "executedAmount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The executed amount.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "filledAmount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The filled amount.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "isOpen",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is open.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isFilled",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is filled 100%.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isCancelled",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is cancelled but might be filled partially.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "feeCosts",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The total fee costs.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "feeCurrency",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The currency of the fee costs.",
        "ScriptType": null,
        "Suggestion": [
          5409
        ]
      },
      {
        "Index": 0,
        "Name": "openTime",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The time the order is or has been open for in minutes.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The position identifier related to the order.",
        "ScriptType": null,
        "Suggestion": [
          7402,
          4607,
          4600,
          4604,
          4601,
          4602,
          4603,
          4605
        ]
      },
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unique order identifier.",
        "ScriptType": null,
        "Suggestion": [
          4801
        ]
      },
      {
        "Index": 0,
        "Name": "isEnterOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is an enter order.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isExitOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is an exit order.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The trigger-price of a conditional order.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "isBuyOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is a buy order.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isSellOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the order is a sell order.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1013,
    "Description": "Only allows a order to occur once per bar. Signals produced during a ordered bar are blocked.",
    "CommandName": "OrderOncePerBar",
    "ReturnDescription": "Returns true when new bar opens or no orders occurred during a bar.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Interval of the bar in minutes.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1010,
    "Description": "Calculates the target profit and makes sure the fee costs are double-covered.",
    "CommandName": "OvercomeDoubleFeeCosts",
    "ReturnDescription": "Returns true if the trade profit is enough to cover double the fees.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Default is the current buy or sell price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1002,
    "Description": "Calculates the target profit and makes sure the fee costs are covered.",
    "CommandName": "OvercomeFeeCosts",
    "ReturnDescription": "Returns true if the trade profit is enough to cover the fees.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Default is the current buy or sell price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Parse",
    "ReturnDescription": "Returns the converted value or nil if parsing fails.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The something.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The parameter type enum.",
        "ScriptType": null,
        "Suggestion": [
          2206,
          2205,
          2200,
          2207
        ]
      }
    ],
    "Command": 6207,
    "CommandType": 1,
    "Category": 32,
    "Description": "Converts the value to a specific type.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ParseCsv",
    "ReturnDescription": "Object containing the parsed information.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "csv",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The CSV data string or URL to download CSV data from.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "hasHeaders",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Whether or not data contains headers (default: false)",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "columnDelimiter",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Delimiter for columns (default: ';')",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "rowDelimiter",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Delimiter for rows (default: '\\n')",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6209,
    "CommandType": 1,
    "Category": 32,
    "Description": "Parses CSV data string and returns it as an object. URLs are also supported.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ParseJson",
    "ReturnDescription": "Object containing the parsed information.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "json",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The JSON data string or URL to download JSON data from.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6208,
    "CommandType": 1,
    "Category": 32,
    "Description": "Parses JSON data string and returns it as an object. URLs are also supported.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ParseTradeAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to parse the trade amount.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to parse.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 7208,
    "CommandType": 1,
    "Category": 37,
    "Description": "Parses the trade amount to exchange specifications.",
    "ReturnDescription": "Returns the trade amount adjusted for exchange specifications.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ParseTradePrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to check the trade amount.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 7209,
    "CommandType": 1,
    "Category": 37,
    "Description": "Parses the trade price to exchange specifications.",
    "ReturnDescription": "Returns the trade price adjusted for exchange specifications.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PauseBot",
    "Command": 5823,
    "CommandType": 1,
    "Category": 30,
    "Description": "Enables the paused flag. Use in combination with IsBotPaused() to read the value. Can be used to temporary block certain actions like increasing position without stopping the whole bot. Bots will continue to update and are allowed to place/cancel orders.",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PercentageAxis",
    "Command": 1402,
    "ReturnDescription": "Returns the PercentageAxis enum.",
    "Description": "Enumeration, returns the a chart axis type enum. Used ChartSetOptions() for example.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PercentageChange",
    "Description": "Calculates the percentage between input1 and input2 or the percentage change between the values of input1.",
    "ReturnDescription": "Returns the percentage between input1 and input2. When for example input1 is 5 and input2 is 6, 20 is returned.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4017,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1000,
    "Description": "Compares the average enter price to current price, percentage-based.",
    "CommandName": "PercentagePriceChange",
    "ReturnDescription": "Returns true if the minimum price change percentage is reached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum percentage change before the insurance agrees.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "targetPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The target price of the trade. Default is the current buy or sell price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PI",
    "Description": "Enumeration, returns the number of PI.",
    "ReturnDescription": "Returns PI (3.14159265359).",
    "IsConstant": true,
    "Parameters": [],
    "Command": 4038,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PiercingType",
    "Command": 7838,
    "Description": "Enumeration, returns an enum for PiercingType type.",
    "ReturnDescription": "Returns the PiercingType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceBuyOrder",
    "Description": "Places a (limit) buy order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          7600
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7400,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceCancelledOrder",
    "Command": 7407,
    "CommandType": 1,
    "Category": 38,
    "Description": "Executes the remaining amount of a canceled order.",
    "ReturnDescription": "Returns an new order identifier. Empty if no order is executed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "orderId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Unique order identifier. Returned by the PlaceOrder commands.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute. Be defaults the best ask or bid price is used.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceExitLongOrder",
    "Description": "Places a (limit) exit long order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          4606
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7401,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceExitPositionOrder",
    "Command": 7402,
    "CommandType": 1,
    "Category": 38,
    "Description": "Places exit orders for a specific bot position.",
    "ReturnDescription": "Returns an order identifier.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute. Be defaults the best ask or bid price is used.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Order type used for the order.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes except for NoTimeOutOrderType.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceExitShortOrder",
    "Description": "Places a (limit) exit short order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          4608
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7403,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceGoLongOrder",
    "Description": "Places a (limit) go long order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          7600
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7404,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceGoShortOrder",
    "Description": "Places a (limit) go short order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          7603
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7405,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlaceSellOrder",
    "Description": "Places a (limit) sell order for the given amount and price. Returns the order identifier (text).",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price on which to execute the order. If the order is a market order, this field will be ignored.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount to execute.",
        "ScriptType": null,
        "Suggestion": [
          3605,
          4403,
          3400,
          7603
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of order. Default is limit.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      },
      {
        "Index": 0,
        "Name": "note",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "A note for the order. Visible in the open orders and history.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique internal identifier that can be used to maintain multiple separate positions.",
        "ScriptType": null,
        "Suggestion": [
          4200,
          6200
        ]
      },
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The order timeout in seconds. By default the timeout is 600 seconds / 10 minutes. Using a negative value will disable the timeout.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "triggerPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trigger price, used for conditional orders. This parameter must only be set when using native order types that are supported by the exchange.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "reduceOnly",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ensures that the executed order does not flip the opened position.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "hiddenOrder",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The hidden order option ensures an order does not appear in the order book.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 7406,
    "CommandType": 1,
    "Category": 38,
    "RequiresCall": true,
    "ReturnDescription": "Unique order identifier.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Plot",
    "ReturnDescription": "Returns a line guid which can be used to manipulate the style.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "lineName",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The name of the lines. This needs to be unique per index.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value of the data point.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color/options",
        "Type": 4,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line options object or a color string.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401,
          406
        ]
      }
    ],
    "Command": 408,
    "Description": "Creates a data line on the chart. The line can be styled accordingly. A positive chartId will place the line below the main price chart. A negative index above.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206,
      409,
      410,
      415,
      416,
      413,
      414,
      425
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotBands",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid1",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The upper line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "lineGuid2",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lower line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "fillColor",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Inner color of the bands.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 409,
    "Description": "Creates a band between 2 lines.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotBars",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "baseValue",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The value from where the bars are drawn. Default is 0.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "fillColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the bars. Default is none.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 410,
    "Description": "Changes a line to bars.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotBBandsChart",
    "Command": 411,
    "CommandType": 1,
    "Category": 2,
    "Description": "Takes care of the plotting side of a BBANDS (like) calculation and chart.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Name of the line.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "upper",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Upper band data.",
        "ScriptType": null,
        "Suggestion": [
          6400,
          6412,
          6423,
          6437
        ]
      },
      {
        "Index": 0,
        "Name": "middle",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Middle or lower band data.",
        "ScriptType": null,
        "Suggestion": [
          6400,
          6412,
          6423,
          6437
        ]
      },
      {
        "Index": 0,
        "Name": "lower",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Lower band data. Optional, if not set only a band is plotted.",
        "ScriptType": null,
        "Suggestion": [
          6400,
          6412,
          6423,
          6437
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotBuySellZone",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "start",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "end",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 412,
    "Description": "Draws a horizontal zone with buy and sell lines on the chart.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotCircle",
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "fillColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the circles. Default is none.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 413,
    "Description": "Changes the line into circles.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotCloud",
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid1",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The first line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "lineGuid2",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The second line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The opacity of the inner cloud color.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 414,
    "Description": "Creates a cloud with double colors between 2 lines.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotDoubleColor",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "baseValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The value where the line changes color.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "secondColor",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the line below the base value.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "fillColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color between the line and the base value. Default is none.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 415,
    "Description": "Changes the color of the line based on a base value.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotHistogram",
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "secondColor",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the negative bars.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "fillRaisingBars",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Fills the raising bars. Default is false.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 416,
    "Description": "Change the line into a histogram.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotHistogramSignals",
    "Command": 417,
    "CommandType": 1,
    "Category": 2,
    "Description": "Takes care of the plotting side of a MACD (like) calculation and chart.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Name of the line.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "histogram",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Histogram data.",
        "ScriptType": null,
        "Suggestion": [
          6441,
          6442,
          6443
        ]
      },
      {
        "Index": 0,
        "Name": "shortSignal",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional, short data line.",
        "ScriptType": null,
        "Suggestion": [
          6441,
          6442,
          6443
        ]
      },
      {
        "Index": 0,
        "Name": "longSignal",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional, long data line.",
        "ScriptType": null,
        "Suggestion": [
          6441,
          6442,
          6443
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotHorizontalLine",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Name of the line. This needs to be unique per index.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The line color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The y-axis value on which to place the line.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "lineDecoration",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line decoration style. Default is Solid.",
        "ScriptType": null,
        "Suggestion": [
          1406,
          1404,
          1405
        ]
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Axis side on which to snap the line. Default is RightAxis.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      },
      {
        "Index": 0,
        "Name": "id",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique identifier.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 418,
    "Description": "Draws a horizontal line on the chart.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotHorizontalZone",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Name of the zone. This needs to be unique per index.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The zone inner color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "start",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "end",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Axis side on which to snap the line. Default is RightAxis.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      }
    ],
    "Command": 419,
    "Description": "Draws a horizontal zone on the chart.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotLineBuySellZone",
    "Command": 420,
    "CommandType": 1,
    "Category": 2,
    "Description": "Plots the line with a buy and sell zone on the chart.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartIndex",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Chart index on which to plot.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Name of the line.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "source",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Value to plot.",
        "ScriptType": null,
        "Suggestion": [
          6461
        ]
      },
      {
        "Index": 0,
        "Name": "start",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "end",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value of the zone.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotPivot",
    "Parameters": [
      {
        "Index": 0,
        "Name": "leftStrength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Amount of bars before the pivot point that must be lower(Pivot Low)/higher(Pivot High) than the pivot price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "rightStrength",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Amount of bars after the pivot point that must be lower(Pivot Low)/higher(Pivot High) than the pivot price.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 431,
    "Description": "Plots a pivot cross above or below the chart when detected.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotPrice",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the price data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval which to plot.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "style",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The price plot style.",
        "ScriptType": null,
        "Suggestion": [
          1412,
          1413,
          1414,
          1416,
          1419,
          1418,
          1417,
          1415,
          1420,
          1421
        ]
      },
      {
        "Index": 0,
        "Name": "upColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The outer color of the up candle.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "upFill",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the up candle.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "downColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The outer color of the down candle.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "downFill",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the down candle.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "markColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The outer color of the marked candle.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "markFill",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the marked candle.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "Command": 422,
    "Description": "Creates a price plot. Candlestick by default.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotShape",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "shape",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The shape type.",
        "ScriptType": null,
        "Suggestion": [
          1422,
          1424,
          1423,
          1428,
          1430,
          1427,
          1426,
          1425,
          1429
        ]
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the shape.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "size",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Size of the shape.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "aboveCandle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the shape will be drawn above the candle else below.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "text",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Text above or below the candle or shape.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "textColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the text.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "A positive offset will move the data points x number of candles. A negative number will move the data points back.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 430,
    "Description": "Draws a shape above the candle or first line on the chart.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotShapes",
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuid",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid returned by Plot().",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      },
      {
        "Index": 0,
        "Name": "shape",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The shape type.",
        "ScriptType": null,
        "Suggestion": [
          1422,
          1424,
          1423,
          1428,
          1430,
          1427,
          1426,
          1425,
          1429
        ]
      },
      {
        "Index": 0,
        "Name": "fillColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the circles. Default is none.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 433,
    "Description": "Changes the line into a specific shape.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotSignalBar",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The color of the signal block.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      }
    ],
    "Command": 423,
    "Description": "Creates a small signal bar chart. A positive chartId will place the line below the main price chart. A negative index above.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotSignalEnum",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal to plot.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "Command": 424,
    "Description": "Creates a small signal bar chart based on the signal enum. A positive chartId will place the line below the main price chart. A negative index above.",
    "ReturnDescription": "Returns the input signal for continuation.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotStackedArea",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "lineGuids",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line guid collection returned by multiple Plot()'s.",
        "ScriptType": null,
        "Suggestion": [
          408
        ]
      }
    ],
    "Command": 425,
    "Description": "Creates a stacked area chart from a line guid collection.",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotVerticalLine",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Name of the line. This needs to be unique per index.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The line color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "unix",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The x-axis timestamp on which to place the line.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "lineDecoration",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Line decoration style. Default is Solid.",
        "ScriptType": null,
        "Suggestion": [
          1406,
          1404,
          1405
        ]
      }
    ],
    "Command": 426,
    "Description": "Draws a vertical line on the chart.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotVerticalZone",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The chart index on which to plot the data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Name of the zone. This needs to be unique per index.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "color",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The zone inner color.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "start",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The lowest value of the zone on the y-axis.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "end",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The highest value of the zone on the y-axis.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 427,
    "Description": "Draws a vertical zone on the chart.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PlotVolume",
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "upColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The outer color of the up candle volume bars.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "downColor",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The outer color of the down candle volume bars.",
        "ScriptType": null,
        "Suggestion": [
          1600,
          1601,
          1602,
          1603,
          1604,
          1605,
          1606,
          1607,
          1608,
          1609,
          1610,
          1611,
          1612,
          1613,
          1614,
          1615,
          1616,
          1617,
          1618,
          401
        ]
      },
      {
        "Index": 0,
        "Name": "upFill",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the up candle volume bars.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "downFill",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The inner color of the down candle volume bars.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "side",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The axis side to snap.",
        "ScriptType": null,
        "Suggestion": [
          1403,
          1400
        ]
      }
    ],
    "Command": 428,
    "Description": "Creates volume bars. The bars can be styles accordingly. A positive chartId will place the line below the main price chart. A negative index above.",
    "ReturnDescription": null,
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "PLUSDI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6457,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Positive Directional indicator (PLUSDI) measures the presence of an\nuptrend and is part of the Average Directional Index (ADX). If +DI is sloping upward, it's a sign\nthat the price uptrend is getting stronger. This indicator is nearly always plotted along with\nthe Negative Directional indicator (MINUSDI).",
    "ReturnDescription": "Returns the PLUSDI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PLUSDM",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6458,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Positive Directional Movement (PLUSDM) indicator is the basis of\nthe Negative Directional indicator (PLUSDI).",
    "ReturnDescription": "Returns the PLUSDM result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionBought",
    "Command": 2401,
    "Description": "Enumeration, returns a bot position enum. Used by GetPositionDirection() for example.",
    "ReturnDescription": "Returns the PositionLong enum.",
    "CommandType": 15,
    "Category": 9,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4607,
      4601
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionContainer",
    "Command": 4607,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets all the information from the open bot position.",
    "ReturnDescription": "Returns an array with position information.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "includeClosed",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": true,
        "IsField": false,
        "AllowNull": false,
        "Description": "True for total position amount (default), false for only open amount. Affects enterPrice value in returned object.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The position identifier.",
        "ScriptType": null,
        "Suggestion": [
          7402
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the position.",
        "ScriptType": null,
        "Suggestion": [
          5201,
          5200,
          5211
        ]
      },
      {
        "Index": 0,
        "Name": "isLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true when the direction is long.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true when the direction is short.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "enterPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The average enter price.",
        "ScriptType": null,
        "Suggestion": [
          4000,
          4041,
          3205,
          3209
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount open in the position.",
        "ScriptType": null,
        "Suggestion": [
          7401,
          7403,
          7406,
          7400
        ]
      },
      {
        "Index": 0,
        "Name": "profit",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The realized + unrealized profits.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209
        ]
      },
      {
        "Index": 0,
        "Name": "roi",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ROI based on the used margin and realized + unrealized profits.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209
        ]
      },
      {
        "Index": 0,
        "Name": "openTime",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Timestamp (in unix) when the position was opened.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209
        ]
      },
      {
        "Index": 0,
        "Name": "updatedTime",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Timestamp (in unix) when the position was last updated.",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209
        ]
      },
      {
        "Index": 0,
        "Name": "closeTime",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Timestamp (in unix) when the position was closed. If position is still open, value will be 0",
        "ScriptType": null,
        "Suggestion": [
          3205,
          3209
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionLong",
    "Command": 2401,
    "Description": "Enumeration, returns a bot position enum. Used by GetPositionDirection() for example.",
    "ReturnDescription": "Returns the PositionLong enum.",
    "CommandType": 15,
    "Category": 9,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4607,
      4601
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionShort",
    "Command": 2402,
    "Description": "Enumeration, returns a bot position enum. Used by GetPositionDirection() for example.",
    "ReturnDescription": "Returns the PositionShort enum.",
    "CommandType": 15,
    "Category": 9,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4607,
      4601
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionSold",
    "Command": 2402,
    "Description": "Enumeration, returns a bot position enum. Used by GetPositionDirection() for example.",
    "ReturnDescription": "Returns the PositionShort enum.",
    "CommandType": 15,
    "Category": 9,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      4607,
      4601
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PositionToBool",
    "Command": 6021,
    "Description": "Converts a position value to 3 boolean values.",
    "ReturnDescription": "Three boolean values based on the position input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "position",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Bot position enum. PositionLong, PositionShort or NoPosition.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400,
          4601
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "isLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the position is Long.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the position is Short.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isNone",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the position is NoPosition.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Pow",
    "Description": "Calculates a specified number/table raised to the specified power number/table.",
    "ReturnDescription": "Returns a specified number/table raised to the specified power number/table.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base value",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "power",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The power value",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4026,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PPO",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of Moving Average used.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6459,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Percentage Price Oscillator (PPO) is a momentum oscillator\nthat measures the difference between two moving averages as a percentage of the larger\nmoving average. As with its cousin, MACD, the Percentage Price Oscillator is shown with\na signal line, a histogram and a centerline.",
    "ReturnDescription": "Returns the PPO result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PriceDecimals",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Specific price value. This can have an effect on the number of decimals.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 7219,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns a number of how many decimals is allowed for order prices.",
    "ReturnDescription": "Returns the allowed decimal count.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PriceLevel",
    "Parameters": [
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 5405,
    "CommandType": 1,
    "Category": 28,
    "Description": "Determines the price level. For example. 123456 will return 10000. 123 will return 100.",
    "ReturnDescription": "Returns the price level.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PriceMarket",
    "Parameters": [],
    "Command": 3604,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the main market of the bot.",
    "ReturnDescription": "Returns a market string. For example: BITFINEX_BTC_USD_ or BITMEX_XBT_USD_XBTUSD.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7216,
      5201
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Prices",
    "Command": 5201,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with close prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of close prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "PriceStep",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7217,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the minimum allowed price step for market.",
    "ReturnDescription": "Returns the price step size.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ProfitCurrency",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7210,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the profit label. For reflection, in case the market is Bitstamp BTC/USD it will return 'USD'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'XBT'.",
    "ReturnDescription": "Returns the profit label as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ProfitLabel",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7210,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the profit label. For reflection, in case the market is Bitstamp BTC/USD it will return 'USD'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'XBT'.",
    "ReturnDescription": "Returns the profit label as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Purple",
    "Command": 1613,
    "Description": "Enumeration, returns a color hex string. Can be used as Purple, Purple() or with a specific opacity Purple(10).",
    "ReturnDescription": "Returns hex string of purple (#FF1a8c)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "QuoteCurrency",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7211,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the quote currency of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'USD'.",
    "ReturnDescription": "Returns the quote currency as string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "QuoteDecimals",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Specific price value. This can have an effect on the number of decimals.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 7219,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns a number of how many decimals is allowed for order prices.",
    "ReturnDescription": "Returns the allowed decimal count.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "QuoteStep",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7217,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the minimum allowed price step for market.",
    "ReturnDescription": "Returns the price step size.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Random",
    "Description": "Creates a random number.",
    "ReturnDescription": "Returns a random number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "min",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum value. Default is 0.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "max",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Minimum value. Default is 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4027,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Range",
    "Command": 12,
    "CommandType": 1,
    "Category": 0,
    "Description": "Grabs a range from the array. If count is not set, return all after the offset.",
    "ReturnDescription": "Specified range from the array.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "offset",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Offset from start.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "count",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of items to grab.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Red",
    "Command": 1614,
    "Description": "Enumeration, returns a color hex string. Can be used as Red, Red() or with a specific opacity Red(10).",
    "ReturnDescription": "Returns hex string of red (#FF0000)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ReplaceAbove",
    "Command": 20,
    "CommandType": 1,
    "Category": 21,
    "Description": "Replaces any value above a specific value with another value.",
    "ReturnDescription": "Returns the input with replaced values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Values above this threshold will be replaced.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "newValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The new value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ReplaceBelow",
    "Command": 19,
    "CommandType": 1,
    "Category": 21,
    "Description": "Replaces any value below a specific value with another value.",
    "ReturnDescription": "Returns the input with replaced values.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Values below this threshold will be replaced.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "newValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The new value.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ResumeBot",
    "Command": 5824,
    "CommandType": 1,
    "Category": 30,
    "Description": "Disables the pause flag. Use in combination with IsBotPaused() to read the value",
    "ReturnDescription": null,
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ReverseSignal",
    "Command": 6008,
    "Description": "Reverses a signal from long to short or short to long. SignalNone will be ignored and stay the same.",
    "ReturnDescription": "Returns the reversed signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "RickshawManType",
    "Command": 7839,
    "Description": "Enumeration, returns an enum for RickshawManType type.",
    "ReturnDescription": "Returns the RickshawManType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "RightAxis",
    "Command": 1403,
    "Description": "Enumeration, returns the a chart axis enum. Used ChartSetAxisOptions() for example.",
    "ReturnDescription": "Returns the RightAxis enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406,
      418,
      404,
      402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "RiseFallThreeMethodsType",
    "Command": 7840,
    "Description": "Enumeration, returns an enum for RiseFallThreeMethodsType type.",
    "ReturnDescription": "Returns the RiseFallThreeMethodsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ROC",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6460,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Rate-of-Change (ROC) is often used when speaking about momentum,\nand it can generally be expressed as a ratio between a change in one variable relative to a\ncorresponding change in another; graphically, the rate of change is represented by the slope\nof a line. The ROC is often illustrated by the Greek letter delta.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the ROC result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ROCP",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6494,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Rate-of-Change Percentage (ROCP) is an alternative for ROC,\nshowing the values as percentages rather than absolutes. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the ROCP result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ROCR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6495,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Rate-of-Change Ratio (ROCR) is an alternative for ROC,\nshowing the values as a ratio rather than absolutes. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the ROCR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ROCR100",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6496,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Rate-of-Change Ratio 100 Scale (ROCR100) is an alternative for ROC,\nshowing the values as a ratio rather than absolutes. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the ROCR100 result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Round",
    "Description": "Rounds a value (or values if table) to the nearest integer or to the specified number of fractional digits.",
    "ReturnDescription": "Returns the rounded number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "digits",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of digits after decimal point.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4028,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "RSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6461,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Relative Strength Index (RSI), developed by J. Welles Wilder,\nis a momentum oscillator that measures the speed and change of price movements.\nThe RSI oscillates between zero and 100. Traditionally the RSI is considered\noverbought when above 70 and oversold when below 30, but can also be used to confirm\ntrends. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the RSI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "RSI_ALTB",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6462,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Relative Strength Index (RSI_ALTB), developed by J. Welles Wilder,\nis a momentum oscillator that measures the speed and change of price movements.\nThe RSI oscillates between zero and 100. Traditionally the RSI is considered\noverbought when above 70 and oversold when below 30, but can also be used to confirm\ntrends. This indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the RSI_ALTB result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SafetyContainer",
    "ReturnDescription": "Returns true if any of the signals is active.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals[]",
        "Type": 102,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Safety signals collection. Takes a variable number of arguments.",
        "ScriptType": null,
        "Suggestion": [
          1200,
          1201,
          1202,
          1203,
          1204,
          1205,
          1206,
          1207,
          1208,
          1209,
          1210,
          1211,
          1212,
          1213,
          1214,
          1215,
          1216,
          1217,
          1218
        ]
      }
    ],
    "Command": 7002,
    "CommandType": 1,
    "Category": 36,
    "Description": "Checks a collection for active safety signals.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7003,
      3800,
      3804
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SAR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "acceleration",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Acceleration amount.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maxSpeed",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum speed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6463,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Parabolic Stop-And-Reverse (SAR), developed by Welles Wilder,\nrefers to a price-and-time-based trading system. Wilder called this the \"Parabolic Time/Price System.\"\nSAR stands for \"stop and reverse\", which is the actual indicator used in the system.\nSAR trails price as the trend extends over time. The indicator is below prices as they're rising\nand above prices as they're falling. In this regard, the indicator stops and reverses when the price\ntrend reverses and breaks above or below the indicator.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the SAR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SAREXT",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "startValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Starting value.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "offsetOnReverse",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Offset amount on reverse point.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelInitLong",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Initial acceleration for Long position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelLong",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Acceleration amount for Long position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelMaxLong",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum acceleration for Long position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelInitShort",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Initial acceleration for Short position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelShort",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Acceleration amount for Short position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "accelMaxShort",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum acceleration for Short position.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6464,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Parabolic Stop-And-Reverse [Extended] (SAREXT) is the same indicator as SAR(),\nbut opens up more parameters for the user to modify.",
    "ReturnDescription": "Returns the SAREXT result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Satoshi",
    "Description": "Enumeration, returns 1 Satoshi (=Epsilon).",
    "ReturnDescription": "Returns 1 Satoshi (=Epsilon).",
    "IsConstant": true,
    "Parameters": [],
    "Command": 4040,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Save",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Unique identifier.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value to store.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4204,
    "CommandType": 1,
    "Category": 22,
    "Description": "Saves a value on a specific key. This value can be retrieved with Load(). A maximum of 10.000 keys can be stored.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "SaveRemoteSignal",
    "Parameters": [
      {
        "Index": 0,
        "Name": "id",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The unique identifier of the signal.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "secret",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The secret key on which to save the signal.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal enum to save.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601,
          2602
        ]
      }
    ],
    "Command": 6009,
    "CommandType": 1,
    "Category": 31,
    "Description": "This command can save and distribute a trading signal over the HaasCloud. This can be used in combination with trade signal enumeration. For example SignalLong(), SignalShort(), SignalExitPosition() or SignalNone().",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "Description": "Calculates the Standard Deviation from the data series.",
    "CommandName": "Sd",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": [
          8,
          5201
        ]
      }
    ],
    "ReturnDescription": "Returns the Standard Deviation.",
    "Command": 4043,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SellPrices",
    "Command": 5211,
    "CommandType": 1,
    "Category": 27,
    "Description": "A collection with sell/ask prices. Sorted from new to old.",
    "ReturnDescription": "Returns a collection of sell/ask prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SeparatingLinesType",
    "Command": 7841,
    "Description": "Enumeration, returns an enum for SeparatingLinesType type.",
    "ReturnDescription": "Returns the SeparatingLinesType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetBotRoiBaseValue",
    "Parameters": [
      {
        "Index": 0,
        "Name": "baseValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base value for the ROI calculation",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 5605,
    "CommandType": 1,
    "Category": 29,
    "Description": "Sets a custom base value used in the ROI calculation (realized profits / baseValue * 100).",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetFee",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fee percentage to store.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "Command": 7212,
    "CommandType": 1,
    "Category": 37,
    "Description": "Saves a custom fee percentage which is used in back tests and returned by Fee().",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetLeverage",
    "Command": 5809,
    "CommandType": 1,
    "Category": 30,
    "Description": "Sets the leverage ratio for current or specified market.",
    "ReturnDescription": "Returns true if successfully set value, otherwise false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "leverage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount of leverage to set.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetMarginMode",
    "Command": 5812,
    "CommandType": 1,
    "Category": 30,
    "Description": "Sets the margin mode for current or specific market. It is NOT possible to change margin mode while having an open position.",
    "ReturnDescription": "Returns true if successfully set, otherwise false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "marginMode",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Request margin mode. CrossMarginMode or IsolatedMarginMode",
        "ScriptType": null,
        "Suggestion": [
          2804,
          2803
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetOrderType",
    "Parameters": [
      {
        "Index": 0,
        "Name": "type",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Order type enum.",
        "ScriptType": null,
        "Suggestion": [
          2001,
          2000,
          2003,
          2002,
          2004,
          2005,
          2006,
          2007,
          2008
        ]
      }
    ],
    "Command": 5805,
    "CommandType": 1,
    "Category": 30,
    "Description": "Overwrites the order type with the given type. This can be used to execute different order types on managed trading.",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": true,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetPositionMode",
    "Command": 5817,
    "CommandType": 1,
    "Category": 30,
    "Description": "Sets the position mode for current or specified market. It is NOT possible to change position mode while having an open position.",
    "ReturnDescription": "Returns true if successfully set, otherwise false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "positionMode",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Request position mode. OneWayPositionMode or HedgePositionMode",
        "ScriptType": null,
        "Suggestion": [
          2806,
          2805
        ]
      },
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SetStackedAreaOpacity",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "chartId",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Index on which to plot the line.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Opacity level from 0 - 100.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 432,
    "Description": "Configures the opacity for stacked area chart. A values between",
    "CommandType": 1,
    "Category": 2,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeAdd",
    "Command": 1422,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeAdd enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeCircle",
    "Command": 1424,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeCircle enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeCross",
    "Command": 1423,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeCross enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeDash",
    "Command": 1430,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeDash enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeDiamond",
    "Command": 1428,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeDiamond enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeSquare",
    "Command": 1427,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeSquare enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeText",
    "Command": 1429,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeText enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeTriangleDown",
    "Command": 1426,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeTriangleDown enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShapeTriangleUp",
    "Command": 1425,
    "Description": "Enumeration, returns the a shape type enum. Used PlotShapes().",
    "ReturnDescription": "Returns the ShapeTriangleUp enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      430
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShootingStarType",
    "Command": 7842,
    "Description": "Enumeration, returns an enum for ShootingStarType type.",
    "ReturnDescription": "Returns the ShootingStarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShortAmount",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 4608,
    "CommandType": 1,
    "Category": 24,
    "Description": "Gets the total amount open in a short position.",
    "ReturnDescription": "Returns the total amount open in a short position.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ShortLineType",
    "Command": 7843,
    "Description": "Enumeration, returns an enum for ShortLineType type.",
    "ReturnDescription": "Returns the ShortLineType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1207,
    "Description": "Keeps track of the highest/lowest recorded price and adjust the stop loss accordingly. The higher the price change the more the trailing distances shrinks.",
    "CommandName": "ShrinkingTrailingStopLoss",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trailing stop loss percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "shrinkPercentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "This percentage will be added to the stop every time the stop adjust. The percentage will raise exponentially on every adjustment.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Sign",
    "Description": "Calculates an integer that indicates the sign of a number.",
    "ReturnDescription": "Returns an integer that indicates the sign of a number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4029,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalBuy",
    "Command": 2600,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalLong enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalCenterCrossType",
    "Command": 2606,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the SignalCenterCrossType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalError",
    "Command": 2615,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalError enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalExitLong",
    "Command": 2611,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalExitLong enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalExitPosition",
    "Command": 2601,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalExitPosition enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalExitShort",
    "Command": 2612,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalExitShort enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalLong",
    "Command": 2600,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalLong enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalMapper",
    "Command": 6016,
    "Description": "Maps a signal value to their defined specifications.",
    "ReturnDescription": "The mapped signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "reverse",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the signals are revered.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "mapLongTo",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The mapped long signal.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601
        ]
      },
      {
        "Index": 0,
        "Name": "mapShortTo",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The mapped short signal.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601
        ]
      },
      {
        "Index": 0,
        "Name": "mapExitTo",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The mapped exit signal.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601
        ]
      },
      {
        "Index": 0,
        "Name": "mapNoneTo",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The mapped none signal.",
        "ScriptType": null,
        "Suggestion": [
          2600,
          2603,
          2601
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalNone",
    "Command": 2602,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalNone enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalProperties",
    "Command": 6017,
    "Description": "Sets properties such as weight or ignore in the signal input.",
    "ReturnDescription": "Returns the signal with the new specifications.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "useLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, this signal is used for long decisions.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "useShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, this signal is used for short decisions.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "useExit",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When true, this signal is used for exit decisions.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "weight",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The weight of the signal. Minimum weight of 1 required.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "delay",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "Number of minutes the signal will be delayed.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalReservedA",
    "Command": 2613,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalReservedA enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalReservedB",
    "Command": 2614,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalReservedB enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalSell",
    "Command": 2603,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalShort enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalShort",
    "Command": 2603,
    "Description": "Enumeration, returns a signal enum. Used by GetRemoteSignal() or custom commands for example.",
    "ReturnDescription": "Returns the SignalShort enum.",
    "CommandType": 15,
    "Category": 11,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalThresholdType",
    "Command": 2609,
    "Description": "Enumeration, returns a signal type enum. Used with GetSuperSignal().",
    "ReturnDescription": "Returns the SignalThresholdType enum.",
    "CommandType": 15,
    "Category": 42,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6011
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalToBool",
    "Command": 6018,
    "Description": "Converts a signal value to 4 boolean values.",
    "ReturnDescription": "Four boolean values based on the signal input.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "isLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the signal is SignalLong.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the signal is SignalShort.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isExit",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the signal is SignalExitPosition.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isNone",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "True when the signal is SignalNone.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalToLog",
    "Command": 6020,
    "Description": "Logs the given signals.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "signals",
        "Type": 101,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signals to log.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 10,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SignalWeight",
    "Command": 6015,
    "Description": "Add a weight to the signal. Can be used in combination with GetWeightedConsensusSignal().",
    "ReturnDescription": "Returns the original signal with a weight mark.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "weight",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The weight of the signal. Minimum weight of 1 required.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SimpleDoubleDownCandleType",
    "Command": 7864,
    "Description": "Enumeration, returns an enum for SimpleDoubleDownCandleType type.",
    "ReturnDescription": "Returns the SimpleDoubleDownCandleType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SimpleDoubleUpCandleType",
    "Command": 7863,
    "Description": "Enumeration, returns an enum for SimpleDoubleUpCandleType type.",
    "ReturnDescription": "Returns the SimpleDoubleUpCandleType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SimpleDownCandleType",
    "Command": 7862,
    "Description": "Enumeration, returns an enum for SimpleDownCandleType type.",
    "ReturnDescription": "Returns the SimpleDownCandleType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SimpleForecastBySsa",
    "Parameters": [
      {
        "Index": 0,
        "Name": "dataset",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Dataset",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "L",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Length of the window on the series for building the trajectory matrix (L)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "N",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Length of series that is kept in buffer for modeling (N)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "forecastCount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Amount of future data points",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 8301,
    "CommandType": 1,
    "Category": 47,
    "Description": "Reads the given data and tries to give a forecast",
    "ReturnDescription": null,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SimpleUpCandleType",
    "Command": 7861,
    "Description": "Enumeration, returns an enum for SimpleUpCandleType type.",
    "ReturnDescription": "Returns the SimpleUpCandleType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Sin",
    "Description": "Calculates the sine of the specified angle.",
    "ReturnDescription": "Returns the sine of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4030,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Sinh",
    "Description": "Calculates the hyperbolic sine of the specified angle.",
    "ReturnDescription": "Returns the hyperbolic sine of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4031,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SkyBlue",
    "Command": 1615,
    "Description": "Enumeration, returns a color hex string. Can be used as SkyBlue, SkyBlue() or with a specific opacity SkyBlue(10).",
    "ReturnDescription": "Returns hex string of skyblue (#33CCFF)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SlowRSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "signal",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Signal length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6493,
    "CommandType": 1,
    "Category": 33,
    "Description": "The SlowRSI is a custom implementation from Haasonline. It uses a custom RSI and EMA calculation.",
    "ReturnDescription": "Returns the SlowRSI result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "rsi",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Normal RSI result.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "slowRsi",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow RSI result.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6465,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Simple Moving Average (SMA) is an arithmetic moving average\ncalculated by adding recent closing prices and then dividing that by the number of time\nperiods in the calculation average.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the SMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SMA2",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6466,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Simple Moving Average (SMA2) is an arithmetic moving average\ncalculated by adding recent closing prices and then dividing that by the number of time\nperiods in the calculation average.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the SMA2 result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SmaType",
    "Command": 1804,
    "Description": "Enumeration, returns an enum for SMA type.",
    "ReturnDescription": "Returns the SMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Smooth",
    "Command": 1407,
    "Description": "Enumeration, returns a line style enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Smooth enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Solid",
    "Command": 1406,
    "Description": "Enumeration, returns a line decoration enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Solid enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406,
      418,
      426
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SourceManager",
    "Parameters": [
      {
        "Index": 0,
        "Name": "newValue",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "This value will be added in front of the collection when the candle closed.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The interval on which the data is based. Default is the selected main interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "cap",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Maximum size of the collection.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "initialValues",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The initial values when source in initialized",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 23,
    "CommandType": 1,
    "Category": 0,
    "Description": "Stores numeric values in a collection. Only adds the new value when the candle on the specified interval closed. This results in interval based data.",
    "ReturnDescription": "Returns the numeric collection.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SourcePrices",
    "Command": 5214,
    "CommandType": 1,
    "Category": 27,
    "Description": "Gets the price source based on the input enum given. Can be any of Enumerations Source Price Types.",
    "ReturnDescription": "Returns a collection of prices.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "sourceType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source price type enum.",
        "ScriptType": null,
        "Suggestion": [
          8203,
          8200,
          8201,
          8202,
          8204,
          8205,
          8206,
          8207
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "hlcStyle",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "When enabled, the data returned will be adjusted for HLC instead of OHLC. Meaning that the OHL data can change.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Spiked",
    "Command": 1408,
    "Description": "Enumeration, returns a line style enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Spiked enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SpinningTopType",
    "Command": 7844,
    "Description": "Enumeration, returns an enum for SpinningTopType type.",
    "ReturnDescription": "Returns the SpinningTopType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SpotTrading",
    "Command": 2802,
    "Description": "Enumeration, returns a market type enum. Used by MarketType()",
    "ReturnDescription": "Returns the SpotTrading enum.",
    "CommandType": 15,
    "Category": 12,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      7207,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Spread",
    "Command": 1420,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the Spread enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SpreadCandle",
    "Command": 1421,
    "Description": "Enumeration, return a price plot enum. Used by PlotPrice() or ChartSetOptions()",
    "ReturnDescription": "Returns the SpreadCandle enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      405,
      422
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Sqrt",
    "Description": "Calculates the square root of a specified number.",
    "ReturnDescription": "Returns the square root of a specified number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4032,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SSTOCH",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6467,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Simple Stochastic (SSTOCH)",
    "ReturnDescription": "Returns the SSTOCH result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StalledPatternType",
    "Command": 7845,
    "Description": "Enumeration, returns an enum for StalledPatternType type.",
    "ReturnDescription": "Returns the StalledPatternType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StartTimer",
    "Command": 6812,
    "CommandType": 1,
    "Category": 35,
    "Description": "Starts a timer.",
    "ReturnDescription": "",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional key if using multiple timers.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "STDDEV",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "deviation",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Amount of deviation.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6468,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Standard Deviation (STDDEV) is an indicator that measures\nthe size of recent price moves of an asset, to predict how volatile the price may be in\nfuture. It can help you decide whether the volatility of the price is likely to increase\nor decrease.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the STDDEV result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Step",
    "Command": 1409,
    "Description": "Enumeration, returns a line style enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the Step enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StepAfter",
    "Command": 1410,
    "Description": "Enumeration, returns a line style enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the StepAfter enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StepBefore",
    "Command": 1411,
    "Description": "Enumeration, returns a line style enum. Used by LineOptions() for example.",
    "ReturnDescription": "Returns the StepBefore enum.",
    "CommandType": 15,
    "Category": 7,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StickSandwichType",
    "Command": 7846,
    "Description": "Enumeration, returns an enum for StickSandwichType type.",
    "ReturnDescription": "Returns the StickSandwichType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "STOCH",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastK",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast %K period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowK",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow %K period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "slowD",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow %D period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6469,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Stochastic Oscillator [Full] (STOCH), developed by Dr. George Lane,\nis a momentum indicator that uses support and resistance levels. The term stochastic\nrefers to the point of a current price in relation to its price range over a period of time.",
    "ReturnDescription": "Returns the STOCH result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "slowK",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %K line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "slowD",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %D line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "STOCHF",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "fastK",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast %K period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastD",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast %D period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MA type.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6470,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Stochastic Oscillator [Fast] (STOCHF).",
    "ReturnDescription": "Returns the STOCHF result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "fastK",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %K line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "fastD",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %D line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "STOCHRSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "rsiPeriod",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastK",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast %K period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "fastD",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast %D period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of Moving Average.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      }
    ],
    "Command": 6471,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Stochastic-RSI (STOCHRSI) is essentially an indicator of an indicator.\nThe Stochastic RSI is an oscillator that calculates a value between 0 and 1 which is\nthen plotted as a line. This indicator is primarily used for identifying overbought and oversold conditions.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the STOCHRSI result.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "fastK",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %K line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "fastD",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The %D line.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StopLimitOrderType",
    "Command": 2004,
    "Description": "Stop-Limit order type enum with a standard timeout of 10 minutes. When the exchange does not support this type, an error will be thrown and bot execution is stopped. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the StopLimitOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1203,
    "Description": "Calculates the current percentage change from the average enter price and compares it with the stop loss value.",
    "CommandName": "StopLoss",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Stop loss percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1008,
    "Description": "Blocks any signal until a certain number of minutes have passed since the last exit trade executed by a safety.",
    "CommandName": "StopLossCooldown",
    "ReturnDescription": "Returns true when the last trade is a certain number of minutes ago.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "minutes",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of minutes to wait after the last order.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1208,
    "Description": "Calculates the defined position's current ROI percentage and gives a signal if the set loss is reached.",
    "CommandName": "StopLossROI",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Stop loss ROI percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StopMarketOrderType",
    "Command": 2005,
    "Description": "Stop-Market order type enum. When the exchange does not support this type, an error will be thrown and bot execution is stopped. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the StopMarketOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StopTimer",
    "Command": 6814,
    "CommandType": 1,
    "Category": 35,
    "Description": "Stops a timer.",
    "ReturnDescription": "Returns the elapsed time in milliseconds.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "key",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional key if using multiple timers.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringContains",
    "ReturnDescription": "Returns true if the specified substring occurs within this string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "searchValue",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The substring to search.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "ignoreCase",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ignoring the case of the scripts being compared.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "Command": 6201,
    "CommandType": 1,
    "Category": 32,
    "Description": "Returns a value indicating whether a specified substring occurs within this string.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringExplode",
    "ReturnDescription": "Returns an array of strings.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "delimiter",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The delimiter value.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6202,
    "CommandType": 1,
    "Category": 32,
    "Description": "Splits a string into substrings that are based on the characters in an array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 8,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringFromQuery",
    "ReturnDescription": "Returns an key-value based table.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6203,
    "CommandType": 1,
    "Category": 32,
    "Description": "Split a string on '&' and '='.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 8,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringIndexOf",
    "ReturnDescription": "Returns a zero-based index of the first occurrence of the specified string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "searchValue",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The search value.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "ignoreCase",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Ignoring the case of the scripts being compared.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      }
    ],
    "Command": 6204,
    "CommandType": 1,
    "Category": 32,
    "Description": "Gets the zero-based index of the first occurrence of the specified string in the current.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringJoin",
    "ReturnDescription": "Returns the concatenated string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The first part of the string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403,
          4200,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The second part of the string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          4403,
          4200,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "separator",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The string to use as a separator.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6205,
    "CommandType": 1,
    "Category": 32,
    "Description": "Concatenates 2 string with an optional separator.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringSplit",
    "ReturnDescription": "Returns an array of strings.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "delimiter",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The delimiter value.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      }
    ],
    "Command": 6202,
    "CommandType": 1,
    "Category": 32,
    "Description": "Splits a string into substrings that are based on the characters in an array.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 8,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "StringType",
    "Command": 2207,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the StringType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Sub",
    "Description": "Subtracts numbers/tables and returns the result number/table.",
    "ReturnDescription": "Calculates the subtracted numbers/tables.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4033,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SubPerc",
    "Command": 4041,
    "CommandType": 1,
    "Category": 21,
    "Description": "Subtracts a percentage to the value.",
    "ReturnDescription": "Returns the value with the subtracted percentage.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage to subtract.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SubPercentage",
    "Command": 4041,
    "CommandType": 1,
    "Category": 21,
    "Description": "Subtracts a percentage to the value.",
    "ReturnDescription": "Returns the value with the subtracted percentage.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main value.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The percentage to subtract.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "SubString",
    "ReturnDescription": "Substring of the main value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "value",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The main string.",
        "ScriptType": null,
        "Suggestion": [
          4406,
          3400,
          4205,
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "start",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Start index, zero based.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "length",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The length of the substring.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6206,
    "CommandType": 1,
    "Category": 32,
    "Description": "Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "Description": "Adds numbers/tables and returns the result number/table.",
    "CommandName": "Sum",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input1",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      },
      {
        "Index": 0,
        "Name": "input2",
        "Type": 6,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s) 2.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "ReturnDescription": "Returns the total sum of a single value is provide, adds the 2 values if there are 2 provided.",
    "Command": 4008,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Switch",
    "Command": 3302,
    "CommandType": 1,
    "Category": 40,
    "Description": "Will return 1 of 2 values based on the input boolean.",
    "ReturnDescription": "Return the first value if true or the second value when false.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "statement",
        "Type": 3,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Input boolean to check.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3210,
          3203,
          3206,
          3211,
          3300,
          3202,
          3205,
          3209,
          3204,
          4803,
          4804,
          4805,
          7204
        ]
      },
      {
        "Index": 0,
        "Name": "value1",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If true, this value is passed on.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "value2",
        "Type": 4,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": true,
        "Description": "If false, this value is passed on.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": false,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 4,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "T3",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "vFactor",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Volume factor between 0 and 1.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6472,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Triple Exponential Moving Average (T3), developed by Tim Tillson,\nattempts to offers a moving average with better smoothing than traditional exponential moving average.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the T3 result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "T3Type",
    "Command": 1805,
    "Description": "Enumeration, returns an enum for T3 type.",
    "ReturnDescription": "Returns the T3 Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1204,
    "Description": "Calculates the current percentage change from the average enter price and compares it with the take profit value.",
    "CommandName": "TakeProfit",
    "ReturnDescription": "Returns true if the take profit has been reached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Take profit percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TakeProfitLimitOrderType",
    "Command": 2006,
    "Description": "Take-profit limit order type enum with a standard timeout of 10 minutes. When the exchange does not support this type, an error will be thrown and bot execution is stopped. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the TakeProfitLimitOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TakeProfitMarketOrderType",
    "Command": 2007,
    "Description": "Take-Profit-Market order type enum. When the exchange does not support this type, an error will be thrown and bot execution is stopped. Used by SetOrderType() or PlaceOrders commands.",
    "ReturnDescription": "Returns the TakeProfitMarketOrderType enum.",
    "CommandType": 15,
    "Category": 13,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5805,
      7400,
      7406,
      7404,
      7401,
      7405,
      7403,
      7402
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1209,
    "Description": "Calculates the defined position's current ROI percentage and gives a signal if the set profit is reached.",
    "CommandName": "TakeProfitROI",
    "ReturnDescription": "Returns true if the take profit has been reached.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Take profit ROI percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TakersFee",
    "ReturnDescription": "Returns takers fee of the market.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7213,
    "CommandType": 1,
    "Category": 37,
    "Description": "Gets takers fee of the market.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TakuriType",
    "Command": 7847,
    "Description": "Enumeration, returns an enum for TakuriType type.",
    "ReturnDescription": "Returns the TakuriType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Tan",
    "Description": "Calculates the tangent of the specified angle.",
    "ReturnDescription": "Returns the tangent of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4034,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Tanh",
    "Description": "Calculates the hyperbolic tangent of the specified angle.",
    "ReturnDescription": "Returns the hyperbolic tangent of the specified angle.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "Command": 4035,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TasukiGapType",
    "Command": 7848,
    "Description": "Enumeration, returns an enum for TasukiGapType type.",
    "ReturnDescription": "Returns the TasukiGapType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Teal",
    "Command": 1616,
    "Description": "Enumeration, returns a color hex string. Can be used as Teal, Teal() or with a specific opacity Teal(10).",
    "ReturnDescription": "Returns hex string of teal (#008080)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TEMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6473,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Triple Exponential Moving Average (TEMA), developed by Patrick Mulloy,\noffers a moving average with less lag then traditional exponential moving average.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the TEMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TemaType",
    "Command": 1806,
    "Description": "Enumeration, returns an enum for TEMA type.",
    "ReturnDescription": "Returns the TEMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TextDataType",
    "Command": 7904,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the TextDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeBlackCrowsType",
    "Command": 7801,
    "Description": "Enumeration, returns an enum for ThreeBlackCrowsType type.",
    "ReturnDescription": "Returns the ThreeBlackCrowsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeInsideType",
    "Command": 7802,
    "Description": "Enumeration, returns an enum for ThreeInsideType type.",
    "ReturnDescription": "Returns the ThreeInsideType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeLineStrikeType",
    "Command": 7803,
    "Description": "Enumeration, returns an enum for ThreeLineStrikeType type.",
    "ReturnDescription": "Returns the ThreeLineStrikeType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeOutsideType",
    "Command": 7804,
    "Description": "Enumeration, returns an enum for ThreeOutsideType type.",
    "ReturnDescription": "Returns the ThreeOutsideType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeStarsInSouthType",
    "Command": 7805,
    "Description": "Enumeration, returns an enum for ThreeStarsInSouthType type.",
    "ReturnDescription": "Returns the ThreeStarsInSouthType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThreeWhiteSoldiersType",
    "Command": 7806,
    "Description": "Enumeration, returns an enum for ThreeWhiteSoldiersType type.",
    "ReturnDescription": "Returns the ThreeWhiteSoldiersType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ThrustingType",
    "Command": 7849,
    "Description": "Enumeration, returns an enum for ThrustingType type.",
    "ReturnDescription": "Returns the ThrustingType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Time",
    "Command": 6801,
    "CommandType": 1,
    "Category": 35,
    "Description": "Gets the current unix timestamp. Based on UTC.",
    "ReturnDescription": "Returns the current unix timestamp.",
    "Parameters": [],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TradeAmount",
    "ReturnDescription": "Gets the trade amount.",
    "Parameters": [],
    "Command": 3605,
    "CommandType": 1,
    "Category": 19,
    "Description": "Gets the trade amount setting.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      4600
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TradeBotContainer",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "safetySignal",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Safety container result.",
        "ScriptType": null,
        "Suggestion": [
          1200,
          1201,
          1202,
          1203,
          1204,
          1205,
          1206,
          1207,
          1208,
          1209,
          1210,
          1211,
          1212,
          1213,
          1214,
          1215,
          1216,
          1217,
          1218,
          7002
        ]
      },
      {
        "Index": 0,
        "Name": "indicatorSignal",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Indicator container result.",
        "ScriptType": null,
        "Suggestion": [
          7000
        ]
      },
      {
        "Index": 0,
        "Name": "insuranceSignal",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Insurance container result.",
        "ScriptType": null,
        "Suggestion": [
          1009,
          1007,
          1001,
          1010,
          1002,
          1000,
          1008,
          1006,
          1005,
          1004,
          1003,
          1011,
          7001
        ]
      }
    ],
    "Command": 7003,
    "CommandType": 1,
    "Category": 36,
    "Description": "Checks the safety, indicator & insurance signal. If a safety is active, DoExitPosition() will be executed. When there are no safeties active, the indicator signal will be executed if the insurances agree.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "TradeMarketContainer",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7216,
    "CommandType": 1,
    "Category": 37,
    "Description": "Retrieves all the information on the trade market.",
    "ReturnDescription": "Returns the market information on an array.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "baseCurrency",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The base currency of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'BTC'.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "quoteCurrency",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The quote currency of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'USD'.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "contractName",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The contract name of the market. Empty on spot/margin markets.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "contractValue",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The value of a single contract, defined in their denomination.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "makersFee",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Makers fee of the market.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "takersFee",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Takers fee of the market.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "underlyingAsset",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The underlying assets of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'XBT'.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "minimumTradeAmount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The minimum trade amount on a the last price while keeping exchange specifications in consideration.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "minimumTradeVolume",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The minimum trade volume. Denominated in the quote currency.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "calculatedMinTradeAmount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The minimum trade amount on a the last price while keeping exchange specifications in consideration.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "profitLabel",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The profit label of the market. For reflection, in case the market is Bitstamp BTC/USD it will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'XBT'.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "amountLabel",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount label of the market. For reflection, in case the market is Bitstamp BTC/USD it will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'contract(s)'.",
        "ScriptType": null,
        "Suggestion": [
          6201,
          6202,
          6203,
          6204,
          6205,
          6206
        ]
      },
      {
        "Index": 0,
        "Name": "marketType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market type enumeration of the market.",
        "ScriptType": null,
        "Suggestion": [
          3303,
          3202,
          2802,
          2801,
          2800
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1006,
    "Description": "Only allows a trade to occur once per bar. Signals produced during a traded bar are blocked.",
    "CommandName": "TradeOncePerBar",
    "ReturnDescription": "Returns true when new bar opens or no trade occurred during a bar.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Interval of the bar in minutes.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1005,
    "Description": "Checks the current market condition for sideways movement.",
    "CommandName": "TradeOnlySideways",
    "ReturnDescription": "Returns true if the trade is allowed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Sideways movement threshold.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1004,
    "Description": "Checks the current market condition for a trend.",
    "CommandName": "TradeOnlyTrending",
    "ReturnDescription": "Returns true if the trade is allowed.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "threshold",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trend strength threshold.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "interval",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ticks interval.",
        "ScriptType": null,
        "Suggestion": [
          3404,
          4403,
          3601
        ]
      },
      {
        "Index": 0,
        "Name": "fullCandles",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "If true, the last closed candles will be returned.",
        "ScriptType": null,
        "Suggestion": [
          3212,
          3203
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the tick. Default is the selected main market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1205,
    "Description": "Keeps track of the highest/lowest recorded price and adjust the stop loss accordingly when the arm% has been reached.",
    "CommandName": "TrailingArmStopLoss",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trailing stop loss percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "arm",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The Arm percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1206,
    "Description": "Keeps track of the highest/lowest recorded price and adjust the stop loss accordingly.",
    "CommandName": "TrailingStopLoss",
    "ReturnDescription": "Returns true if the stop loss has been hit.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "percentage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Trailing stop loss percentage.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The direction of the position. PositionLong or PositionShort. By default both.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "CommandType": 1,
    "Category": 14,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      7002
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TRANGE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6474,
    "CommandType": 1,
    "Category": 33,
    "Description": "The True Range (TRANGE) developed by J. Welles Wilder,\nis a technical analysis volatility indicator. The indicator does not provide an\nindication of price trend, simply the degree of price volatility.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the TRANGE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TRIMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6475,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Triangular Moving Average (TRIMA) is similar to other\nmoving averages in that it shows the average (or mean) price over a specified number\nof data points (usually a number of price bars). However, the triangular moving average\ndiffers in that it is double smoothed — which also means it is averaged twice.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the TRIMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TrimaType",
    "Command": 1807,
    "Description": "Enumeration, returns an enum for TRIMA type.",
    "ReturnDescription": "Returns the TRIMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TristarType",
    "Command": 7850,
    "Description": "Enumeration, returns an enum for TristarType type.",
    "ReturnDescription": "Returns the TristarType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TRIX",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6476,
    "CommandType": 1,
    "Category": 33,
    "Description": "TRIX is a momentum oscillator that displays the percent rate of change of a triple exponentially smoothed moving average.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the TRIX result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Truncate",
    "Description": "Truncates a value (or values if table) to the nearest integer or to the specified number of fractional digits.",
    "ReturnDescription": "Returns the truncated number.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "input",
        "Type": 6,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source value(s).",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "digits",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of digits after decimal point.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403
        ]
      }
    ],
    "Command": 4044,
    "CommandType": 1,
    "Category": 21,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 6,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TSF",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6477,
    "CommandType": 1,
    "Category": 33,
    "Description": "Time Series Forecast (TSF) is a linear\n regression calculation that plots each bar’s current regression\n value using the least square fit method. This indicator is sometimes\n referred to as a moving linear regression similar to a moving average.\n For example, the TSF value that covers 10 days will have the same\n value as a 10-day Time Series Forecast. This differs slightly from\n the Linear Regression indicator in that the Linear Regression indicator\n does not add the slope to the ending value of the regression line.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the TSF result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "periodA",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "First smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "periodB",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Second smoothing period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6478,
    "CommandType": 1,
    "Category": 33,
    "Description": "The True Strength Index (TSI) is a momentum oscillator based on a double smoothing of price changes.",
    "ReturnDescription": "Returns the TSI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TupleDataType",
    "Command": 7910,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the TupleDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TwoCrowsType",
    "Command": 7800,
    "Description": "Enumeration, returns an enum for TwoCrowsType type.",
    "ReturnDescription": "Returns the TwoCrowsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "TYPPRICE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6479,
    "CommandType": 1,
    "Category": 33,
    "Description": "Typical Price (TYPPRICE) is simply an average of asset's price.\nThe Median Price (MEDPRICE) and Weighted Close Price (WCLPRICE) are similar indicators.\nThe Typical Price indicator provides a simple, single-line plot of the asset's average price.",
    "ReturnDescription": "Returns the TYPPRICE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UDRSI",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6480,
    "CommandType": 1,
    "Category": 33,
    "Description": "The UpDown RSI (UDRSI) is an RSI Based Indicator that uses\nan alternative formula to calculate the momentum oscillator. This Indicator works exactly like\nRSI but instead of determining this from the difference in price, it is calculated by what\nis called trend stepping. Trend stepping basically measures the closing price of a range of\ncandles and when the price of one candle is lower than the next, it is calculated as 1 price\nstep up. Because of this alternative calculation of Relative Strength Index, Up Down RSI\nproduces some unique Trade Signals.",
    "ReturnDescription": "Returns the UDRSI result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ULTOSC",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "periodA",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Fast period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "periodB",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Mid period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "periodC",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Slow period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6481,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Ultimate Oscillator (ULTOSC), developed by Larry Williams,\nis a momentum oscillator designed to capture momentum across three different timeframes.\nThe multiple timeframe objective seeks to avoid the pitfalls of other oscillators. Many\nmomentum oscillators surge at the beginning of a strong advance, only to form a bearish\ndivergence as the advance continues. This is because they are stuck with one timeframe.\nThe Ultimate Oscillator attempts to correct this fault by incorporating longer timeframes\ninto the basic formula. Williams identified a buy signal a based on a bullish divergence\nand a sell signal based on a bearish divergence.",
    "ReturnDescription": "Returns the ULTOSC result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UnderlyingAsset",
    "ReturnDescription": "Returns the underlying assets as string.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7214,
    "CommandType": 1,
    "Category": 37,
    "Description": "Returns the underlying assets of the market. For reflection, in case we are on Bitstamp BTC/USD it will return 'BTC'. When we are on BitMEX XBT/USD (XBTUSD), it will return 'XBT'.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      6201,
      6202,
      6203,
      6204,
      6205,
      6206
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UniqueThreeRiverType",
    "Command": 7851,
    "Description": "Enumeration, returns an enum for UniqueThreeRiverType type.",
    "ReturnDescription": "Returns the UniqueThreeRiverType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UnknownDataType",
    "Command": 7900,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the UnknownDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UpsideGapTwoCrowsType",
    "Command": 7852,
    "Description": "Enumeration, returns an enum for UpsideGapTwoCrowsType type.",
    "ReturnDescription": "Returns the UpsideGapTwoCrowsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UsedMargin",
    "Command": 7205,
    "CommandType": 1,
    "Category": 37,
    "Description": "Calculates the used margin for a specific position.",
    "ReturnDescription": "Returns the amount in the underlying currency value.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "price",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Position price.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Position amount.",
        "ScriptType": null,
        "Suggestion": []
      },
      {
        "Index": 0,
        "Name": "leverage",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Leverage ratio. Use 0 for cross-margin.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          3603
        ]
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UserDataDataType",
    "Command": 7909,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the UserDataDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UserPositionContainer",
    "Command": 7606,
    "CommandType": 1,
    "Category": 39,
    "Description": "Gets all the information from the open user position.",
    "ReturnDescription": "Returns an array with position information.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount or InputAccountMarket for example.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market returned by PriceMarket(), InputAccountMarket() or InputMarket() for example.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "leverage",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Deprecated, Can be ignored.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          3603
        ]
      },
      {
        "Index": 0,
        "Name": "direction",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Direction of the position PositionLong or PositionShort. Empty for any. If there is both a long and short position, the long position will be returned.",
        "ScriptType": null,
        "Suggestion": [
          2401,
          2402,
          2400
        ]
      }
    ],
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The market of the position.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      },
      {
        "Index": 0,
        "Name": "isLong",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true when the direction is long.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "isShort",
        "Type": 3,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Set on true when the direction is short.",
        "ScriptType": null,
        "Suggestion": [
          3211,
          3210,
          3206,
          3300,
          6019,
          3303,
          3302,
          3301,
          3801,
          3802,
          3800,
          3804,
          3803,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403,
          7402,
          7407
        ]
      },
      {
        "Index": 0,
        "Name": "enterPrice",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The average enter price.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount open in the position.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          7400,
          7406,
          7404,
          7405,
          7401,
          7403
        ]
      },
      {
        "Index": 0,
        "Name": "profit",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The realized + unrealized profits.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      },
      {
        "Index": 0,
        "Name": "roi",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The ROI based on the used margin and realized + unrealized profits.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      4406,
      4403
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "UseSignalIf",
    "Command": 6010,
    "Description": "Marks the signal to be used when its matches a certain signal.",
    "ReturnDescription": "Returns the original signal.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "signal",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The original signal.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      },
      {
        "Index": 0,
        "Name": "signalToUse",
        "Type": 2,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The signal to ignore. SignalLong, SignalShort or SignalExitPosition.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3803,
          424,
          6012,
          6007,
          6010,
          6008,
          6015,
          6018,
          6016,
          6017,
          6014,
          6006,
          6002,
          7000,
          7003,
          800,
          801,
          802,
          803,
          804,
          805,
          806,
          807,
          808,
          809,
          810,
          811,
          812,
          813,
          814,
          815,
          816,
          817,
          818,
          819,
          820,
          821,
          822,
          823,
          824,
          825,
          826,
          827,
          828,
          829,
          830,
          831,
          832,
          833,
          834,
          835,
          836,
          837,
          838,
          839,
          840,
          841,
          842,
          843,
          844,
          845,
          846,
          850,
          851,
          852
        ]
      }
    ],
    "CommandType": 1,
    "Category": 31,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3202,
      3803,
      424,
      6012,
      6007,
      6010,
      6008,
      6015,
      6018,
      6016,
      6017,
      6014,
      6006,
      6002,
      7000,
      7003
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "VAR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "deviation",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The amount of deviation.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6482,
    "CommandType": 1,
    "Category": 33,
    "Description": "Variance (VAR), developed by Dr. Rene Koch,\nis the variance ratio indicator that measures the degree of mean reversion or\ntrendiness in a time series. It is an easy and fast way to detect whether\na price series is trending, mean reverting or following a random walk.",
    "ReturnDescription": "Returns the VAR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "VoidDataType",
    "Command": 7911,
    "Description": "Enumeration, returns a data type enum.",
    "ReturnDescription": "Returns the VoidDataType enum.",
    "CommandType": 15,
    "Category": 43,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "VoidType",
    "Command": 2208,
    "Description": "Enumeration, returns a parameter enum. Used by DefineParameter() or DefineOutput() for example.",
    "ReturnDescription": "Returns the VoidType enum.",
    "CommandType": 15,
    "Category": 10,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      604,
      602,
      603
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "VolumePriceSource",
    "Command": 8207,
    "Description": "Enumeration, returns an enum for Volume Source type.",
    "ReturnDescription": "Returns the Volume Source type enum.",
    "CommandType": 15,
    "Category": 46,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      5214
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1012,
    "Description": "Blocks any signal until a certain number of minutes have passed since the last placed order. This includes orders executed in an update cycle",
    "CommandName": "WaitAfterOrder",
    "ReturnDescription": "Returns true when the last placed order is a certain number of minutes ago.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of minutes to wait after the last order.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "Command": 1003,
    "Description": "Blocks any signal until a certain number of minutes have passed since the last trade.",
    "CommandName": "WaitAfterTrade",
    "ReturnDescription": "Returns true when the last trade is a certain number of minutes ago.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "timeout",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Number of minutes to wait after the last trade.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "positionId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional unique identifier. Required when the bot is trading multiple position at once.",
        "ScriptType": null,
        "Suggestion": [
          4200
        ]
      }
    ],
    "CommandType": 1,
    "Category": 15,
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407,
      7001
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WalletAmount",
    "ReturnDescription": "Returns the available amount.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount() or InputAccountMarket() for example. Can be left empty for default properties.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "coin",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Coin of which to retrieve the wallet amount.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "market",
        "Type": 0,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Optional market parameter for exchanges with separates wallet for each market.",
        "ScriptType": null,
        "Suggestion": [
          3402,
          3406,
          3411,
          3604
        ]
      }
    ],
    "Command": 7604,
    "CommandType": 1,
    "Category": 39,
    "Description": "Get the available amount in the wallet.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 1,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      7400,
      7406
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WalletCheck",
    "ReturnDescription": "Returns true if the wallet has enough funds.",
    "Parameters": [
      {
        "Index": 0,
        "Name": "accountId",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The guid returned by AccountGuid(), InputAccount() or InputAccountMarket() for example. Can be left empty for default properties.",
        "ScriptType": null,
        "Suggestion": [
          3401,
          3402,
          3406,
          3600
        ]
      },
      {
        "Index": 0,
        "Name": "coin",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Coin of which to retrieve the wallet amount.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "amount",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The minimum amount needed.",
        "ScriptType": null,
        "Suggestion": [
          4025,
          4018
        ]
      }
    ],
    "Command": 7605,
    "CommandType": 1,
    "Category": 39,
    "Description": "Checks if the wallet has enough of the funds.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 3,
    "OutputSuggestions": [
      3211,
      3210,
      3206,
      3300,
      6019,
      3303,
      3302,
      3301,
      3801,
      3802,
      3800,
      3804,
      3803,
      7400,
      7406,
      7404,
      7405,
      7401,
      7403,
      7402,
      7407
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WCLPRICE",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      }
    ],
    "Command": 6483,
    "CommandType": 1,
    "Category": 33,
    "Description": "Weighted Close Price (WCLPRICE) is simply an average of an asset's price.\nIt gets its name from the fact that extra weight is given to the closing price.\nThe Median Price (MEDPRICE) and Typical Price (TYPPRICE) are similar indicators.",
    "ReturnDescription": "Returns the WCLPRICE result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "White",
    "Command": 1617,
    "Description": "Enumeration, returns a color hex string. Can be used as White, White() or with a specific opacity White(10).",
    "ReturnDescription": "Returns hex string of white (#FFFFFF)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WILLR",
    "Parameters": [
      {
        "Index": 0,
        "Name": "high",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "High prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "low",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Low prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "close",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Close prices array.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6484,
    "CommandType": 1,
    "Category": 33,
    "Description": "Williams %R (WILLR), also known as the Williams Percent Range,\nis a type of momentum indicator that moves between 0 and -100 and measures overbought\nand oversold levels. The Williams %R may be used to find entry and exit points in the market.\nThis indicator is usually plotted on its own chart.",
    "ReturnDescription": "Returns the WILLR result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WiMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6485,
    "CommandType": 1,
    "Category": 33,
    "Description": "Wilder Moving Average (WiMA), also called Wilder's Smoothed Moving Average,\nis similar to the Exponential Moving Average. Compared to other moving averages,\nWilder's MA responds more slowly to price changes, where an n-period Wilder MA gives\nsimilar values to a 2n- period EMA. For example, a 14-period EMA has almost the\nsame values as a 7-period Wilder MA.",
    "ReturnDescription": "Returns the WiMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6486,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Weighted Moving Average (WMA) puts more weight on recent\ndata and less on past data. This is done by multiplying each bar's price by\na weighting factor. Because of its unique calculation, WMA will follow prices\nmore closely than a corresponding Simple Moving Average.",
    "ReturnDescription": "Returns the WMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WmaType",
    "Command": 1808,
    "Description": "Enumeration, returns an enum for WMA type.",
    "ReturnDescription": "Returns the WMA Type enum.",
    "CommandType": 15,
    "Category": 8,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      6406,
      6412,
      6442,
      6440,
      6445,
      6459,
      6471,
      6470
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "WriteExportData",
    "Command": 8401,
    "CommandType": 1,
    "Category": 22,
    "Description": "Write data to a file that can be exported later. File size is unlimited, use with caution.",
    "ReturnDescription": null,
    "Parameters": [
      {
        "Index": 0,
        "Name": "name",
        "Type": 0,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Name of the file to write the data to.",
        "ScriptType": null,
        "Suggestion": [
          4406
        ]
      },
      {
        "Index": 0,
        "Name": "values",
        "Type": 103,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The values to write to the file. Needs to match the number of headers defined in InitExportData.",
        "ScriptType": null,
        "Suggestion": []
      }
    ],
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 10,
    "OutputSuggestions": [],
    "ChangeTypes": []
  },
  {
    "CommandName": "WWS",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6487,
    "CommandType": 1,
    "Category": 33,
    "Description": "Welles Wilder's Smoothing (WWS), developed by J. Welles Wilder, Jr. and\nis part of the Wilder's RSI indicator implementation. This indicator smooths price\nmovements to help you identify and spot bullish and bearish trends.\nThis indicator is usually plotted on the price chart.",
    "ReturnDescription": "Returns the WWS result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "XSideGapThreeMethodsType",
    "Command": 7853,
    "Description": "Enumeration, returns an enum for XSideGapThreeMethodsType type.",
    "ReturnDescription": "Returns the XSideGapThreeMethodsType enum.",
    "CommandType": 15,
    "Category": 41,
    "Parameters": [],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 2,
    "OutputSuggestions": [
      3303,
      3202,
      6490,
      3413
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "Yellow",
    "Command": 1618,
    "Description": "Enumeration, returns a color hex string. Can be used as Yellow, Yellow() or with a specific opacity Yellow(10).",
    "ReturnDescription": "Returns hex string of yellow (#FFFF00)",
    "CommandType": 19,
    "Category": 6,
    "Parameters": [
      {
        "Index": 0,
        "Name": "opacity",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": true,
        "AllowNull": false,
        "Description": "The color opacity, 0-100. By default 100.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "IsConstant": true,
    "OutputIndex": [],
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 0,
    "OutputSuggestions": [
      408,
      406,
      418,
      419,
      426,
      427,
      401
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ZLEMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6488,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Zero-Lag Exponential Moving Average (ZLEMA), developed by John Ehlers and Ric Way.\nAs is the case with the double exponential moving average (DEMA) and the triple exponential moving average (TEMA)\nand as indicated by the name, the aim is to eliminate the inherent lag associated to all trend following\nindicators which average a price over time. The idea is do a regular exponential moving average (EMA) calculation\nbut on a de-lagged data instead of doing it on the regular data. Data is de-lagged by removing the data from \"lag\"\ndays ago thus removing (or attempting to) the cumulative effect of the moving average.",
    "ReturnDescription": "Returns the ZLEMA result.",
    "OutputIndex": [],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": false,
    "OutputType": 7,
    "OutputSuggestions": [
      3202,
      3204,
      3209,
      3205,
      3201,
      4008,
      4033,
      4025,
      4018,
      4000,
      4041,
      408,
      6001,
      6000,
      6003,
      6005
    ],
    "ChangeTypes": []
  },
  {
    "CommandName": "ZLMA",
    "Parameters": [
      {
        "Index": 0,
        "Name": "prices",
        "Type": 7,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Source data.",
        "ScriptType": null,
        "Suggestion": [
          5200,
          5211,
          5209,
          5205,
          5206,
          5201,
          5204,
          5203,
          5207,
          5208,
          5215,
          5216
        ]
      },
      {
        "Index": 0,
        "Name": "period",
        "Type": 1,
        "IsRequired": true,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Period length.",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maType",
        "Type": 2,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "The type of Moving Average.",
        "ScriptType": null,
        "Suggestion": [
          3407,
          1804,
          1801,
          1808,
          1800,
          1806,
          1807,
          1802,
          1803,
          1805
        ]
      },
      {
        "Index": 0,
        "Name": "maPeriod1",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Additional parameter used with 'kama' and 'mama' types. (1)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      },
      {
        "Index": 0,
        "Name": "maPeriod2",
        "Type": 1,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "Additional parameter used with 'kama' and 'mama' types. (2)",
        "ScriptType": null,
        "Suggestion": [
          3400,
          4403,
          4205
        ]
      }
    ],
    "Command": 6489,
    "CommandType": 1,
    "Category": 33,
    "Description": "The Zero Lag Moving Average (ZLMA) is the same as ZLEMA, but opens up the possibility to change the\ntype of the moving average. The idea is do a regular moving average (MA) calculation but on a de-lagged data instead of doing\nit on the regular data. Data is de-lagged by removing the data from \"lag\" days ago thus removing (or attempting to) the\ncumulative effect of the moving average.",
    "ReturnDescription": "Returns the ZLMA result in an array.",
    "OutputIndex": [
      {
        "Index": 0,
        "Name": "ma1",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MA1 result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      },
      {
        "Index": 0,
        "Name": "ma2",
        "Type": 7,
        "IsRequired": false,
        "IsHidden": false,
        "IsField": false,
        "AllowNull": false,
        "Description": "MA2 result.",
        "ScriptType": null,
        "Suggestion": [
          3202,
          3204,
          3209,
          3205,
          3201,
          4008,
          4033,
          4025,
          4018,
          4000,
          4041,
          408,
          6001,
          6000,
          6003,
          6005
        ]
      }
    ],
    "IsConstant": false,
    "IsPrimary": true,
    "RequiresCall": false,
    "Resizable": false,
    "OutputHidden": true,
    "OutputType": 4,
    "OutputSuggestions": [
      5
    ],
    "ChangeTypes": []
  }
];
